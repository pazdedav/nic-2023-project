[
  {
    "PolicyDefinitions": [
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e56962a6-4747-49cd-b67b-bf8b01975c4c",
        "Name": "e56962a6-4747-49cd-b67b-bf8b01975c4c",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/e56962a6-4747-49cd-b67b-bf8b01975c4c",
        "Properties": {
          "parameters": {
            "listOfAllowedLocations": {
              "allowedValues": null,
              "defaultValue": null,
              "metadata": {
                "description": "The list of locations that can be specified when deploying resources.",
                "displayName": "Allowed locations",
                "strongType": "location"
              },
              "schema": null,
              "type": "Array"
            }
          },
          "description": "This policy enables you to restrict the locations your organization can specify when deploying resources. Use to enforce your geo-compliance requirements. Excludes resource groups, Microsoft.AzureActiveDirectory/b2cDirectories, and resources that use the 'global' region.",
          "displayName": "Allowed locations",
          "metadata": {
            "category": "General",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "deny"
            },
            "if": {
              "allOf": [
                {
                  "field": "location",
                  "notIn": "[parameters('listOfAllowedLocations')]"
                },
                {
                  "field": "location",
                  "notEquals": "global"
                },
                {
                  "field": "type",
                  "notEquals": "Microsoft.AzureActiveDirectory/b2cDirectories"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "e56962a6-4747-49cd-b67b-bf8b01975c4c"
      }
    ],
    "ResourceId": "/providers/Microsoft.Management/managementGroups/pazdedav/providers/Microsoft.Authorization/policyAssignments/d28abf66cc7b46b2a8e71b84",
    "ResourceName": "d28abf66cc7b46b2a8e71b84",
    "PolicyAssignmentId": "/providers/Microsoft.Management/managementGroups/pazdedav/providers/Microsoft.Authorization/policyAssignments/d28abf66cc7b46b2a8e71b84",
    "ResourceType": null,
    "Name": "d28abf66cc7b46b2a8e71b84",
    "ResourceGroupName": null,
    "Location": "global",
    "Properties": {
      "Parameters": {
        "listOfAllowedLocations": {
          "value": [
            "global",
            "norwayeast",
            "norwaywest",
            "westeurope"
          ]
        }
      },
      "Metadata": {
        "createdBy": "640f8f11-9291-4fb8-a8ae-c0808a747781",
        "createdOn": "2023-11-06T22:28:16.828Z",
        "updatedOn": null,
        "updatedBy": null,
        "parameterScopes": {
          "listOfAllowedLocations": "/providers/Microsoft.Management/managementGroups/pazdedav"
        },
        "assignedBy": "David Pazdera"
      },
      "Description": "Allowing NOE and WEU locations (plus Global).",
      "EnforcementMode": null,
      "Scope": "/providers/Microsoft.Management/managementGroups/pazdedav",
      "NonComplianceMessages": [
        {
          "policyDefinitionReferenceId": null,
          "message": "Only NOE, NOW, WEU and Global regions are allowed."
        }
      ],
      "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e56962a6-4747-49cd-b67b-bf8b01975c4c",
      "DisplayName": "Allowed locations",
      "NotScope": null
    },
    "SubscriptionId": "",
    "Sku": null
  },
  {
    "PolicyDefinitions": [
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/96670d01-0a4d-4649-9c89-2d3abc0a5025",
        "Name": "96670d01-0a4d-4649-9c89-2d3abc0a5025",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/96670d01-0a4d-4649-9c89-2d3abc0a5025",
        "Properties": {
          "parameters": {
            "tagName": {
              "allowedValues": null,
              "defaultValue": null,
              "metadata": {
                "description": "Name of the tag, such as 'environment'",
                "displayName": "Tag Name"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Enforces existence of a tag on resource groups.",
          "displayName": "Require a tag on resource groups",
          "metadata": {
            "category": "Tags",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "deny"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Resources/subscriptions/resourceGroups"
                },
                {
                  "field": "[concat('tags[', parameters('tagName'), ']')]",
                  "exists": "false"
                }
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "96670d01-0a4d-4649-9c89-2d3abc0a5025"
      }
    ],
    "ResourceId": "/providers/Microsoft.Management/managementGroups/pazdedav/providers/Microsoft.Authorization/policyAssignments/c9ab9e9b31d54f84b1c4653b",
    "ResourceName": "c9ab9e9b31d54f84b1c4653b",
    "PolicyAssignmentId": "/providers/Microsoft.Management/managementGroups/pazdedav/providers/Microsoft.Authorization/policyAssignments/c9ab9e9b31d54f84b1c4653b",
    "ResourceType": null,
    "Name": "c9ab9e9b31d54f84b1c4653b",
    "ResourceGroupName": null,
    "Location": "norwayeast",
    "Properties": {
      "Parameters": {
        "tagName": {
          "value": "project"
        }
      },
      "Metadata": {
        "updatedBy": null,
        "updatedOn": null,
        "createdOn": "2023-11-02T14:56:44.89Z",
        "createdBy": "640f8f11-9291-4fb8-a8ae-c0808a747781",
        "assignedBy": "David Pazdera",
        "parameterScopes": {}
      },
      "Description": "Require project tag on RGs.",
      "EnforcementMode": null,
      "Scope": "/providers/Microsoft.Management/managementGroups/pazdedav",
      "NonComplianceMessages": [
        {
          "policyDefinitionReferenceId": null,
          "message": "Policy violation: you must provide project resource tag on Resource Groups"
        }
      ],
      "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/96670d01-0a4d-4649-9c89-2d3abc0a5025",
      "DisplayName": "Require a tag on resource groups",
      "NotScope": null
    },
    "SubscriptionId": "",
    "Sku": null
  },
  {
    "PolicyDefinitions": [
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/cd3aa116-8754-49c9-a813-ad46512ece54",
        "Name": "cd3aa116-8754-49c9-a813-ad46512ece54",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/cd3aa116-8754-49c9-a813-ad46512ece54",
        "Properties": {
          "parameters": {
            "tagName": {
              "allowedValues": null,
              "defaultValue": null,
              "metadata": {
                "description": "Name of the tag, such as 'environment'",
                "displayName": "Tag Name"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Adds or replaces the specified tag and value from the parent resource group when any resource is created or updated. Existing resources can be remediated by triggering a remediation task.",
          "displayName": "Inherit a tag from the resource group",
          "metadata": {
            "category": "Tags",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "modify",
              "details": {
                "roleDefinitionIds": [
                  "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                ],
                "operations": [
                  {
                    "value": "[resourceGroup().tags[parameters('tagName')]]",
                    "field": "[concat('tags[', parameters('tagName'), ']')]",
                    "operation": "addOrReplace"
                  }
                ]
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "[concat('tags[', parameters('tagName'), ']')]",
                  "notEquals": "[resourceGroup().tags[parameters('tagName')]]"
                },
                {
                  "value": "[resourceGroup().tags[parameters('tagName')]]",
                  "notEquals": ""
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "cd3aa116-8754-49c9-a813-ad46512ece54"
      }
    ],
    "ResourceId": "/providers/Microsoft.Management/managementGroups/pazdedav/providers/Microsoft.Authorization/policyAssignments/1bae4adb0d5c49b983f33715",
    "ResourceName": "1bae4adb0d5c49b983f33715",
    "PolicyAssignmentId": "/providers/Microsoft.Management/managementGroups/pazdedav/providers/Microsoft.Authorization/policyAssignments/1bae4adb0d5c49b983f33715",
    "ResourceType": null,
    "Name": "1bae4adb0d5c49b983f33715",
    "ResourceGroupName": null,
    "Location": "norwayeast",
    "Properties": {
      "Parameters": {
        "tagName": {
          "value": "project"
        }
      },
      "Metadata": {
        "updatedBy": null,
        "updatedOn": null,
        "createdOn": "2023-11-02T14:58:20.549Z",
        "createdBy": "640f8f11-9291-4fb8-a8ae-c0808a747781",
        "assignedBy": "David Pazdera",
        "parameterScopes": {}
      },
      "Description": "Inherit the project tag from RG to all resources",
      "EnforcementMode": null,
      "Scope": "/providers/Microsoft.Management/managementGroups/pazdedav",
      "NonComplianceMessages": [
        {
          "policyDefinitionReferenceId": null,
          "message": "Policy violation: You must provide a project tag for resources."
        }
      ],
      "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/cd3aa116-8754-49c9-a813-ad46512ece54",
      "DisplayName": "Inherit a tag from the resource group",
      "NotScope": null
    },
    "SubscriptionId": "",
    "Sku": null
  },
  {
    "PolicyDefinitions": [
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a4fe33eb-e377-4efb-ab31-0784311bc499",
        "Name": "a4fe33eb-e377-4efb-ab31-0784311bc499",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/a4fe33eb-e377-4efb-ab31-0784311bc499",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "This policy audits any Windows/Linux virtual machines (VMs) if the Log Analytics agent is not installed which Security Center uses to monitor for security vulnerabilities and threats",
          "displayName": "Log Analytics agent should be installed on your virtual machine for Azure Security Center monitoring",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "d1db3318-01ff-16de-29eb-28b344515626",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.ClassicCompute/virtualMachines",
                "Microsoft.Compute/virtualMachines"
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "a4fe33eb-e377-4efb-ab31-0784311bc499"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a3a6ea0c-e018-4933-9ef0-5aaa1501449b",
        "Name": "a3a6ea0c-e018-4933-9ef0-5aaa1501449b",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/a3a6ea0c-e018-4933-9ef0-5aaa1501449b",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Security Center collects data from your Azure virtual machines (VMs) to monitor for security vulnerabilities and threats.",
          "displayName": "Log Analytics agent should be installed on your virtual machine scale sets for Azure Security Center monitoring",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "45cfe080-ceb1-a91e-9743-71551ed24e94",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Compute/virtualMachineScaleSets"
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "a3a6ea0c-e018-4933-9ef0-5aaa1501449b"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0a075868-4c26-42ef-914c-5bc007359560",
        "Name": "0a075868-4c26-42ef-914c-5bc007359560",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0a075868-4c26-42ef-914c-5bc007359560",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "'Audit' allows a non-compliant resource to be created, but flags it as non-compliant. 'Deny' blocks the resource creation. 'Disable' turns off the policy.",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            },
            "maximumValidityInMonths": {
              "allowedValues": null,
              "defaultValue": 12,
              "metadata": {
                "description": "The limit to how long a certificate may be valid for. Certificates with lengthy validity periods aren't best practice.",
                "displayName": "The maximum validity in months"
              },
              "schema": null,
              "type": "Integer"
            }
          },
          "description": "Manage your organizational compliance requirements by specifying the maximum amount of time that a certificate can be valid within your key vault.",
          "displayName": "[Preview]: Certificates should have the specified maximum validity period",
          "metadata": {
            "category": "Key Vault",
            "version": "2.2.0-preview",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6551Z",
            "preview": true
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.KeyVault.Data/vaults/certificates"
                },
                {
                  "field": "Microsoft.KeyVault.Data/vaults/certificates/properties.validityInMonths",
                  "greater": "[parameters('maximumValidityInMonths')]"
                }
              ]
            }
          },
          "mode": "Microsoft.KeyVault.Data"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "0a075868-4c26-42ef-914c-5bc007359560"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/98728c90-32c7-4049-8429-847dc0f4fe37",
        "Name": "98728c90-32c7-4049-8429-847dc0f4fe37",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/98728c90-32c7-4049-8429-847dc0f4fe37",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "'Audit' allows a non-compliant resource to be created, but flags it as non-compliant. 'Deny' blocks the resource creation. 'Disable' turns off the policy.",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Secrets should have a defined expiration date and not be permanent. Secrets that are valid forever provide a potential attacker with more time to compromise them. It is a recommended security practice to set expiration dates on secrets.",
          "displayName": "Key Vault secrets should have an expiration date",
          "metadata": {
            "category": "Key Vault",
            "version": "1.0.2",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6551Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.KeyVault.Data/vaults/secrets"
                },
                {
                  "field": "Microsoft.KeyVault.Data/vaults/secrets/attributes.expiresOn",
                  "exists": false
                }
              ]
            }
          },
          "mode": "Microsoft.KeyVault.Data"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "98728c90-32c7-4049-8429-847dc0f4fe37"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/152b15f7-8e1f-4c1f-ab71-8c010ba5dbc0",
        "Name": "152b15f7-8e1f-4c1f-ab71-8c010ba5dbc0",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/152b15f7-8e1f-4c1f-ab71-8c010ba5dbc0",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "'Audit' allows a non-compliant resource to be created, but flags it as non-compliant. 'Deny' blocks the resource creation. 'Disable' turns off the policy.",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Cryptographic keys should have a defined expiration date and not be permanent. Keys that are valid forever provide a potential attacker with more time to compromise the key. It is a recommended security practice to set expiration dates on cryptographic keys.",
          "displayName": "Key Vault keys should have an expiration date",
          "metadata": {
            "category": "Key Vault",
            "version": "1.0.2",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6551Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.KeyVault.Data/vaults/keys"
                },
                {
                  "field": "Microsoft.KeyVault.Data/vaults/keys/attributes.expiresOn",
                  "exists": false
                }
              ]
            }
          },
          "mode": "Microsoft.KeyVault.Data"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "152b15f7-8e1f-4c1f-ab71-8c010ba5dbc0"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/3c735d8a-a4ba-4a3a-b7cf-db7754cf57f4",
        "Name": "3c735d8a-a4ba-4a3a-b7cf-db7754cf57f4",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/3c735d8a-a4ba-4a3a-b7cf-db7754cf57f4",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Audit the OS vulnerabilities on your virtual machine scale sets to protect them from attacks.",
          "displayName": "Vulnerabilities in security configuration on your virtual machine scale sets should be remediated",
          "metadata": {
            "category": "Security Center",
            "version": "3.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "8941d121-f740-35f6-952c-6561d2b38d36",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Compute/virtualMachineScaleSets"
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "3c735d8a-a4ba-4a3a-b7cf-db7754cf57f4"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/26a828e1-e88f-464e-bbb3-c134a282b9de",
        "Name": "26a828e1-e88f-464e-bbb3-c134a282b9de",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/26a828e1-e88f-464e-bbb3-c134a282b9de",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Audit the existence and health of an endpoint protection solution on your virtual machines scale sets, to protect them from threats and vulnerabilities.",
          "displayName": "Endpoint protection solution should be installed on virtual machine scale sets",
          "metadata": {
            "category": "Security Center",
            "version": "3.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "e71020c2-860c-3235-cd39-04f3f8c936d2",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Compute/virtualMachineScaleSets"
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "26a828e1-e88f-464e-bbb3-c134a282b9de"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c3f317a7-a95c-4547-b7e7-11017ebdf2fe",
        "Name": "c3f317a7-a95c-4547-b7e7-11017ebdf2fe",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/c3f317a7-a95c-4547-b7e7-11017ebdf2fe",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Audit whether there are any missing system security updates and critical updates that should be installed to ensure that your Windows and Linux virtual machine scale sets are secure.",
          "displayName": "System updates on virtual machine scale sets should be installed",
          "metadata": {
            "category": "Security Center",
            "version": "3.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "bd20bd91-aaf1-7f14-b6e4-866de2f43146",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Compute/virtualMachineScaleSets"
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "c3f317a7-a95c-4547-b7e7-11017ebdf2fe"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ae89ebca-1c92-4898-ac2c-9f63decb045c",
        "Name": "ae89ebca-1c92-4898-ac2c-9f63decb045c",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/ae89ebca-1c92-4898-ac2c-9f63decb045c",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "To ensure secure configurations of in-guest settings of your machine, install the Guest Configuration extension. In-guest settings that the extension monitors include the configuration of the operating system, application configuration or presence, and environment settings. Once installed, in-guest policies will be available such as 'Windows Exploit guard should be enabled'. Learn more at https://aka.ms/gcpol.",
          "displayName": "Guest Configuration extension should be installed on your machines",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.3",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Compute/virtualMachines/extensions",
                "existenceCondition": {
                  "allOf": [
                    {
                      "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                      "equals": "Microsoft.GuestConfiguration"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/extensions/provisioningState",
                      "equals": "Succeeded"
                    }
                  ]
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachines"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.Compute/imagePublisher",
                      "in": [
                        "esri",
                        "incredibuild",
                        "MicrosoftDynamicsAX",
                        "MicrosoftSharepoint",
                        "MicrosoftVisualStudio",
                        "MicrosoftWindowsDesktop",
                        "MicrosoftWindowsServerHPCPack",
                        "microsoft-aks",
                        "qubole-inc",
                        "datastax",
                        "couchbase",
                        "scalegrid",
                        "checkpoint",
                        "paloaltonetworks",
                        "debian",
                        "credativ"
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "MicrosoftWindowsServer"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "notLike": "2008*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "MicrosoftSQLServer"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "notLike": "SQL2008*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "microsoft-dsvm"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "dsvm-windows"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "microsoft-ads"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "in": [
                            "standard-data-science-vm",
                            "windows-data-science-vm"
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "batch"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "rendering-windows2016"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "center-for-internet-security-inc"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "like": "cis-windows-server-201*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "pivotal"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "like": "bosh-windows-server*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "cloud-infrastructure-services"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "like": "ad*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                              "exists": "true"
                            },
                            {
                              "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                              "like": "Windows*"
                            }
                          ]
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "exists": "false"
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "OpenLogic"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "notLike": "6*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "Oracle"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "notLike": "6*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "RedHat"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "notLike": "6*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "center-for-internet-security-inc"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "notLike": "cis-windows*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "Suse"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "notLike": "11*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "Canonical"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "notLike": "12*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "microsoft-dsvm"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "notLike": "dsvm-win*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "cloudera"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "notLike": "6*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "microsoft-ads"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "like": "linux*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/virtualMachines/osProfile.linuxConfiguration",
                              "exists": "true"
                            },
                            {
                              "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                              "like": "Linux*"
                            }
                          ]
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "exists": "false"
                            },
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "notIn": [
                                "OpenLogic",
                                "RedHat",
                                "credativ",
                                "Suse",
                                "Canonical",
                                "microsoft-dsvm",
                                "cloudera",
                                "microsoft-ads",
                                "center-for-internet-security-inc",
                                "Oracle",
                                "AzureDatabricks",
                                "azureopenshift"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "ae89ebca-1c92-4898-ac2c-9f63decb045c"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/d26f7642-7545-4e18-9b75-8c9bbdee3a9a",
        "Name": "d26f7642-7545-4e18-9b75-8c9bbdee3a9a",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/d26f7642-7545-4e18-9b75-8c9bbdee3a9a",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "The Guest Configuration extension requires a system assigned managed identity. Azure virtual machines in the scope of this policy will be non-compliant when they have the Guest Configuration extension installed but do not have a system assigned managed identity. Learn more at https://aka.ms/gcpol",
          "displayName": "Virtual machines' Guest Configuration extension should be deployed with system-assigned managed identity",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Compute/virtualMachines",
                "name": "[first(split(field('fullName'), '/'))]",
                "existenceCondition": {
                  "field": "identity.type",
                  "contains": "SystemAssigned"
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachines/extensions"
                },
                {
                  "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                  "equals": "Microsoft.GuestConfiguration"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "d26f7642-7545-4e18-9b75-8c9bbdee3a9a"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/bed48b13-6647-468e-aa2f-1af1d3f4dd40",
        "Name": "bed48b13-6647-468e-aa2f-1af1d3f4dd40",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/bed48b13-6647-468e-aa2f-1af1d3f4dd40",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of this policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            },
            "IncludeArcMachines": {
              "allowedValues": [
                "true",
                "false"
              ],
              "defaultValue": "false",
              "metadata": {
                "description": "By selecting this option, you agree to be charged monthly per Arc connected machine.",
                "displayName": "Include Arc connected servers",
                "portalReview": "true"
              },
              "schema": null,
              "type": "String"
            },
            "NotAvailableMachineState": {
              "allowedValues": [
                "Compliant",
                "Non-Compliant"
              ],
              "defaultValue": "Compliant",
              "metadata": {
                "description": "Windows Defender Exploit Guard is only available starting with Windows 10/Windows Server with update 1709. Setting this value to 'Non-Compliant' shows machines with older versions on which Windows Defender Exploit Guard is not available (such as Windows Server 2012 R2) as non-compliant. Setting this value to 'Compliant' shows these machines as compliant.",
                "displayName": "Status if Windows Defender is not available on machine"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Windows Defender Exploit Guard uses the Azure Policy Guest Configuration agent. Exploit Guard has four components that are designed to lock down devices against a wide variety of attack vectors and block behaviors commonly used in malware attacks while enabling enterprises to balance their security risk and productivity requirements (Windows only).",
          "displayName": "Windows Defender Exploit Guard should be enabled on your machines",
          "metadata": {
            "category": "Guest Configuration",
            "version": "2.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z",
            "guestConfiguration": {
              "version": "1.*",
              "name": "WindowsDefenderExploitGuard",
              "configurationParameter": {
                "NotAvailableMachineState": "[WindowsDefenderExploitGuard]WindowsDefenderExploitGuard1;NotAvailableMachineState"
              }
            },
            "requiredProviders": [
              "Microsoft.GuestConfiguration"
            ]
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                "name": "WindowsDefenderExploitGuard",
                "existenceCondition": {
                  "allOf": [
                    {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                      "equals": "Compliant"
                    },
                    {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/parameterHash",
                      "equals": "[base64(concat('[WindowsDefenderExploitGuard]WindowsDefenderExploitGuard1;NotAvailableMachineState', '=', parameters('NotAvailableMachineState')))]"
                    }
                  ]
                }
              }
            },
            "if": {
              "anyOf": [
                {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "in": [
                            "esri",
                            "incredibuild",
                            "MicrosoftDynamicsAX",
                            "MicrosoftSharepoint",
                            "MicrosoftVisualStudio",
                            "MicrosoftWindowsDesktop",
                            "MicrosoftWindowsServerHPCPack"
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "2008*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftSQLServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "notLike": "SQL2008*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-dsvm"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "dsvm-win*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-ads"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "standard-data-science-vm",
                                "windows-data-science-vm"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "batch"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "rendering-windows2016"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "center-for-internet-security-inc"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "cis-windows-server-201*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "pivotal"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "bosh-windows-server*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "cloud-infrastructure-services"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "ad*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                  "exists": "true"
                                },
                                {
                                  "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                  "like": "Windows*"
                                }
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "exists": "false"
                                },
                                {
                                  "allOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "notLike": "2008*"
                                    },
                                    {
                                      "field": "Microsoft.Compute/imageOffer",
                                      "notLike": "SQL2008*"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "allOf": [
                    {
                      "value": "[parameters('IncludeArcMachines')]",
                      "equals": "true"
                    },
                    {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "type",
                              "equals": "Microsoft.HybridCompute/machines"
                            },
                            {
                              "field": "Microsoft.HybridCompute/imageOffer",
                              "like": "windows*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "type",
                              "equals": "Microsoft.ConnectedVMwarevSphere/virtualMachines"
                            },
                            {
                              "field": "Microsoft.ConnectedVMwarevSphere/virtualMachines/osProfile.osType",
                              "like": "windows*"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "bed48b13-6647-468e-aa2f-1af1d3f4dd40"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/72650e9f-97bc-4b2a-ab5f-9781a9fcecbc",
        "Name": "72650e9f-97bc-4b2a-ab5f-9781a9fcecbc",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/72650e9f-97bc-4b2a-ab5f-9781a9fcecbc",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of this policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            },
            "IncludeArcMachines": {
              "allowedValues": [
                "true",
                "false"
              ],
              "defaultValue": "false",
              "metadata": {
                "description": "By selecting this option, you agree to be charged monthly per Arc connected machine.",
                "displayName": "Include Arc connected servers",
                "portalReview": "true"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Requires that prerequisites are deployed to the policy assignment scope. For details, visit https://aka.ms/gcpol. Machines are non-compliant if the machine is not configured correctly for one of the recommendations in the Azure compute security baseline.",
          "displayName": "Windows machines should meet requirements of the Azure compute security baseline",
          "metadata": {
            "category": "Guest Configuration",
            "version": "2.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z",
            "guestConfiguration": {
              "version": "1.*",
              "name": "AzureWindowsBaseline"
            },
            "requiredProviders": [
              "Microsoft.GuestConfiguration"
            ]
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                "name": "AzureWindowsBaseline",
                "existenceCondition": {
                  "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                  "equals": "Compliant"
                }
              }
            },
            "if": {
              "anyOf": [
                {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "in": [
                            "esri",
                            "incredibuild",
                            "MicrosoftDynamicsAX",
                            "MicrosoftSharepoint",
                            "MicrosoftVisualStudio",
                            "MicrosoftWindowsDesktop",
                            "MicrosoftWindowsServerHPCPack"
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "2008*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftSQLServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "notLike": "SQL2008*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-dsvm"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "dsvm-win*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-ads"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "standard-data-science-vm",
                                "windows-data-science-vm"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "batch"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "rendering-windows2016"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "center-for-internet-security-inc"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "cis-windows-server-201*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "pivotal"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "bosh-windows-server*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "cloud-infrastructure-services"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "ad*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                  "exists": "true"
                                },
                                {
                                  "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                  "like": "Windows*"
                                }
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "exists": "false"
                                },
                                {
                                  "allOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "notLike": "2008*"
                                    },
                                    {
                                      "field": "Microsoft.Compute/imageOffer",
                                      "notLike": "SQL2008*"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "allOf": [
                    {
                      "value": "[parameters('IncludeArcMachines')]",
                      "equals": "true"
                    },
                    {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "type",
                              "equals": "Microsoft.HybridCompute/machines"
                            },
                            {
                              "field": "Microsoft.HybridCompute/imageOffer",
                              "like": "windows*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "type",
                              "equals": "Microsoft.ConnectedVMwarevSphere/virtualMachines"
                            },
                            {
                              "field": "Microsoft.ConnectedVMwarevSphere/virtualMachines/osProfile.osType",
                              "like": "windows*"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "72650e9f-97bc-4b2a-ab5f-9781a9fcecbc"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/fc9b3da7-8347-4380-8e70-0a0361d8dedd",
        "Name": "fc9b3da7-8347-4380-8e70-0a0361d8dedd",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/fc9b3da7-8347-4380-8e70-0a0361d8dedd",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of this policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            },
            "IncludeArcMachines": {
              "allowedValues": [
                "true",
                "false"
              ],
              "defaultValue": "false",
              "metadata": {
                "description": "By selecting this option, you agree to be charged monthly per Arc connected machine.",
                "displayName": "Include Arc connected servers",
                "portalReview": "true"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Requires that prerequisites are deployed to the policy assignment scope. For details, visit https://aka.ms/gcpol. Machines are non-compliant if the machine is not configured correctly for one of the recommendations in the Azure compute security baseline.",
          "displayName": "Linux machines should meet requirements for the Azure compute security baseline",
          "metadata": {
            "category": "Guest Configuration",
            "version": "2.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z",
            "guestConfiguration": {
              "version": "1.*",
              "name": "AzureLinuxBaseline"
            },
            "requiredProviders": [
              "Microsoft.GuestConfiguration"
            ]
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                "name": "AzureLinuxBaseline",
                "existenceCondition": {
                  "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                  "equals": "Compliant"
                }
              }
            },
            "if": {
              "anyOf": [
                {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "in": [
                            "microsoft-aks",
                            "qubole-inc",
                            "datastax",
                            "couchbase",
                            "scalegrid",
                            "checkpoint",
                            "paloaltonetworks",
                            "debian",
                            "credativ"
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "OpenLogic"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "6*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Oracle"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "6*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "RedHat"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "6*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "center-for-internet-security-inc"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "notLike": "cis-windows*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Suse"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "11*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Canonical"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "12*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-dsvm"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "notLike": "dsvm-win*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "cloudera"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "6*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-ads"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "linux*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/virtualMachines/osProfile.linuxConfiguration",
                                  "exists": "true"
                                },
                                {
                                  "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                  "like": "Linux*"
                                }
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "exists": "false"
                                },
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "notIn": [
                                    "OpenLogic",
                                    "RedHat",
                                    "credativ",
                                    "Suse",
                                    "Canonical",
                                    "microsoft-dsvm",
                                    "cloudera",
                                    "microsoft-ads",
                                    "center-for-internet-security-inc",
                                    "Oracle",
                                    "AzureDatabricks",
                                    "azureopenshift"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "allOf": [
                    {
                      "value": "[parameters('IncludeArcMachines')]",
                      "equals": "true"
                    },
                    {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "type",
                              "equals": "Microsoft.HybridCompute/machines"
                            },
                            {
                              "field": "Microsoft.HybridCompute/imageOffer",
                              "like": "linux*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "type",
                              "equals": "Microsoft.ConnectedVMwarevSphere/virtualMachines"
                            },
                            {
                              "field": "Microsoft.ConnectedVMwarevSphere/virtualMachines/osProfile.osType",
                              "like": "linux*"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "fc9b3da7-8347-4380-8e70-0a0361d8dedd"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/383856f8-de7f-44a2-81fc-e5135b5c2aa4",
        "Name": "383856f8-de7f-44a2-81fc-e5135b5c2aa4",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/383856f8-de7f-44a2-81fc-e5135b5c2aa4",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            },
            "requiredRetentionDays": {
              "allowedValues": null,
              "defaultValue": "365",
              "metadata": {
                "description": "The required resource logs retention in days",
                "displayName": "Required retention (days)"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Audit enabling of resource logs. This enables you to recreate activity trails to use for investigation purposes; when a security incident occurs or when your network is compromised",
          "displayName": "Resource logs in IoT Hub should be enabled",
          "metadata": {
            "category": "Internet of Things",
            "version": "3.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Insights/diagnosticSettings",
                "existenceCondition": {
                  "count": {
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                    "where": {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                                  "equals": "0"
                                },
                                {
                                  "value": "[padLeft(current('Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days'), 3, '0')]",
                                  "greaterOrEquals": "[padLeft(parameters('requiredRetentionDays'), 3, '0')]"
                                }
                              ]
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "not": {
                                "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                "equals": "true"
                              }
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "greaterOrEquals": 1
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Devices/IotHubs"
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "383856f8-de7f-44a2-81fc-e5135b5c2aa4"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/34c877ad-507e-4c82-993e-3452a6e0ad3c",
        "Name": "34c877ad-507e-4c82-993e-3452a6e0ad3c",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/34c877ad-507e-4c82-993e-3452a6e0ad3c",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "The effect determines what happens when the policy rule is evaluated to match",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Network access to storage accounts should be restricted. Configure network rules so only applications from allowed networks can access the storage account. To allow connections from specific internet or on-premises clients, access can be granted to traffic from specific Azure virtual networks or to public internet IP address ranges",
          "displayName": "Storage accounts should restrict network access",
          "metadata": {
            "category": "Storage",
            "version": "1.1.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Storage/storageAccounts"
                },
                {
                  "field": "Microsoft.Storage/storageAccounts/networkAcls.defaultAction",
                  "notEquals": "Deny"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "34c877ad-507e-4c82-993e-3452a6e0ad3c"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a451c1ef-c6ca-483d-87ed-f49761e3ffb5",
        "Name": "a451c1ef-c6ca-483d-87ed-f49761e3ffb5",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/a451c1ef-c6ca-483d-87ed-f49761e3ffb5",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Audit built-in roles such as 'Owner, Contributer, Reader' instead of custom RBAC roles, which are error prone. Using custom roles is treated as an exception and requires a rigorous review and threat modeling",
          "displayName": "Audit usage of custom RBAC roles",
          "metadata": {
            "category": "General",
            "version": "1.0.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Authorization/roleDefinitions"
                },
                {
                  "field": "Microsoft.Authorization/roleDefinitions/type",
                  "equals": "CustomRole"
                }
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "a451c1ef-c6ca-483d-87ed-f49761e3ffb5"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f9be5368-9bf5-4b84-9e0a-7850da98bb46",
        "Name": "f9be5368-9bf5-4b84-9e0a-7850da98bb46",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/f9be5368-9bf5-4b84-9e0a-7850da98bb46",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            },
            "requiredRetentionDays": {
              "allowedValues": null,
              "defaultValue": "365",
              "metadata": {
                "description": "The required resource logs retention in days",
                "displayName": "Required retention (days)"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Audit enabling of resource logs. This enables you to recreate activity trails to use for investigation purposes; when a security incident occurs or when your network is compromised",
          "displayName": "Resource logs in Azure Stream Analytics should be enabled",
          "metadata": {
            "category": "Stream Analytics",
            "version": "5.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Insights/diagnosticSettings",
                "existenceCondition": {
                  "count": {
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                    "where": {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                                  "equals": "0"
                                },
                                {
                                  "value": "[padLeft(current('Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days'), 3, '0')]",
                                  "greaterOrEquals": "[padLeft(parameters('requiredRetentionDays'), 3, '0')]"
                                }
                              ]
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                  "notEquals": "true"
                                },
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/storageAccountId",
                                  "exists": false
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "greaterOrEquals": 1
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.StreamAnalytics/streamingJobs"
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "f9be5368-9bf5-4b84-9e0a-7850da98bb46"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/404c3081-a854-4457-ae30-26a93ef643f9",
        "Name": "404c3081-a854-4457-ae30-26a93ef643f9",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/404c3081-a854-4457-ae30-26a93ef643f9",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "The effect determines what happens when the policy rule is evaluated to match",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Audit requirement of Secure transfer in your storage account. Secure transfer is an option that forces your storage account to accept requests only from secure connections (HTTPS). Use of HTTPS ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking",
          "displayName": "Secure transfer to storage accounts should be enabled",
          "metadata": {
            "category": "Storage",
            "version": "2.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Storage/storageAccounts"
                },
                {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "value": "[requestContext().apiVersion]",
                          "less": "2019-04-01"
                        },
                        {
                          "field": "Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly",
                          "exists": "false"
                        }
                      ]
                    },
                    {
                      "field": "Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly",
                      "equals": "false"
                    }
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "404c3081-a854-4457-ae30-26a93ef643f9"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1f314764-cb73-4fc9-b863-8eca98ac36e9",
        "Name": "1f314764-cb73-4fc9-b863-8eca98ac36e9",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/1f314764-cb73-4fc9-b863-8eca98ac36e9",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Audit provisioning of an Azure Active Directory administrator for your SQL server to enable Azure AD authentication. Azure AD authentication enables simplified permission management and centralized identity management of database users and other Microsoft services",
          "displayName": "An Azure Active Directory administrator should be provisioned for SQL servers",
          "metadata": {
            "category": "SQL",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Sql/servers/administrators"
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Sql/servers"
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "1f314764-cb73-4fc9-b863-8eca98ac36e9"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f8d36e2f-389b-4ee4-898d-21aeb69a0f45",
        "Name": "f8d36e2f-389b-4ee4-898d-21aeb69a0f45",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/f8d36e2f-389b-4ee4-898d-21aeb69a0f45",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            },
            "requiredRetentionDays": {
              "allowedValues": null,
              "defaultValue": "365",
              "metadata": {
                "description": "The required resource logs retention in days",
                "displayName": "Required retention (days)"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Audit enabling of resource logs. This enables you to recreate activity trails to use for investigation purposes; when a security incident occurs or when your network is compromised",
          "displayName": "Resource logs in Service Bus should be enabled",
          "metadata": {
            "category": "Service Bus",
            "version": "5.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Insights/diagnosticSettings",
                "existenceCondition": {
                  "count": {
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                    "where": {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                                  "equals": "0"
                                },
                                {
                                  "value": "[padLeft(current('Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days'), 3, '0')]",
                                  "greaterOrEquals": "[padLeft(parameters('requiredRetentionDays'), 3, '0')]"
                                }
                              ]
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                  "notEquals": "true"
                                },
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/storageAccountId",
                                  "exists": false
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "greaterOrEquals": 1
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.ServiceBus/namespaces"
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "f8d36e2f-389b-4ee4-898d-21aeb69a0f45"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/617c02be-7f02-4efd-8836-3180d47b6c68",
        "Name": "617c02be-7f02-4efd-8836-3180d47b6c68",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/617c02be-7f02-4efd-8836-3180d47b6c68",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "The effect determines what happens when the policy rule is evaluated to match",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Service Fabric provides three levels of protection (None, Sign and EncryptAndSign) for node-to-node communication using a primary cluster certificate. Set the protection level to ensure that all node-to-node messages are encrypted and digitally signed",
          "displayName": "Service Fabric clusters should have the ClusterProtectionLevel property set to EncryptAndSign",
          "metadata": {
            "category": "Service Fabric",
            "version": "1.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.ServiceFabric/clusters"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.ServiceFabric/clusters/fabricSettings[*].name",
                      "notEquals": "Security"
                    },
                    {
                      "field": "Microsoft.ServiceFabric/clusters/fabricSettings[*].parameters[*].name",
                      "notEquals": "ClusterProtectionLevel"
                    },
                    {
                      "field": "Microsoft.ServiceFabric/clusters/fabricSettings[*].parameters[*].value",
                      "notEquals": "EncryptAndSign"
                    }
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "617c02be-7f02-4efd-8836-3180d47b6c68"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b54ed75b-3e1a-44ac-a333-05ba39b99ff0",
        "Name": "b54ed75b-3e1a-44ac-a333-05ba39b99ff0",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/b54ed75b-3e1a-44ac-a333-05ba39b99ff0",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "The effect determines what happens when the policy rule is evaluated to match",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Audit usage of client authentication only via Azure Active Directory in Service Fabric",
          "displayName": "Service Fabric clusters should only use Azure Active Directory for client authentication",
          "metadata": {
            "category": "Service Fabric",
            "version": "1.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.ServiceFabric/clusters"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.ServiceFabric/clusters/azureActiveDirectory.tenantId",
                      "exists": "false"
                    },
                    {
                      "field": "Microsoft.ServiceFabric/clusters/azureActiveDirectory.tenantId",
                      "equals": ""
                    }
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "b54ed75b-3e1a-44ac-a333-05ba39b99ff0"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b4330a05-a843-4bc8-bf9a-cacce50c67f4",
        "Name": "b4330a05-a843-4bc8-bf9a-cacce50c67f4",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/b4330a05-a843-4bc8-bf9a-cacce50c67f4",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            },
            "requiredRetentionDays": {
              "allowedValues": null,
              "defaultValue": "365",
              "metadata": {
                "description": "The required resource logs retention in days",
                "displayName": "Required retention (days)"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Audit enabling of resource logs. This enables you to recreate activity trails to use for investigation purposes; when a security incident occurs or when your network is compromised",
          "displayName": "Resource logs in Search services should be enabled",
          "metadata": {
            "category": "Search",
            "version": "5.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Insights/diagnosticSettings",
                "existenceCondition": {
                  "count": {
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                    "where": {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                                  "equals": "0"
                                },
                                {
                                  "value": "[padLeft(current('Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days'), 3, '0')]",
                                  "greaterOrEquals": "[padLeft(parameters('requiredRetentionDays'), 3, '0')]"
                                }
                              ]
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                  "notEquals": "true"
                                },
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/storageAccountId",
                                  "exists": false
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "greaterOrEquals": 1
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Search/searchServices"
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "b4330a05-a843-4bc8-bf9a-cacce50c67f4"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/22bee202-a82f-4305-9a2a-6d7f44d4dedb",
        "Name": "22bee202-a82f-4305-9a2a-6d7f44d4dedb",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/22bee202-a82f-4305-9a2a-6d7f44d4dedb",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "The effect determines what happens when the policy rule is evaluated to match",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Audit enabling of only connections via SSL to Azure Cache for Redis. Use of secure connections ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking",
          "displayName": "Only secure connections to your Azure Cache for Redis should be enabled",
          "metadata": {
            "category": "Cache",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Cache/redis"
                },
                {
                  "field": "Microsoft.Cache/Redis/enableNonSslPort",
                  "equals": "true"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "22bee202-a82f-4305-9a2a-6d7f44d4dedb"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/34f95f76-5386-4de7-b824-0d8478470c9d",
        "Name": "34f95f76-5386-4de7-b824-0d8478470c9d",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/34f95f76-5386-4de7-b824-0d8478470c9d",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            },
            "requiredRetentionDays": {
              "allowedValues": null,
              "defaultValue": "365",
              "metadata": {
                "description": "The required resource logs retention in days",
                "displayName": "Required retention (days)"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Audit enabling of resource logs. This enables you to recreate activity trails to use for investigation purposes; when a security incident occurs or when your network is compromised",
          "displayName": "Resource logs in Logic Apps should be enabled",
          "metadata": {
            "category": "Logic Apps",
            "version": "5.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Insights/diagnosticSettings",
                "existenceCondition": {
                  "count": {
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                    "where": {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                              "equals": "true"
                            },
                            {
                              "value": "[padLeft(current('Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days'), 3, '0')]",
                              "greaterOrEquals": "[padLeft(parameters('requiredRetentionDays'), 3, '0')]"
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                  "notEquals": "true"
                                },
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/storageAccountId",
                                  "exists": false
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "greaterOrEquals": 1
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Logic/workflows"
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "34f95f76-5386-4de7-b824-0d8478470c9d"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/cf820ca0-f99e-4f3e-84fb-66e913812d21",
        "Name": "cf820ca0-f99e-4f3e-84fb-66e913812d21",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/cf820ca0-f99e-4f3e-84fb-66e913812d21",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            },
            "requiredRetentionDays": {
              "allowedValues": null,
              "defaultValue": "365",
              "metadata": {
                "description": "The required resource logs retention in days",
                "displayName": "Required retention (days)"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Audit enabling of resource logs. This enables you to recreate activity trails to use for investigation purposes when a security incident occurs or when your network is compromised",
          "displayName": "Resource logs in Key Vault should be enabled",
          "metadata": {
            "category": "Key Vault",
            "version": "5.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Insights/diagnosticSettings",
                "existenceCondition": {
                  "count": {
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                    "where": {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                                  "equals": "0"
                                },
                                {
                                  "value": "[padLeft(current('Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days'), 3, '0')]",
                                  "greaterOrEquals": "[padLeft(parameters('requiredRetentionDays'), 3, '0')]"
                                }
                              ]
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                  "notEquals": "true"
                                },
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/storageAccountId",
                                  "exists": false
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "greaterOrEquals": 1
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.KeyVault/vaults"
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "cf820ca0-f99e-4f3e-84fb-66e913812d21"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/83a214f7-d01a-484b-91a9-ed54470c9a6a",
        "Name": "83a214f7-d01a-484b-91a9-ed54470c9a6a",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/83a214f7-d01a-484b-91a9-ed54470c9a6a",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            },
            "requiredRetentionDays": {
              "allowedValues": null,
              "defaultValue": "365",
              "metadata": {
                "description": "The required resource logs retention in days",
                "displayName": "Required retention (days)"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Audit enabling of resource logs. This enables you to recreate activity trails to use for investigation purposes; when a security incident occurs or when your network is compromised",
          "displayName": "Resource logs in Event Hub should be enabled",
          "metadata": {
            "category": "Event Hub",
            "version": "5.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Insights/diagnosticSettings",
                "existenceCondition": {
                  "count": {
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                    "where": {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                                  "equals": "0"
                                },
                                {
                                  "value": "[padLeft(current('Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days'), 3, '0')]",
                                  "greaterOrEquals": "[padLeft(parameters('requiredRetentionDays'), 3, '0')]"
                                }
                              ]
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                  "notEquals": "true"
                                },
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/storageAccountId",
                                  "exists": false
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "greaterOrEquals": 1
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.EventHub/namespaces"
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "83a214f7-d01a-484b-91a9-ed54470c9a6a"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/057ef27e-665e-4328-8ea3-04b3122bd9fb",
        "Name": "057ef27e-665e-4328-8ea3-04b3122bd9fb",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/057ef27e-665e-4328-8ea3-04b3122bd9fb",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            },
            "requiredRetentionDays": {
              "allowedValues": null,
              "defaultValue": "365",
              "metadata": {
                "description": "The required resource logs retention in days",
                "displayName": "Required retention (days)"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Audit enabling of resource logs. This enables you to recreate activity trails to use for investigation purposes; when a security incident occurs or when your network is compromised",
          "displayName": "Resource logs in Azure Data Lake Store should be enabled",
          "metadata": {
            "category": "Data Lake",
            "version": "5.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Insights/diagnosticSettings",
                "existenceCondition": {
                  "count": {
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                    "where": {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                                  "equals": "0"
                                },
                                {
                                  "value": "[padLeft(current('Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days'), 3, '0')]",
                                  "greaterOrEquals": "[padLeft(parameters('requiredRetentionDays'), 3, '0')]"
                                }
                              ]
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                  "notEquals": "true"
                                },
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/storageAccountId",
                                  "exists": false
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "greaterOrEquals": 1
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.DataLakeStore/accounts"
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "057ef27e-665e-4328-8ea3-04b3122bd9fb"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c95c74d9-38fe-4f0d-af86-0c7d626a315c",
        "Name": "c95c74d9-38fe-4f0d-af86-0c7d626a315c",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/c95c74d9-38fe-4f0d-af86-0c7d626a315c",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            },
            "requiredRetentionDays": {
              "allowedValues": null,
              "defaultValue": "365",
              "metadata": {
                "description": "The required resource logs retention in days",
                "displayName": "Required retention (days)"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Audit enabling of resource logs. This enables you to recreate activity trails to use for investigation purposes; when a security incident occurs or when your network is compromised",
          "displayName": "Resource logs in Data Lake Analytics should be enabled",
          "metadata": {
            "category": "Data Lake",
            "version": "5.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Insights/diagnosticSettings",
                "existenceCondition": {
                  "count": {
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                    "where": {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                                  "equals": "0"
                                },
                                {
                                  "value": "[padLeft(current('Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days'), 3, '0')]",
                                  "greaterOrEquals": "[padLeft(parameters('requiredRetentionDays'), 3, '0')]"
                                }
                              ]
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                  "notEquals": "true"
                                },
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/storageAccountId",
                                  "exists": false
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "greaterOrEquals": 1
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.DataLakeAnalytics/accounts"
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "c95c74d9-38fe-4f0d-af86-0c7d626a315c"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/37e0d2fe-28a5-43d6-a273-67d37d1f5606",
        "Name": "37e0d2fe-28a5-43d6-a273-67d37d1f5606",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/37e0d2fe-28a5-43d6-a273-67d37d1f5606",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "The effect determines what happens when the policy rule is evaluated to match",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Use new Azure Resource Manager for your storage accounts to provide security enhancements such as: stronger access control (RBAC), better auditing, Azure Resource Manager based deployment and governance, access to managed identities, access to key vault for secrets, Azure AD-based authentication and support for tags and resource groups for easier security management",
          "displayName": "Storage accounts should be migrated to new Azure Resource Manager resources",
          "metadata": {
            "category": "Storage",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "in": [
                    "Microsoft.ClassicStorage/storageAccounts",
                    "Microsoft.Storage/StorageAccounts"
                  ]
                },
                {
                  "value": "[field('type')]",
                  "equals": "Microsoft.ClassicStorage/storageAccounts"
                }
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "37e0d2fe-28a5-43d6-a273-67d37d1f5606"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1d84d5fb-01f6-4d12-ba4f-4a26081d403d",
        "Name": "1d84d5fb-01f6-4d12-ba4f-4a26081d403d",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/1d84d5fb-01f6-4d12-ba4f-4a26081d403d",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "The effect determines what happens when the policy rule is evaluated to match",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Use new Azure Resource Manager for your virtual machines to provide security enhancements such as: stronger access control (RBAC), better auditing, Azure Resource Manager based deployment and governance, access to managed identities, access to key vault for secrets, Azure AD-based authentication and support for tags and resource groups for easier security management",
          "displayName": "Virtual machines should be migrated to new Azure Resource Manager resources",
          "metadata": {
            "category": "Compute",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "in": [
                    "Microsoft.ClassicCompute/virtualMachines",
                    "Microsoft.Compute/virtualMachines"
                  ]
                },
                {
                  "value": "[field('type')]",
                  "equals": "Microsoft.ClassicCompute/virtualMachines"
                }
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "1d84d5fb-01f6-4d12-ba4f-4a26081d403d"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/428256e6-1fac-4f48-a757-df34c2b3336d",
        "Name": "428256e6-1fac-4f48-a757-df34c2b3336d",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/428256e6-1fac-4f48-a757-df34c2b3336d",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            },
            "requiredRetentionDays": {
              "allowedValues": null,
              "defaultValue": "365",
              "metadata": {
                "description": "The required resource logs retention in days",
                "displayName": "Required retention (days)"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Audit enabling of resource logs. This enables you to recreate activity trails to use for investigation purposes; when a security incident occurs or when your network is compromised",
          "displayName": "Resource logs in Batch accounts should be enabled",
          "metadata": {
            "category": "Batch",
            "version": "5.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Insights/diagnosticSettings",
                "existenceCondition": {
                  "count": {
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                    "where": {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                                  "equals": "0"
                                },
                                {
                                  "value": "[padLeft(current('Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days'), 3, '0')]",
                                  "greaterOrEquals": "[padLeft(parameters('requiredRetentionDays'), 3, '0')]"
                                }
                              ]
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                  "notEquals": "true"
                                },
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/storageAccountId",
                                  "exists": false
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "greaterOrEquals": 1
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Batch/batchAccounts"
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "428256e6-1fac-4f48-a757-df34c2b3336d"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/3657f5a0-770e-44a3-b44e-9431ba1e9735",
        "Name": "3657f5a0-770e-44a3-b44e-9431ba1e9735",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/3657f5a0-770e-44a3-b44e-9431ba1e9735",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "The effect determines what happens when the policy rule is evaluated to match",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "It is important to enable encryption of Automation account variable assets when storing sensitive data",
          "displayName": "Automation account variables should be encrypted",
          "metadata": {
            "category": "Automation",
            "version": "1.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Automation/automationAccounts/variables"
                },
                {
                  "field": "Microsoft.Automation/automationAccounts/variables/isEncrypted",
                  "notEquals": "true"
                }
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "3657f5a0-770e-44a3-b44e-9431ba1e9735"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/17k78e20-9358-41c9-923c-fb736d382a12",
        "Name": "17k78e20-9358-41c9-923c-fb736d382a12",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/17k78e20-9358-41c9-923c-fb736d382a12",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Transparent data encryption should be enabled to protect data-at-rest and meet compliance requirements",
          "displayName": "Transparent Data Encryption on SQL databases should be enabled",
          "metadata": {
            "category": "SQL",
            "version": "2.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
                "name": "current",
                "existenceCondition": {
                  "anyOf": [
                    {
                      "field": "Microsoft.Sql/transparentDataEncryption.status",
                      "equals": "enabled"
                    },
                    {
                      "field": "Microsoft.Sql/servers/databases/transparentDataEncryption/state",
                      "equals": "enabled"
                    }
                  ]
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Sql/servers/databases"
                },
                {
                  "field": "name",
                  "notEquals": "master"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "17k78e20-9358-41c9-923c-fb736d382a12"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a6fb4358-5bf4-4ad7-ba82-2cd2f41ce5e9",
        "Name": "a6fb4358-5bf4-4ad7-ba82-2cd2f41ce5e9",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/a6fb4358-5bf4-4ad7-ba82-2cd2f41ce5e9",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            },
            "setting": {
              "allowedValues": [
                "enabled",
                "disabled"
              ],
              "defaultValue": "enabled",
              "metadata": {
                "displayName": "Desired Auditing setting"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Auditing on your SQL Server should be enabled to track database activities across all databases on the server and save them in an audit log.",
          "displayName": "Auditing on SQL server should be enabled",
          "metadata": {
            "category": "SQL",
            "version": "2.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Sql/servers/auditingSettings",
                "name": "default",
                "existenceCondition": {
                  "field": "Microsoft.Sql/auditingSettings.state",
                  "equals": "[parameters('setting')]"
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Sql/servers"
                },
                {
                  "field": "kind",
                  "notContains": "analytics"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "a6fb4358-5bf4-4ad7-ba82-2cd2f41ce5e9"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/86b3d65f-7626-441e-b690-81a8b71cff60",
        "Name": "86b3d65f-7626-441e-b690-81a8b71cff60",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/86b3d65f-7626-441e-b690-81a8b71cff60",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Missing security system updates on your servers will be monitored by Azure Security Center as recommendations",
          "displayName": "System updates should be installed on your machines",
          "metadata": {
            "category": "Security Center",
            "version": "4.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "4ab6e3c5-74dd-8b35-9ab9-f61b30875b27",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Compute/virtualMachines",
                "Microsoft.ClassicCompute/virtualMachines"
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "86b3d65f-7626-441e-b690-81a8b71cff60"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f85bf3e0-d513-442e-89c3-1784ad63382b",
        "Name": "f85bf3e0-d513-442e-89c3-1784ad63382b",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/f85bf3e0-d513-442e-89c3-1784ad63382b",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Your machines are missing system, security, and critical updates. Software updates often include critical patches to security holes. Such holes are frequently exploited in malware attacks so it's vital to keep your software updated. To install all outstanding patches and secure your machines, follow the remediation steps.",
          "displayName": "[Preview]: System updates should be installed on your machines (powered by Update Center)",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.0-preview",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z",
            "preview": true
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "e1145ab1-eb4f-43d8-911b-36ddf771d13f",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Compute/virtualMachines",
                "Microsoft.HybridCompute/machines"
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "f85bf3e0-d513-442e-89c3-1784ad63382b"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/bd876905-5b84-4f73-ab2d-2e7a7c4568d9",
        "Name": "bd876905-5b84-4f73-ab2d-2e7a7c4568d9",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/bd876905-5b84-4f73-ab2d-2e7a7c4568d9",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "The desired effect of the policy.",
                "displayName": "Policy Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "To ensure periodic assessments for missing system updates are triggered automatically every 24 hours, the AssessmentMode property should be set to 'AutomaticByPlatform'. Learn more about AssessmentMode property for Windows: https://aka.ms/computevm-windowspatchassessmentmode, for Linux: https://aka.ms/computevm-linuxpatchassessmentmode.",
          "displayName": "Machines should be configured to periodically check for missing system updates",
          "metadata": {
            "category": "Azure Update Manager",
            "version": "3.4.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "in": [
                    "Microsoft.Compute/virtualMachines",
                    "Microsoft.HybridCompute/machines"
                  ]
                },
                {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.Compute/virtualMachines"
                        },
                        {
                          "anyOf": [
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "Canonical"
                                },
                                {
                                  "anyOf": [
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "equals": "UbuntuServer"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "in": [
                                            "16.04-LTS",
                                            "18.04-LTS",
                                            "18.04-LTS-Gen2"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "equals": "0001-com-ubuntu-pro-bionic"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "equals": "pro-18_04-lts"
                                        }
                                      ]
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "equals": "0001-com-ubuntu-server-focal"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "in": [
                                            "20_04-lts",
                                            "20_04-lts-gen2"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "equals": "0001-com-ubuntu-pro-focal"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "equals": "pro-20_04-lts"
                                        }
                                      ]
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "equals": "0001-com-ubuntu-server-jammy"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "in": [
                                            "22_04-lts",
                                            "22_04-lts-gen2"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoftcblmariner"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "cbl-mariner"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "in": [
                                    "cbl-mariner-1",
                                    "1-gen2",
                                    "cbl-mariner-2",
                                    "cbl-mariner-2-gen2"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "microsoft-aks"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "aks"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "equals": "aks-engine-ubuntu-1804-202112"
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "Redhat"
                                },
                                {
                                  "anyOf": [
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "equals": "RHEL"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "in": [
                                            "7.2",
                                            "7.3",
                                            "7.4",
                                            "7.5",
                                            "7.6",
                                            "7.7",
                                            "7.8",
                                            "7_9",
                                            "7-RAW",
                                            "7-LVM",
                                            "8",
                                            "8.1",
                                            "8.2",
                                            "8_3",
                                            "8_4",
                                            "8_5",
                                            "8-LVM",
                                            "81gen2",
                                            "82gen2",
                                            "83-gen2",
                                            "84-gen2",
                                            "85-gen2",
                                            "8_6",
                                            "86-gen2",
                                            "8-lvm-gen2"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "equals": "RHEL-RAW"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "in": [
                                            "8-raw",
                                            "8-raw-gen2"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "OpenLogic"
                                },
                                {
                                  "anyOf": [
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "equals": "Centos"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "in": [
                                            "7.2",
                                            "7.3",
                                            "7.4",
                                            "7.5",
                                            "7.6",
                                            "7.7",
                                            "7_8",
                                            "7_9",
                                            "7_9-gen2",
                                            "8.0",
                                            "8_1",
                                            "8_2",
                                            "8_3",
                                            "8_4",
                                            "8_5"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "allOf": [
                                        {
                                          "field": "Microsoft.Compute/imageOffer",
                                          "equals": "centos-lvm"
                                        },
                                        {
                                          "field": "Microsoft.Compute/imageSKU",
                                          "in": [
                                            "7-lvm",
                                            "8-lvm"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "SUSE"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "in": [
                                    "sles-12-sp5",
                                    "sles-15-sp2"
                                  ]
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "in": [
                                    "gen1",
                                    "gen2"
                                  ]
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "equals": "MicrosoftWindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "equals": "WindowsServer"
                                },
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "in": [
                                    "2008-R2-SP1",
                                    "2012-R2-Datacenter",
                                    "2016-Datacenter",
                                    "2016-datacenter-gensecond",
                                    "2016-Datacenter-Server-Core",
                                    "2016-datacenter-smalldisk",
                                    "2016-datacenter-with-containers",
                                    "2019-Datacenter",
                                    "2019-Datacenter-Core",
                                    "2019-datacenter-gensecond",
                                    "2019-datacenter-smalldisk",
                                    "2019-datacenter-smalldisk-g2",
                                    "2019-datacenter-with-containers",
                                    "2022-datacenter",
                                    "2022-datacenter-g2",
                                    "2022-datacenter-core",
                                    "2022-datacenter-core-g2",
                                    "2022-datacenter-azure-edition",
                                    "2022-datacenter-azure-edition-core",
                                    "2022-datacenter-azure-edition-core-smalldisk",
                                    "2022-datacenter-azure-edition-smalldisk",
                                    "2022-datacenter-smalldisk-g2"
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "value": "[if(equals(tolower(field('Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType')), 'windows'), field('Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration.patchSettings.assessmentMode'), field('Microsoft.Compute/virtualMachines/osProfile.linuxConfiguration.patchSettings.assessmentMode'))]",
                          "notEquals": "AutomaticByPlatform"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "type",
                          "equals": "Microsoft.HybridCompute/machines"
                        },
                        {
                          "value": "[if(equals(tolower(field('Microsoft.HybridCompute/machines/osName')), 'windows'), field('Microsoft.HybridCompute/machines/osProfile.windowsConfiguration.patchSettings.assessmentMode'), field('Microsoft.HybridCompute/machines/osProfile.linuxConfiguration.patchSettings.assessmentMode'))]",
                          "notEquals": "AutomaticByPlatform"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "bd876905-5b84-4f73-ab2d-2e7a7c4568d9"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b0f33259-77d7-4c9e-aac6-3aabcfae693c",
        "Name": "b0f33259-77d7-4c9e-aac6-3aabcfae693c",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/b0f33259-77d7-4c9e-aac6-3aabcfae693c",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Possible network Just In Time (JIT) access will be monitored by Azure Security Center as recommendations",
          "displayName": "Management ports of virtual machines should be protected with just-in-time network access control",
          "metadata": {
            "category": "Security Center",
            "version": "3.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "805651bc-6ecd-4c73-9b55-97a19d0582d0",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Compute/virtualMachines"
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "b0f33259-77d7-4c9e-aac6-3aabcfae693c"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/47a6b606-51aa-4496-8bb7-64b11cf66adc",
        "Name": "47a6b606-51aa-4496-8bb7-64b11cf66adc",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/47a6b606-51aa-4496-8bb7-64b11cf66adc",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Enable application controls to define the list of known-safe applications running on your machines, and alert you when other applications run. This helps harden your machines against malware. To simplify the process of configuring and maintaining your rules, Security Center uses machine learning to analyze the applications running on each machine and suggest the list of known-safe applications.",
          "displayName": "Adaptive application controls for defining safe applications should be enabled on your machines",
          "metadata": {
            "category": "Security Center",
            "version": "3.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "35f45c95-27cf-4e52-891f-8390d1de5828",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Compute/virtualMachines",
                "Microsoft.ClassicCompute/virtualMachines"
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "47a6b606-51aa-4496-8bb7-64b11cf66adc"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/123a3936-f020-408a-ba0c-47873faf1534",
        "Name": "123a3936-f020-408a-ba0c-47873faf1534",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/123a3936-f020-408a-ba0c-47873faf1534",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Monitor for changes in behavior on groups of machines configured for auditing by Azure Security Center's adaptive application controls. Security Center uses machine learning to analyze the running processes on your machines and suggest a list of known-safe applications. These are presented as recommended apps to allow in adaptive application control policies.",
          "displayName": "Allowlist rules in your adaptive application control policy should be updated",
          "metadata": {
            "category": "Security Center",
            "version": "3.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "1234abcd-1b53-4fd4-9835-2c2fa3935313",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Compute/virtualMachines",
                "Microsoft.ClassicCompute/virtualMachines"
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "123a3936-f020-408a-ba0c-47873faf1534"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e71308d3-144b-4262-b144-efdc3cc90517",
        "Name": "e71308d3-144b-4262-b144-efdc3cc90517",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/e71308d3-144b-4262-b144-efdc3cc90517",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Protect your subnet from potential threats by restricting access to it with a Network Security Group (NSG). NSGs contain a list of Access Control List (ACL) rules that allow or deny network traffic to your subnet.",
          "displayName": "Subnets should be associated with a Network Security Group",
          "metadata": {
            "category": "Security Center",
            "version": "3.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "eade5b56-eefd-444f-95c8-23f29e5d93cb",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Network/virtualNetworks/subnets"
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "e71308d3-144b-4262-b144-efdc3cc90517"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f6de0be7-9a8a-4b8a-b349-43cf02d22f7c",
        "Name": "f6de0be7-9a8a-4b8a-b349-43cf02d22f7c",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/f6de0be7-9a8a-4b8a-b349-43cf02d22f7c",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Protect your virtual machines from potential threats by restricting access to them with network security groups (NSG). Learn more about controlling traffic with NSGs at https://aka.ms/nsg-doc",
          "displayName": "Internet-facing virtual machines should be protected with network security groups",
          "metadata": {
            "category": "Security Center",
            "version": "3.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "483f12ed-ae23-447e-a2de-a67a10db4353",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Compute/virtualMachines",
                "Microsoft.ClassicCompute/virtualMachines"
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "f6de0be7-9a8a-4b8a-b349-43cf02d22f7c"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/bb91dfba-c30d-4263-9add-9c2384e659a6",
        "Name": "bb91dfba-c30d-4263-9add-9c2384e659a6",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/bb91dfba-c30d-4263-9add-9c2384e659a6",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Protect your non-internet-facing virtual machines from potential threats by restricting access with network security groups (NSG). Learn more about controlling traffic with NSGs at https://aka.ms/nsg-doc",
          "displayName": "Non-internet-facing virtual machines should be protected with network security groups",
          "metadata": {
            "category": "Security Center",
            "version": "3.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "a9341235-9389-42f0-a0bf-9bfb57960d44",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Compute/virtualMachines",
                "Microsoft.ClassicCompute/virtualMachines"
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "bb91dfba-c30d-4263-9add-9c2384e659a6"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e1e5fd5d-3e4c-4ce1-8661-7d1873ae6b15",
        "Name": "e1e5fd5d-3e4c-4ce1-8661-7d1873ae6b15",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/e1e5fd5d-3e4c-4ce1-8661-7d1873ae6b15",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Servers which do not satisfy the configured baseline will be monitored by Azure Security Center as recommendations",
          "displayName": "Vulnerabilities in security configuration on your machines should be remediated",
          "metadata": {
            "category": "Security Center",
            "version": "3.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "c476dc48-8110-4139-91af-c8d940896b98",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Compute/virtualMachines",
                "Microsoft.ClassicCompute/virtualMachines"
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "e1e5fd5d-3e4c-4ce1-8661-7d1873ae6b15"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/af6cd1bd-1635-48cb-bde7-5b15693900b9",
        "Name": "af6cd1bd-1635-48cb-bde7-5b15693900b9",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/af6cd1bd-1635-48cb-bde7-5b15693900b9",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Servers without an installed Endpoint Protection agent will be monitored by Azure Security Center as recommendations",
          "displayName": "Monitor missing Endpoint Protection in Azure Security Center",
          "metadata": {
            "category": "Security Center",
            "version": "3.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "83f577bd-a1b6-b7e1-0891-12ca19d1e6df",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Compute/virtualMachines",
                "Microsoft.ClassicCompute/virtualMachines"
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "af6cd1bd-1635-48cb-bde7-5b15693900b9"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0961003e-5a0a-4549-abde-af6a37f2724d",
        "Name": "0961003e-5a0a-4549-abde-af6a37f2724d",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0961003e-5a0a-4549-abde-af6a37f2724d",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "By default, a virtual machine's OS and data disks are encrypted-at-rest using platform-managed keys. Temp disks, data caches and data flowing between compute and storage aren't encrypted. Disregard this recommendation if: 1. using encryption-at-host, or 2. server-side encryption on Managed Disks meets your security requirements. Learn more in: Server-side encryption of Azure Disk Storage: https://aka.ms/disksse, Different disk encryption offerings: https://aka.ms/diskencryptioncomparison",
          "displayName": "Virtual machines should encrypt temp disks, caches, and data flows between Compute and Storage resources",
          "metadata": {
            "category": "Security Center",
            "version": "2.0.3",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "d57a4221-a804-52ca-3dea-768284f06bb7",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.ClassicCompute/virtualMachines",
                "Microsoft.Compute/virtualMachines"
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "0961003e-5a0a-4549-abde-af6a37f2724d"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/501541f7-f7e7-4cd6-868c-4190fdad3ac9",
        "Name": "501541f7-f7e7-4cd6-868c-4190fdad3ac9",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/501541f7-f7e7-4cd6-868c-4190fdad3ac9",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Audits virtual machines to detect whether they are running a supported vulnerability assessment solution. A core component of every cyber risk and security program is the identification and analysis of vulnerabilities. Azure Security Center's standard pricing tier includes vulnerability scanning for your virtual machines at no extra cost. Additionally, Security Center can automatically deploy this tool for you.",
          "displayName": "A vulnerability assessment solution should be enabled on your virtual machines",
          "metadata": {
            "category": "Security Center",
            "version": "3.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "ffff0522-1e88-47fc-8382-2a80ba848f5d",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Compute/virtualMachines",
                "Microsoft.ClassicCompute/virtualMachines"
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "501541f7-f7e7-4cd6-868c-4190fdad3ac9"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9daedab3-fb2d-461e-b861-71790eead4f6",
        "Name": "9daedab3-fb2d-461e-b861-71790eead4f6",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/9daedab3-fb2d-461e-b861-71790eead4f6",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Azure Security Center has identified some of your network security groups' inbound rules to be too permissive. Inbound rules should not allow access from 'Any' or 'Internet' ranges. This can potentially enable attackers to target your resources.",
          "displayName": "All network ports should be restricted on network security groups associated to your virtual machine",
          "metadata": {
            "category": "Security Center",
            "version": "3.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "3b20e985-f71f-483b-b078-f30d73936d43",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Compute/virtualMachines",
                "Microsoft.ClassicCompute/virtualMachines"
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "9daedab3-fb2d-461e-b861-71790eead4f6"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/feedbf84-6b99-488c-acc2-71c829aa5ffc",
        "Name": "feedbf84-6b99-488c-acc2-71c829aa5ffc",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/feedbf84-6b99-488c-acc2-71c829aa5ffc",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Monitor vulnerability assessment scan results and recommendations for how to remediate database vulnerabilities.",
          "displayName": "SQL databases should have vulnerability findings resolved",
          "metadata": {
            "category": "Security Center",
            "version": "4.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "82e20e14-edc5-4373-bfc4-f13121257c37",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "in": [
                    "Microsoft.Sql/servers",
                    "Microsoft.Sql/managedinstances"
                  ]
                },
                {
                  "field": "kind",
                  "notContains": "analytics"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "feedbf84-6b99-488c-acc2-71c829aa5ffc"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6ba6d016-e7c3-4842-b8f2-4992ebc0d72d",
        "Name": "6ba6d016-e7c3-4842-b8f2-4992ebc0d72d",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/6ba6d016-e7c3-4842-b8f2-4992ebc0d72d",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "SQL vulnerability assessment scans your database for security vulnerabilities, and exposes any deviations from best practices such as misconfigurations, excessive permissions, and unprotected sensitive data. Resolving the vulnerabilities found can greatly improve your database security posture.",
          "displayName": "SQL servers on machines should have vulnerability findings resolved",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "f97aa83c-9b63-4f9a-99f6-b22c4398f936",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Compute/virtualMachines",
                "Microsoft.HybridCompute/machines"
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "6ba6d016-e7c3-4842-b8f2-4992ebc0d72d"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/4f11b553-d42e-4e3a-89be-32ca364cad4c",
        "Name": "4f11b553-d42e-4e3a-89be-32ca364cad4c",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/4f11b553-d42e-4e3a-89be-32ca364cad4c",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "It is recommended to designate up to 3 subscription owners in order to reduce the potential for breach by a compromised owner.",
          "displayName": "A maximum of 3 owners should be designated for your subscription",
          "metadata": {
            "category": "Security Center",
            "version": "3.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "6f90a6d6-d4d6-0794-0ec1-98fa77878c2e",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "4f11b553-d42e-4e3a-89be-32ca364cad4c"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/09024ccc-0c5f-475e-9457-b7c0d9ed487b",
        "Name": "09024ccc-0c5f-475e-9457-b7c0d9ed487b",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/09024ccc-0c5f-475e-9457-b7c0d9ed487b",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "It is recommended to designate more than one subscription owner in order to have administrator access redundancy.",
          "displayName": "There should be more than one owner assigned to your subscription",
          "metadata": {
            "category": "Security Center",
            "version": "3.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "2c79b4af-f830-b61e-92b9-63dfa30f16e4",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "09024ccc-0c5f-475e-9457-b7c0d9ed487b"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e3e008c3-56b9-4133-8fd7-d3347377402a",
        "Name": "e3e008c3-56b9-4133-8fd7-d3347377402a",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/e3e008c3-56b9-4133-8fd7-d3347377402a",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Multi-Factor Authentication (MFA) should be enabled for all subscription accounts with owner permissions to prevent a breach of accounts or resources.",
          "displayName": "Accounts with owner permissions on Azure resources should be MFA enabled",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "6240402e-f77c-46fa-9060-a7ce53997754",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "e3e008c3-56b9-4133-8fd7-d3347377402a"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/931e118d-50a1-4457-a5e4-78550e086c52",
        "Name": "931e118d-50a1-4457-a5e4-78550e086c52",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/931e118d-50a1-4457-a5e4-78550e086c52",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Multi-Factor Authentication (MFA) should be enabled for all subscription accounts with write privileges to prevent a breach of accounts or resources.",
          "displayName": "Accounts with write permissions on Azure resources should be MFA enabled",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "c0cb17b2-0607-48a7-b0e0-903ed22de39b",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "931e118d-50a1-4457-a5e4-78550e086c52"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/81b3ccb4-e6e8-4e4a-8d05-5df25cd29fd4",
        "Name": "81b3ccb4-e6e8-4e4a-8d05-5df25cd29fd4",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/81b3ccb4-e6e8-4e4a-8d05-5df25cd29fd4",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Multi-Factor Authentication (MFA) should be enabled for all subscription accounts with read privileges to prevent a breach of accounts or resources.",
          "displayName": "Accounts with read permissions on Azure resources should be MFA enabled",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "dabc9bc4-b8a8-45bd-9a5a-43000df8aa1c",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "81b3ccb4-e6e8-4e4a-8d05-5df25cd29fd4"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0cfea604-3201-4e14-88fc-fae4c427a6c5",
        "Name": "0cfea604-3201-4e14-88fc-fae4c427a6c5",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0cfea604-3201-4e14-88fc-fae4c427a6c5",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Deprecated accounts with owner permissions should be removed from your subscription.  Deprecated accounts are accounts that have been blocked from signing in.",
          "displayName": "Blocked accounts with owner permissions on Azure resources should be removed",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "050ac097-3dda-4d24-ab6d-82568e7a50cf",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "0cfea604-3201-4e14-88fc-fae4c427a6c5"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/8d7e1fde-fe26-4b5f-8108-f8e432cbc2be",
        "Name": "8d7e1fde-fe26-4b5f-8108-f8e432cbc2be",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/8d7e1fde-fe26-4b5f-8108-f8e432cbc2be",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Deprecated accounts should be removed from your subscriptions.  Deprecated accounts are accounts that have been blocked from signing in.",
          "displayName": "Blocked accounts with read and write permissions on Azure resources should be removed",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "1ff0b4c9-ed56-4de6-be9c-d7ab39645926",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "8d7e1fde-fe26-4b5f-8108-f8e432cbc2be"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/339353f6-2387-4a45-abe4-7f529d121046",
        "Name": "339353f6-2387-4a45-abe4-7f529d121046",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/339353f6-2387-4a45-abe4-7f529d121046",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "External accounts with owner permissions should be removed from your subscription in order to prevent unmonitored access.",
          "displayName": "Guest accounts with owner permissions on Azure resources should be removed",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "20606e75-05c4-48c0-9d97-add6daa2109a",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "339353f6-2387-4a45-abe4-7f529d121046"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/94e1c2ac-cbbe-4cac-a2b5-389c812dee87",
        "Name": "94e1c2ac-cbbe-4cac-a2b5-389c812dee87",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/94e1c2ac-cbbe-4cac-a2b5-389c812dee87",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "External accounts with write privileges should be removed from your subscription in order to prevent unmonitored access.",
          "displayName": "Guest accounts with write permissions on Azure resources should be removed",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "0354476c-a12a-4fcc-a79d-f0ab7ffffdbb",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "94e1c2ac-cbbe-4cac-a2b5-389c812dee87"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e9ac8f8e-ce22-4355-8f04-99b911d6be52",
        "Name": "e9ac8f8e-ce22-4355-8f04-99b911d6be52",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/e9ac8f8e-ce22-4355-8f04-99b911d6be52",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "External accounts with read privileges should be removed from your subscription in order to prevent unmonitored access.",
          "displayName": "Guest accounts with read permissions on Azure resources should be removed",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "fde1c0c9-0fd2-4ecc-87b5-98956cbc1095",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "e9ac8f8e-ce22-4355-8f04-99b911d6be52"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0e60b895-3786-45da-8377-9c6b4b6ac5f9",
        "Name": "0e60b895-3786-45da-8377-9c6b4b6ac5f9",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0e60b895-3786-45da-8377-9c6b4b6ac5f9",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Remote debugging requires inbound ports to be opened on Function apps. Remote debugging should be turned off.",
          "displayName": "Function apps should have remote debugging turned off",
          "metadata": {
            "category": "App Service",
            "version": "2.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Web/sites/config",
                "existenceCondition": {
                  "field": "Microsoft.Web/sites/config/web.remoteDebuggingEnabled",
                  "equals": "false"
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Web/sites"
                },
                {
                  "field": "kind",
                  "contains": "functionapp"
                },
                {
                  "field": "kind",
                  "notContains": "workflowapp"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "0e60b895-3786-45da-8377-9c6b4b6ac5f9"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/cb510bfd-1cba-4d9f-a230-cb0976f4bb71",
        "Name": "cb510bfd-1cba-4d9f-a230-cb0976f4bb71",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/cb510bfd-1cba-4d9f-a230-cb0976f4bb71",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Remote debugging requires inbound ports to be opened on an App Service app. Remote debugging should be turned off.",
          "displayName": "App Service apps should have remote debugging turned off",
          "metadata": {
            "category": "App Service",
            "version": "2.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Web/sites/config",
                "existenceCondition": {
                  "field": "Microsoft.Web/sites/config/web.remoteDebuggingEnabled",
                  "equals": "false"
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Web/sites"
                },
                {
                  "field": "kind",
                  "notContains": "functionapp"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "cb510bfd-1cba-4d9f-a230-cb0976f4bb71"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6d555dd1-86f2-4f1c-8ed7-5abae7c6cbab",
        "Name": "6d555dd1-86f2-4f1c-8ed7-5abae7c6cbab",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/6d555dd1-86f2-4f1c-8ed7-5abae7c6cbab",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled",
                "Deny"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.",
          "displayName": "Function apps should only be accessible over HTTPS",
          "metadata": {
            "category": "App Service",
            "version": "5.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Web/sites"
                },
                {
                  "field": "kind",
                  "contains": "functionapp"
                },
                {
                  "field": "kind",
                  "notContains": "workflowapp"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.Web/sites/httpsOnly",
                      "exists": "false"
                    },
                    {
                      "field": "Microsoft.Web/sites/httpsOnly",
                      "equals": "false"
                    }
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "6d555dd1-86f2-4f1c-8ed7-5abae7c6cbab"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a4af4a39-4135-47fb-b175-47fbdf85311d",
        "Name": "a4af4a39-4135-47fb-b175-47fbdf85311d",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/a4af4a39-4135-47fb-b175-47fbdf85311d",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled",
                "Deny"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.",
          "displayName": "App Service apps should only be accessible over HTTPS",
          "metadata": {
            "category": "App Service",
            "version": "4.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Web/sites"
                },
                {
                  "field": "kind",
                  "notContains": "functionapp"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.Web/sites/httpsOnly",
                      "exists": "false"
                    },
                    {
                      "field": "Microsoft.Web/sites/httpsOnly",
                      "equals": "false"
                    }
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "a4af4a39-4135-47fb-b175-47fbdf85311d"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0820b7b9-23aa-4725-a1ce-ae4558f718e5",
        "Name": "0820b7b9-23aa-4725-a1ce-ae4558f718e5",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0820b7b9-23aa-4725-a1ce-ae4558f718e5",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Cross-Origin Resource Sharing (CORS) should not allow all domains to access your Function app. Allow only required domains to interact with your Function app.",
          "displayName": "Function apps should not have CORS configured to allow every resource to access your apps",
          "metadata": {
            "category": "App Service",
            "version": "2.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Web/sites/config",
                "existenceCondition": {
                  "field": "Microsoft.Web/sites/config/web.cors.allowedOrigins[*]",
                  "notEquals": "*"
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Web/sites"
                },
                {
                  "field": "kind",
                  "contains": "functionapp"
                },
                {
                  "field": "kind",
                  "notContains": "workflowapp"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "0820b7b9-23aa-4725-a1ce-ae4558f718e5"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5744710e-cc2f-4ee8-8809-3b11e89f4bc9",
        "Name": "5744710e-cc2f-4ee8-8809-3b11e89f4bc9",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/5744710e-cc2f-4ee8-8809-3b11e89f4bc9",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Cross-Origin Resource Sharing (CORS) should not allow all domains to access your app. Allow only required domains to interact with your app.",
          "displayName": "App Service apps should not have CORS configured to allow every resource to access your apps",
          "metadata": {
            "category": "App Service",
            "version": "2.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Web/sites/config",
                "existenceCondition": {
                  "field": "Microsoft.Web/sites/config/web.cors.allowedOrigins[*]",
                  "notEquals": "*"
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Web/sites"
                },
                {
                  "field": "kind",
                  "notContains": "functionapp"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "5744710e-cc2f-4ee8-8809-3b11e89f4bc9"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a7aca53f-2ed4-4466-a25e-0b45ade68efd",
        "Name": "a7aca53f-2ed4-4466-a25e-0b45ade68efd",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/a7aca53f-2ed4-4466-a25e-0b45ade68efd",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "DDoS protection standard should be enabled for all virtual networks with a subnet that is part of an application gateway with a public IP.",
          "displayName": "Azure DDoS Protection Standard should be enabled",
          "metadata": {
            "category": "Security Center",
            "version": "3.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "e3de1cc0-f4dd-3b34-e496-8b5381ba2d70",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "microsoft.network/virtualNetworks"
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "a7aca53f-2ed4-4466-a25e-0b45ade68efd"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/abfb4388-5bf4-4ad7-ba82-2cd2f41ceae9",
        "Name": "abfb4388-5bf4-4ad7-ba82-2cd2f41ceae9",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/abfb4388-5bf4-4ad7-ba82-2cd2f41ceae9",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Audit SQL servers without Advanced Data Security",
          "displayName": "Azure Defender for SQL should be enabled for unprotected Azure SQL servers",
          "metadata": {
            "category": "SQL",
            "version": "2.0.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Sql/servers/securityAlertPolicies",
                "name": "Default",
                "existenceCondition": {
                  "field": "Microsoft.Sql/servers/securityAlertPolicies/state",
                  "equals": "Enabled"
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Sql/servers"
                },
                {
                  "field": "kind",
                  "notContains": "analytics"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "abfb4388-5bf4-4ad7-ba82-2cd2f41ceae9"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/938c4981-c2c9-4168-9cd6-972b8675f906",
        "Name": "938c4981-c2c9-4168-9cd6-972b8675f906",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/938c4981-c2c9-4168-9cd6-972b8675f906",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Microsoft Defender for SQL provides functionality for surfacing and mitigating potential database vulnerabilities, detecting anomalous activities that could indicate threats to SQL databases, discovering and classifying sensitive data. Once enabled, the protection status indicates that the resource is actively monitored. Even when Defender is enabled, multiple configuration settings should be validated on the agent, machine, workspace and SQL server to ensure active protection.",
          "displayName": "Microsoft Defender for SQL status should be protected for Arc-enabled SQL Servers",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.AzureArcData/sqlServerInstances"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.AzureArcData/sqlServerInstances/azureDefenderStatus",
                      "notEquals": "Protected"
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.AzureArcData/sqlServerInstances/azureDefenderStatus",
                          "Equals": "Protected"
                        },
                        {
                          "value": "[field('Microsoft.AzureArcData/sqlServerInstances/azureDefenderStatusLastUpdated')]",
                          "less": "[addDays(utcNow(), -1)]"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "938c4981-c2c9-4168-9cd6-972b8675f906"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7926a6d1-b268-4586-8197-e8ae90c877d7",
        "Name": "7926a6d1-b268-4586-8197-e8ae90c877d7",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/7926a6d1-b268-4586-8197-e8ae90c877d7",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Microsoft Defender for APIs brings new discovery, protection, detection, & response coverage to monitor for common API based attacks & security misconfigurations.",
          "displayName": "[Preview]: Microsoft Defender for APIs should be enabled",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.2-preview",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z",
            "preview": true
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/pricings",
                "name": "Api",
                "existenceCondition": {
                  "field": "Microsoft.Security/pricings/pricingTier",
                  "equals": "Standard"
                },
                "existenceScope": "subscription"
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "7926a6d1-b268-4586-8197-e8ae90c877d7"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/abfb7388-5bf4-4ad7-ba99-2cd2f41cebb9",
        "Name": "abfb7388-5bf4-4ad7-ba99-2cd2f41cebb9",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/abfb7388-5bf4-4ad7-ba99-2cd2f41cebb9",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Audit each SQL Managed Instance without advanced data security.",
          "displayName": "Azure Defender for SQL should be enabled for unprotected SQL Managed Instances",
          "metadata": {
            "category": "SQL",
            "version": "1.0.2",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Sql/managedInstances/securityAlertPolicies",
                "name": "Default",
                "existenceCondition": {
                  "field": "Microsoft.Sql/managedInstances/securityAlertPolicies/state",
                  "equals": "Enabled"
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Sql/managedInstances"
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "abfb7388-5bf4-4ad7-ba99-2cd2f41cebb9"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ac4a19c2-fa67-49b4-8ae5-0b2e78c49457",
        "Name": "ac4a19c2-fa67-49b4-8ae5-0b2e78c49457",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/ac4a19c2-fa67-49b4-8ae5-0b2e78c49457",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "To provide granular filtering on the actions that users can perform, use Azure Role-Based Access Control (RBAC) to manage permissions in Kubernetes Service Clusters and configure relevant authorization policies.",
          "displayName": "Azure Role-Based Access Control (RBAC) should be used on Kubernetes Services",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.3",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.ContainerService/managedClusters"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.ContainerService/managedClusters/enableRBAC",
                      "exists": "false"
                    },
                    {
                      "field": "Microsoft.ContainerService/managedClusters/enableRBAC",
                      "equals": "false"
                    }
                  ]
                }
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "ac4a19c2-fa67-49b4-8ae5-0b2e78c49457"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0e246bcf-5f6f-4f87-bc6f-775d4712c7ea",
        "Name": "0e246bcf-5f6f-4f87-bc6f-775d4712c7ea",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0e246bcf-5f6f-4f87-bc6f-775d4712c7ea",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Restrict access to the Kubernetes Service Management API by granting API access only to IP addresses in specific ranges. It is recommended to limit access to authorized IP ranges to ensure that only applications from allowed networks can access the cluster.",
          "displayName": "Authorized IP ranges should be defined on Kubernetes Services",
          "metadata": {
            "category": "Security Center",
            "version": "2.0.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.ContainerService/managedClusters"
                },
                {
                  "field": "Microsoft.ContainerService/managedClusters/apiServerAccessProfile.authorizedIPRanges",
                  "exists": "false"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.ContainerService/managedClusters/apiServerAccessProfile.enablePrivateCluster",
                      "exists": "false"
                    },
                    {
                      "field": "Microsoft.ContainerService/managedClusters/apiServerAccessProfile.enablePrivateCluster",
                      "equals": "false"
                    }
                  ]
                }
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "0e246bcf-5f6f-4f87-bc6f-775d4712c7ea"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ef2a8f2a-b3d9-49cd-a8a8-9a3aaaf647d9",
        "Name": "ef2a8f2a-b3d9-49cd-a8a8-9a3aaaf647d9",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/ef2a8f2a-b3d9-49cd-a8a8-9a3aaaf647d9",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Audit Azure SQL servers which do not have vulnerability assessment properly configured. Vulnerability assessment can discover, track, and help you remediate potential database vulnerabilities.",
          "displayName": "Vulnerability assessment should be enabled on your SQL servers",
          "metadata": {
            "category": "SQL",
            "version": "3.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "82e20e14-edc5-4373-bfc4-f13121257c37",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status",
                  "exists": "true"
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Sql/servers"
                },
                {
                  "field": "kind",
                  "notContains": "analytics"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "ef2a8f2a-b3d9-49cd-a8a8-9a3aaaf647d9"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1b7aa243-30e4-4c9e-bca8-d0d3022b634a",
        "Name": "1b7aa243-30e4-4c9e-bca8-d0d3022b634a",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/1b7aa243-30e4-4c9e-bca8-d0d3022b634a",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Audit each SQL Managed Instance which doesn't have recurring vulnerability assessment scans enabled. Vulnerability assessment can discover, track, and help you remediate potential database vulnerabilities.",
          "displayName": "Vulnerability assessment should be enabled on SQL Managed Instance",
          "metadata": {
            "category": "SQL",
            "version": "1.0.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Sql/managedInstances/vulnerabilityAssessments",
                "name": "default",
                "existenceCondition": {
                  "field": "Microsoft.Sql/managedInstances/vulnerabilityAssessments/recurringScans.isEnabled",
                  "equals": "True"
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Sql/managedInstances"
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "1b7aa243-30e4-4c9e-bca8-d0d3022b634a"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/08e6af2d-db70-460a-bfe9-d5bd474ba9d6",
        "Name": "08e6af2d-db70-460a-bfe9-d5bd474ba9d6",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/08e6af2d-db70-460a-bfe9-d5bd474ba9d6",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Azure Security Center analyzes the traffic patterns of Internet facing virtual machines and provides Network Security Group rule recommendations that reduce the potential attack surface",
          "displayName": "Adaptive network hardening recommendations should be applied on internet facing virtual machines",
          "metadata": {
            "category": "Security Center",
            "version": "3.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "f9f0eed0-f143-47bf-b856-671ea2eeed62",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Compute/virtualMachines"
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "08e6af2d-db70-460a-bfe9-d5bd474ba9d6"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/22730e10-96f6-4aac-ad84-9383d35b5917",
        "Name": "22730e10-96f6-4aac-ad84-9383d35b5917",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/22730e10-96f6-4aac-ad84-9383d35b5917",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Open remote management ports are exposing your VM to a high level of risk from Internet-based attacks. These attacks attempt to brute force credentials to gain admin access to the machine.",
          "displayName": "Management ports should be closed on your virtual machines",
          "metadata": {
            "category": "Security Center",
            "version": "3.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "bc303248-3d14-44c2-96a0-55f5c326b5fe",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Compute/virtualMachines",
                "Microsoft.ClassicCompute/virtualMachines"
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "22730e10-96f6-4aac-ad84-9383d35b5917"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/bd352bd5-2853-4985-bf0d-73806b4a5744",
        "Name": "bd352bd5-2853-4985-bf0d-73806b4a5744",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/bd352bd5-2853-4985-bf0d-73806b4a5744",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Enabling IP forwarding on a virtual machine's NIC allows the machine to receive traffic addressed to other destinations. IP forwarding is rarely required (e.g., when using the VM as a network virtual appliance), and therefore, this should be reviewed by the network security team.",
          "displayName": "IP Forwarding on your virtual machine should be disabled",
          "metadata": {
            "category": "Security Center",
            "version": "3.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "c3b51c94-588b-426b-a892-24696f9e54cc",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Compute/virtualMachines",
                "Microsoft.ClassicCompute/virtualMachines"
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "bd352bd5-2853-4985-bf0d-73806b4a5744"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0a370ff3-6cab-4e85-8995-295fd854c5b8",
        "Name": "0a370ff3-6cab-4e85-8995-295fd854c5b8",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0a370ff3-6cab-4e85-8995-295fd854c5b8",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Implementing Transparent Data Encryption (TDE) with your own key provides increased transparency and control over the TDE Protector, increased security with an HSM-backed external service, and promotion of separation of duties. This recommendation applies to organizations with a related compliance requirement.",
          "displayName": "SQL servers should use customer-managed keys to encrypt data at rest",
          "metadata": {
            "category": "SQL",
            "version": "2.0.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "anyOf": [
                {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Sql/servers"
                    },
                    {
                      "value": "[resourcegroup().managedBy]",
                      "notContains": "/providers/Microsoft.Synapse/"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Sql/servers/keyid",
                          "exists": false
                        },
                        {
                          "field": "Microsoft.Sql/servers/keyid",
                          "equals": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Sql/servers/encryptionProtector"
                    },
                    {
                      "value": "[resourcegroup().managedBy]",
                      "notContains": "/providers/Microsoft.Synapse/"
                    },
                    {
                      "field": "Microsoft.Sql/servers/encryptionProtector/serverKeyType",
                      "notequals": "AzureKeyVault"
                    }
                  ]
                }
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "0a370ff3-6cab-4e85-8995-295fd854c5b8"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ac01ad65-10e5-46df-bdd9-6b0cad13e1d2",
        "Name": "ac01ad65-10e5-46df-bdd9-6b0cad13e1d2",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/ac01ad65-10e5-46df-bdd9-6b0cad13e1d2",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Implementing Transparent Data Encryption (TDE) with your own key provides you with increased transparency and control over the TDE Protector, increased security with an HSM-backed external service, and promotion of separation of duties. This recommendation applies to organizations with a related compliance requirement.",
          "displayName": "SQL managed instances should use customer-managed keys to encrypt data at rest",
          "metadata": {
            "category": "SQL",
            "version": "2.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "anyOf": [
                {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Sql/managedInstances"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Sql/managedInstances/keyid",
                          "exists": false
                        },
                        {
                          "field": "Microsoft.Sql/managedInstances/keyid",
                          "equals": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Sql/managedInstances/encryptionProtector"
                    },
                    {
                      "field": "Microsoft.Sql/managedInstances/encryptionProtector/serverKeyType",
                      "notequals": "AzureKeyVault"
                    }
                  ]
                }
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "ac01ad65-10e5-46df-bdd9-6b0cad13e1d2"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e8cbc669-f12d-49eb-93e7-9273119e9933",
        "Name": "e8cbc669-f12d-49eb-93e7-9273119e9933",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/e8cbc669-f12d-49eb-93e7-9273119e9933",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Audit vulnerabilities in security configuration on machines with Docker installed and display as recommendations in Azure Security Center.",
          "displayName": "Vulnerabilities in container security configurations should be remediated",
          "metadata": {
            "category": "Security Center",
            "version": "3.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "0677209d-e675-2c6f-e91a-54cef2878663",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Compute/virtualMachines",
                "Microsoft.ClassicCompute/virtualMachines",
                "Microsoft.Compute/virtualMachineScaleSets"
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "e8cbc669-f12d-49eb-93e7-9273119e9933"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2f2ee1de-44aa-4762-b6bd-0893fc3f306d",
        "Name": "2f2ee1de-44aa-4762-b6bd-0893fc3f306d",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/2f2ee1de-44aa-4762-b6bd-0893fc3f306d",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable Dependency Agent for Windows VMs monitoring",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Security Center uses the Microsoft Dependency agent to collect network traffic data from your Azure virtual machines to enable advanced network protection features such as traffic visualization on the network map, network hardening recommendations and specific network threats.",
          "displayName": "[Preview]: Network traffic data collection agent should be installed on Windows virtual machines",
          "metadata": {
            "category": "Monitoring",
            "version": "1.0.2-preview",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z",
            "preview": true
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Compute/virtualMachines/extensions",
                "existenceCondition": {
                  "allOf": [
                    {
                      "field": "Microsoft.Compute/virtualMachines/extensions/type",
                      "equals": "DependencyAgentWindows"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                      "equals": "Microsoft.Azure.Monitoring.DependencyAgent"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/extensions/provisioningState",
                      "equals": "Succeeded"
                    }
                  ]
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachines"
                },
                {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "MicrosoftWindowsServer"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "WindowsServer"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "in": [
                            "2008-R2-SP1",
                            "2008-R2-SP1-smalldisk",
                            "2012-Datacenter",
                            "2012-Datacenter-smalldisk",
                            "2012-R2-Datacenter",
                            "2012-R2-Datacenter-smalldisk",
                            "2016-Datacenter",
                            "2016-Datacenter-Server-Core",
                            "2016-Datacenter-Server-Core-smalldisk",
                            "2016-Datacenter-smalldisk",
                            "2016-Datacenter-with-Containers",
                            "2016-Datacenter-with-RDSH",
                            "2019-Datacenter",
                            "2019-Datacenter-Core",
                            "2019-Datacenter-Core-smalldisk",
                            "2019-Datacenter-Core-with-Containers",
                            "2019-Datacenter-Core-with-Containers-smalldisk",
                            "2019-Datacenter-smalldisk",
                            "2019-Datacenter-with-Containers",
                            "2019-Datacenter-with-Containers-smalldisk",
                            "2019-Datacenter-zhcn"
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "MicrosoftWindowsServer"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "WindowsServerSemiAnnual"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "in": [
                            "Datacenter-Core-1709-smalldisk",
                            "Datacenter-Core-1709-with-Containers-smalldisk",
                            "Datacenter-Core-1803-with-Containers-smalldisk"
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "MicrosoftWindowsServerHPCPack"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "WindowsServerHPCPack"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "MicrosoftSQLServer"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "*-WS2016"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "*-WS2016-BYOL"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "*-WS2012R2"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "*-WS2012R2-BYOL"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "MicrosoftRServer"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "MLServer-WS2016"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "MicrosoftVisualStudio"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "in": [
                            "VisualStudio",
                            "Windows"
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "MicrosoftDynamicsAX"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "Dynamics"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "equals": "Pre-Req-AX7-Onebox-U8"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "microsoft-ads"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "windows-data-science-vm"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "MicrosoftWindowsDesktop"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "Windows-10"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "2f2ee1de-44aa-4762-b6bd-0893fc3f306d"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/04c4380f-3fae-46e8-96c9-30193528f602",
        "Name": "04c4380f-3fae-46e8-96c9-30193528f602",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/04c4380f-3fae-46e8-96c9-30193528f602",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable Dependency Agent for Linux VMs monitoring",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Security Center uses the Microsoft Dependency agent to collect network traffic data from your Azure virtual machines to enable advanced network protection features such as traffic visualization on the network map, network hardening recommendations and specific network threats.",
          "displayName": "[Preview]: Network traffic data collection agent should be installed on Linux virtual machines",
          "metadata": {
            "category": "Monitoring",
            "version": "1.0.2-preview",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z",
            "preview": true
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Compute/virtualMachines/extensions",
                "existenceCondition": {
                  "allOf": [
                    {
                      "field": "Microsoft.Compute/virtualMachines/extensions/type",
                      "equals": "DependencyAgentLinux"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                      "equals": "Microsoft.Azure.Monitoring.DependencyAgent"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/extensions/provisioningState",
                      "equals": "Succeeded"
                    }
                  ]
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachines"
                },
                {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "Canonical"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "UbuntuServer"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "in": [
                                "14.04.0-LTS",
                                "14.04.1-LTS",
                                "14.04.5-LTS"
                              ]
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "in": [
                                "16.04-LTS",
                                "16.04.0-LTS"
                              ]
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "in": [
                                "18.04-LTS"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "RedHat"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "in": [
                            "RHEL",
                            "RHEL-SAP-HANA"
                          ]
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "like": "6.*"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "like": "7*"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "SUSE"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "in": [
                            "SLES",
                            "SLES-HPC",
                            "SLES-HPC-Priority",
                            "SLES-SAP",
                            "SLES-SAP-BYOS",
                            "SLES-Priority",
                            "SLES-BYOS",
                            "SLES-SAPCAL",
                            "SLES-Standard"
                          ]
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "in": [
                                "12-SP2",
                                "12-SP3",
                                "12-SP4"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "OpenLogic"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "in": [
                            "CentOS",
                            "Centos-LVM",
                            "CentOS-SRIOV"
                          ]
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "like": "6.*"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "like": "7*"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "cloudera"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "cloudera-centos-os"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "like": "7*"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "04c4380f-3fae-46e8-96c9-30193528f602"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/fc5e4038-4584-4632-8c85-c0448d374b2c",
        "Name": "fc5e4038-4584-4632-8c85-c0448d374b2c",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/fc5e4038-4584-4632-8c85-c0448d374b2c",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable All Internet traffic should be routed via your deployed Azure Firewall",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Azure Security Center has identified that some of your subnets aren't protected with a next generation firewall. Protect your subnets from potential threats by restricting access to them with Azure Firewall or a supported next generation firewall",
          "displayName": "[Preview]: All Internet traffic should be routed via your deployed Azure Firewall",
          "metadata": {
            "category": "Network",
            "version": "3.0.0-preview",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z",
            "preview": true
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Network/azureFirewalls",
                "existenceCondition": {
                  "equals": 1,
                  "count": {
                    "field": "Microsoft.Network/azureFirewalls/ipConfigurations[*]",
                    "where": {
                      "field": "Microsoft.Network/azureFirewalls/ipConfigurations[*].subnet.id",
                      "like": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/*/providers/Microsoft.Network/virtualNetworks/', first(split(field('fullName'), '/')), '/subnets/AzureFirewallSubnet')]"
                    }
                  }
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Network/virtualNetworks"
                },
                {
                  "count": {
                    "field": "Microsoft.Network/virtualNetworks/subnets[*]",
                    "where": {
                      "allOf": [
                        {
                          "count": {
                            "field": "Microsoft.Network/virtualNetworks/subnets[*].ipConfigurations[*]",
                            "where": {
                              "value": "[empty(field('Microsoft.Network/virtualNetworks/subnets[*].ipConfigurations[*].id'))]",
                              "equals": false
                            }
                          },
                          "greaterOrEquals": 2
                        },
                        {
                          "field": "Microsoft.Network/virtualNetworks/subnets[*].routeTable",
                          "exists": false
                        },
                        {
                          "not": {
                            "anyOf": [
                              {
                                "field": "Microsoft.Network/virtualNetworks/subnets[*].name",
                                "equals": "AzureBastionSubnet"
                              },
                              {
                                "field": "Microsoft.Network/virtualNetworks/subnets[*].name",
                                "equals": "GatewaySubnet"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "greater": 0
                }
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "fc5e4038-4584-4632-8c85-c0448d374b2c"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/d69b1763-b96d-40b8-a2d9-ca31e9fd0d3e",
        "Name": "d69b1763-b96d-40b8-a2d9-ca31e9fd0d3e",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/d69b1763-b96d-40b8-a2d9-ca31e9fd0d3e",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "This policy audits Windows Azure Arc machines if the Log Analytics extension is not installed.",
          "displayName": "[Preview]: Log Analytics extension should be installed on your Windows Azure Arc machines",
          "metadata": {
            "category": "Monitoring",
            "version": "1.0.1-preview",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z",
            "preview": true
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.HybridCompute/machines/extensions",
                "existenceCondition": {
                  "allOf": [
                    {
                      "field": "Microsoft.HybridCompute/machines/extensions/type",
                      "equals": "MicrosoftMonitoringAgent"
                    },
                    {
                      "field": "Microsoft.HybridCompute/machines/extensions/publisher",
                      "equals": "Microsoft.EnterpriseCloud.Monitoring"
                    },
                    {
                      "field": "Microsoft.HybridCompute/machines/extensions/provisioningState",
                      "equals": "Succeeded"
                    }
                  ]
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.HybridCompute/machines"
                },
                {
                  "field": "Microsoft.HybridCompute/imageOffer",
                  "like": "windows*"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "d69b1763-b96d-40b8-a2d9-ca31e9fd0d3e"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/842c54e8-c2f9-4d79-ae8d-38d8b8019373",
        "Name": "842c54e8-c2f9-4d79-ae8d-38d8b8019373",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/842c54e8-c2f9-4d79-ae8d-38d8b8019373",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "This policy audits Linux Azure Arc machines if the Log Analytics extension is not installed.",
          "displayName": "[Preview]: Log Analytics extension should be installed on your Linux Azure Arc machines",
          "metadata": {
            "category": "Monitoring",
            "version": "1.0.1-preview",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z",
            "preview": true
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.HybridCompute/machines/extensions",
                "existenceCondition": {
                  "allOf": [
                    {
                      "field": "Microsoft.HybridCompute/machines/extensions/type",
                      "equals": "OmsAgentForLinux"
                    },
                    {
                      "field": "Microsoft.HybridCompute/machines/extensions/publisher",
                      "equals": "Microsoft.EnterpriseCloud.Monitoring"
                    },
                    {
                      "field": "Microsoft.HybridCompute/machines/extensions/provisioningState",
                      "equals": "Succeeded"
                    }
                  ]
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.HybridCompute/machines"
                },
                {
                  "field": "Microsoft.HybridCompute/imageOffer",
                  "like": "linux*"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "842c54e8-c2f9-4d79-ae8d-38d8b8019373"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/4078e558-bda6-41fb-9b3c-361e8875200d",
        "Name": "4078e558-bda6-41fb-9b3c-361e8875200d",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/4078e558-bda6-41fb-9b3c-361e8875200d",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of this policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            },
            "IncludeArcMachines": {
              "allowedValues": [
                "true",
                "false"
              ],
              "defaultValue": "false",
              "metadata": {
                "description": "By selecting this option, you agree to be charged monthly per Arc connected machine.",
                "displayName": "Include Arc connected servers",
                "portalReview": "true"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Machines are non-compliant if Log Analytics agent is not installed on Azure Arc enabled windows server.",
          "displayName": "Windows machines should have Log Analytics agent installed on Azure Arc",
          "metadata": {
            "category": "Guest Configuration",
            "version": "2.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z",
            "guestConfiguration": {
              "version": "1.*",
              "name": "WindowsLogAnalyticsAgentInstalled"
            },
            "requiredProviders": [
              "Microsoft.GuestConfiguration"
            ]
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                "name": "WindowsLogAnalyticsAgentInstalled",
                "existenceCondition": {
                  "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                  "equals": "Compliant"
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "value": "[parameters('IncludeArcMachines')]",
                  "equals": "true"
                },
                {
                  "field": "type",
                  "equals": "Microsoft.HybridCompute/machines"
                },
                {
                  "field": "Microsoft.HybridCompute/imageOffer",
                  "like": "windows*"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "4078e558-bda6-41fb-9b3c-361e8875200d"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1e7fed80-8321-4605-b42c-65fc300f23a3",
        "Name": "1e7fed80-8321-4605-b42c-65fc300f23a3",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/1e7fed80-8321-4605-b42c-65fc300f23a3",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of this policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            },
            "IncludeArcMachines": {
              "allowedValues": [
                "true",
                "false"
              ],
              "defaultValue": "false",
              "metadata": {
                "description": "By selecting this option, you agree to be charged monthly per Arc connected machine.",
                "displayName": "Include Arc connected servers",
                "portalReview": "true"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Machines are non-compliant if Log Analytics agent is not installed on Azure Arc enabled Linux server.",
          "displayName": "Linux machines should have Log Analytics agent installed on Azure Arc",
          "metadata": {
            "category": "Guest Configuration",
            "version": "1.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z",
            "guestConfiguration": {
              "version": "1.*",
              "name": "LinuxLogAnalyticsAgentInstalled"
            },
            "requiredProviders": [
              "Microsoft.GuestConfiguration"
            ]
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                "name": "LinuxLogAnalyticsAgentInstalled",
                "existenceCondition": {
                  "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                  "equals": "Compliant"
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "value": "[parameters('IncludeArcMachines')]",
                  "equals": "true"
                },
                {
                  "field": "type",
                  "equals": "Microsoft.HybridCompute/machines"
                },
                {
                  "field": "Microsoft.HybridCompute/imageOffer",
                  "like": "linux*"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "1e7fed80-8321-4605-b42c-65fc300f23a3"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0e6763cc-5078-4e64-889d-ff4d9a839047",
        "Name": "0e6763cc-5078-4e64-889d-ff4d9a839047",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0e6763cc-5078-4e64-889d-ff4d9a839047",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Azure Defender for Key Vault provides an additional layer of protection and security intelligence by detecting unusual and potentially harmful attempts to access or exploit key vault accounts.",
          "displayName": "Azure Defender for Key Vault should be enabled",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.3",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/pricings",
                "name": "KeyVaults",
                "existenceCondition": {
                  "field": "Microsoft.Security/pricings/pricingTier",
                  "equals": "Standard"
                },
                "existenceScope": "subscription"
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "0e6763cc-5078-4e64-889d-ff4d9a839047"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7fe3b40f-802b-4cdd-8bd4-fd799c948cc2",
        "Name": "7fe3b40f-802b-4cdd-8bd4-fd799c948cc2",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/7fe3b40f-802b-4cdd-8bd4-fd799c948cc2",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Azure Defender for SQL provides functionality for surfacing and mitigating potential database vulnerabilities, detecting anomalous activities that could indicate threats to SQL databases, and discovering and classifying sensitive data.",
          "displayName": "Azure Defender for Azure SQL Database servers should be enabled",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.2",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/pricings",
                "name": "SqlServers",
                "existenceCondition": {
                  "field": "Microsoft.Security/pricings/pricingTier",
                  "equals": "Standard"
                },
                "existenceScope": "subscription"
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "7fe3b40f-802b-4cdd-8bd4-fd799c948cc2"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6581d072-105e-4418-827f-bd446d56421b",
        "Name": "6581d072-105e-4418-827f-bd446d56421b",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/6581d072-105e-4418-827f-bd446d56421b",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Azure Defender for SQL provides functionality for surfacing and mitigating potential database vulnerabilities, detecting anomalous activities that could indicate threats to SQL databases, and discovering and classifying sensitive data.",
          "displayName": "Azure Defender for SQL servers on machines should be enabled",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.2",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/pricings",
                "name": "SqlServerVirtualMachines",
                "existenceCondition": {
                  "field": "Microsoft.Security/pricings/pricingTier",
                  "equals": "Standard"
                },
                "existenceScope": "subscription"
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "6581d072-105e-4418-827f-bd446d56421b"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/308fbb08-4ab8-4e67-9b29-592e93fb94fa",
        "Name": "308fbb08-4ab8-4e67-9b29-592e93fb94fa",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/308fbb08-4ab8-4e67-9b29-592e93fb94fa",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Microsoft Defender for Storage (Classic) provides detections of unusual and potentially harmful attempts to access or exploit storage accounts.",
          "displayName": "Microsoft Defender for Storage (Classic) should be enabled",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.4",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/pricings",
                "name": "StorageAccounts",
                "existenceCondition": {
                  "field": "Microsoft.Security/pricings/pricingTier",
                  "equals": "Standard"
                },
                "existenceScope": "subscription"
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "308fbb08-4ab8-4e67-9b29-592e93fb94fa"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2913021d-f2fd-4f3d-b958-22354e2bdbcb",
        "Name": "2913021d-f2fd-4f3d-b958-22354e2bdbcb",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/2913021d-f2fd-4f3d-b958-22354e2bdbcb",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Azure Defender for App Service leverages the scale of the cloud, and the visibility that Azure has as a cloud provider, to monitor for common web app attacks.",
          "displayName": "Azure Defender for App Service should be enabled",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.3",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/pricings",
                "name": "AppServices",
                "existenceCondition": {
                  "field": "Microsoft.Security/pricings/pricingTier",
                  "equals": "Standard"
                },
                "existenceScope": "subscription"
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "2913021d-f2fd-4f3d-b958-22354e2bdbcb"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1c988dd6-ade4-430f-a608-2a3e5b0a6d38",
        "Name": "1c988dd6-ade4-430f-a608-2a3e5b0a6d38",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/1c988dd6-ade4-430f-a608-2a3e5b0a6d38",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Microsoft Defender for Containers provides hardening, vulnerability assessment and run-time protections for your Azure, hybrid, and multi-cloud Kubernetes environments.",
          "displayName": "Microsoft Defender for Containers should be enabled",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/pricings",
                "name": "Containers",
                "existenceCondition": {
                  "field": "Microsoft.Security/pricings/pricingTier",
                  "equals": "Standard"
                },
                "existenceScope": "subscription"
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "1c988dd6-ade4-430f-a608-2a3e5b0a6d38"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/4da35fc9-c9e7-4960-aec9-797fe7d9051d",
        "Name": "4da35fc9-c9e7-4960-aec9-797fe7d9051d",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/4da35fc9-c9e7-4960-aec9-797fe7d9051d",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Azure Defender for servers provides real-time threat protection for server workloads and generates hardening recommendations as well as alerts about suspicious activities.",
          "displayName": "Azure Defender for servers should be enabled",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.3",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/pricings",
                "name": "VirtualMachines",
                "existenceCondition": {
                  "field": "Microsoft.Security/pricings/pricingTier",
                  "equals": "Standard"
                },
                "existenceScope": "subscription"
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "4da35fc9-c9e7-4960-aec9-797fe7d9051d"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0a15ec92-a229-4763-bb14-0ea34a568f8d",
        "Name": "0a15ec92-a229-4763-bb14-0ea34a568f8d",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0a15ec92-a229-4763-bb14-0ea34a568f8d",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Azure Policy Add-on for Kubernetes service (AKS) extends Gatekeeper v3, an admission controller webhook for Open Policy Agent (OPA), to apply at-scale enforcements and safeguards on your clusters in a centralized, consistent manner.",
          "displayName": "Azure Policy Add-on for Kubernetes service (AKS) should be installed and enabled on your clusters",
          "metadata": {
            "category": "Kubernetes",
            "version": "1.0.2",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.ContainerService/managedClusters"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.ContainerService/managedClusters/addonProfiles.azurePolicy.enabled",
                      "exists": "false"
                    },
                    {
                      "field": "Microsoft.ContainerService/managedClusters/addonProfiles.azurePolicy.enabled",
                      "equals": "false"
                    }
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "0a15ec92-a229-4763-bb14-0ea34a568f8d"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6b2122c1-8120-4ff5-801b-17625a355590",
        "Name": "6b2122c1-8120-4ff5-801b-17625a355590",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/6b2122c1-8120-4ff5-801b-17625a355590",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "The Azure Policy extension for Azure Arc provides at-scale enforcements and safeguards on your Arc enabled Kubernetes clusters in a centralized, consistent manner. Learn more at https://aka.ms/akspolicydoc.",
          "displayName": "Azure Arc enabled Kubernetes clusters should have the Azure Policy extension installed",
          "metadata": {
            "category": "Kubernetes",
            "version": "1.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.KubernetesConfiguration/extensions",
                "existenceCondition": {
                  "allOf": [
                    {
                      "field": "Microsoft.KubernetesConfiguration/extensions/extensionType",
                      "equals": "microsoft.policyinsights"
                    },
                    {
                      "field": "Microsoft.KubernetesConfiguration/extensions/provisioningState",
                      "equals": "Succeeded"
                    }
                  ]
                },
                "evaluationDelay": "AfterProvisioning"
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Kubernetes/connectedClusters"
                },
                {
                  "field": "Microsoft.Kubernetes/connectedClusters/distribution",
                  "notEquals": "aks"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "6b2122c1-8120-4ff5-801b-17625a355590"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/febd0533-8e55-448f-b837-bd0e06f16469",
        "Name": "febd0533-8e55-448f-b837-bd0e06f16469",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/febd0533-8e55-448f-b837-bd0e06f16469",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Deny",
              "metadata": {
                "description": "'Audit' allows a non-compliant resource to be created, but flags it as non-compliant. 'Deny' blocks the resource creation. 'Disable' turns off the policy.",
                "displayName": "Effect",
                "portalReview": true
              },
              "schema": null,
              "type": "String"
            },
            "excludedNamespaces": {
              "allowedValues": null,
              "defaultValue": [
                "kube-system",
                "gatekeeper-system",
                "azure-arc",
                "azure-extensions-usage-system"
              ],
              "metadata": {
                "description": "List of Kubernetes namespaces to exclude from policy evaluation. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design. \"azure-extensions-usage-system\" is optional to remove.",
                "displayName": "Namespace exclusions"
              },
              "schema": null,
              "type": "Array"
            },
            "labelSelector": {
              "allowedValues": null,
              "defaultValue": {},
              "metadata": {
                "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources.",
                "displayName": "Kubernetes label selector"
              },
              "schema": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "matchExpressions": {
                    "description": "matchExpressions is a list of values, a key, and an operator.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string",
                          "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                          ]
                        },
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ]
                    },
                    "minItems": 1
                  },
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "minProperties": 1
                  }
                }
              },
              "type": "Object"
            },
            "allowedContainerImagesRegex": {
              "allowedValues": null,
              "defaultValue": null,
              "metadata": {
                "description": "The RegEx rule used to match allowed container image field in a Kubernetes cluster. For example, to allow any Azure Container Registry image by matching partial path: ^[^\\/]+\\.azurecr\\.io\\/.+$ and for multiple registries: ^([^\\/]+\\.azurecr\\.io|registry\\.io)\\/.+$",
                "displayName": "Allowed registry or registries regex",
                "portalReview": true
              },
              "schema": null,
              "type": "String"
            },
            "namespaces": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces.",
                "displayName": "Namespace inclusions"
              },
              "schema": null,
              "type": "Array"
            },
            "excludedContainers": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identify is the name of container. Use an empty list to apply this policy to all containers in all namespaces.",
                "displayName": "Containers exclusions"
              },
              "schema": null,
              "type": "Array"
            }
          },
          "description": "Use images from trusted registries to reduce the Kubernetes cluster's exposure risk to unknown vulnerabilities, security issues and malicious images. This policy is generally available for Kubernetes Service (AKS), and preview for Azure Arc enabled Kubernetes. For more information, see https://aka.ms/kubepolicydoc.",
          "displayName": "Kubernetes cluster containers should only use allowed images",
          "metadata": {
            "category": "Kubernetes",
            "version": "9.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6551Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "excludedNamespaces": "[parameters('excludedNamespaces')]",
                "labelSelector": "[parameters('labelSelector')]",
                "namespaces": "[parameters('namespaces')]",
                "templateInfo": {
                  "sourceType": "PublicURL",
                  "url": "https://store.policy.core.windows.net/kubernetes/container-allowed-images/v2/template.yaml"
                },
                "values": {
                  "excludedContainers": "[parameters('excludedContainers')]",
                  "imageRegex": "[parameters('allowedContainerImagesRegex')]"
                },
                "apiGroups": [
                  ""
                ],
                "kinds": [
                  "Pod"
                ]
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Kubernetes/connectedClusters",
                "Microsoft.ContainerService/managedClusters"
              ]
            }
          },
          "mode": "Microsoft.Kubernetes.Data"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "febd0533-8e55-448f-b837-bd0e06f16469"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/95edb821-ddaf-4404-9732-666045e056b4",
        "Name": "95edb821-ddaf-4404-9732-666045e056b4",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/95edb821-ddaf-4404-9732-666045e056b4",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Deny",
              "metadata": {
                "description": "'Audit' allows a non-compliant resource to be created, but flags it as non-compliant. 'Deny' blocks the resource creation. 'Disable' turns off the policy.",
                "displayName": "Effect",
                "portalReview": true
              },
              "schema": null,
              "type": "String"
            },
            "excludedNamespaces": {
              "allowedValues": null,
              "defaultValue": [
                "kube-system",
                "gatekeeper-system",
                "azure-arc",
                "azure-extensions-usage-system"
              ],
              "metadata": {
                "description": "List of Kubernetes namespaces to exclude from policy evaluation. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design. \"azure-extensions-usage-system\" is optional to remove.",
                "displayName": "Namespace exclusions"
              },
              "schema": null,
              "type": "Array"
            },
            "labelSelector": {
              "allowedValues": null,
              "defaultValue": {},
              "metadata": {
                "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources.",
                "displayName": "Kubernetes label selector"
              },
              "schema": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "matchExpressions": {
                    "description": "matchExpressions is a list of values, a key, and an operator.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string",
                          "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                          ]
                        },
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ]
                    },
                    "minItems": 1
                  },
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "minProperties": 1
                  }
                }
              },
              "type": "Object"
            },
            "excludedImages": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identifier is the image of container. Prefix-matching can be signified with `*`. For example: `myregistry.azurecr.io/istio:*`. It is recommended that users use the fully-qualified Docker image name (e.g. start with a domain name) in order to avoid unexpectedly exempting images from an untrusted repository.",
                "displayName": "Image exclusions",
                "portalReview": true
              },
              "schema": null,
              "type": "Array"
            },
            "namespaces": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces.",
                "displayName": "Namespace inclusions"
              },
              "schema": null,
              "type": "Array"
            },
            "excludedContainers": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identify is the name of container. Use an empty list to apply this policy to all containers in all namespaces.",
                "displayName": "Containers exclusions"
              },
              "schema": null,
              "type": "Array"
            }
          },
          "description": "Do not allow privileged containers creation in a Kubernetes cluster. This recommendation is part of CIS 5.2.1 which is intended to improve the security of your Kubernetes environments. This policy is generally available for Kubernetes Service (AKS), and preview for Azure Arc enabled Kubernetes. For more information, see https://aka.ms/kubepolicydoc.",
          "displayName": "Kubernetes cluster should not allow privileged containers",
          "metadata": {
            "category": "Kubernetes",
            "version": "9.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6551Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "excludedNamespaces": "[parameters('excludedNamespaces')]",
                "labelSelector": "[parameters('labelSelector')]",
                "namespaces": "[parameters('namespaces')]",
                "templateInfo": {
                  "sourceType": "PublicURL",
                  "url": "https://store.policy.core.windows.net/kubernetes/container-no-privilege/v2/template.yaml"
                },
                "values": {
                  "excludedImages": "[parameters('excludedImages')]",
                  "excludedContainers": "[parameters('excludedContainers')]"
                },
                "apiGroups": [
                  ""
                ],
                "kinds": [
                  "Pod"
                ]
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Kubernetes/connectedClusters",
                "Microsoft.ContainerService/managedClusters"
              ]
            }
          },
          "mode": "Microsoft.Kubernetes.Data"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "95edb821-ddaf-4404-9732-666045e056b4"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/233a2a17-77ca-4fb1-9b6b-69223d272a44",
        "Name": "233a2a17-77ca-4fb1-9b6b-69223d272a44",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/233a2a17-77ca-4fb1-9b6b-69223d272a44",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Deny",
              "metadata": {
                "description": "'Audit' allows a non-compliant resource to be created, but flags it as non-compliant. 'Deny' blocks the resource creation. 'Disable' turns off the policy.",
                "displayName": "Effect",
                "portalReview": true
              },
              "schema": null,
              "type": "String"
            },
            "excludedNamespaces": {
              "allowedValues": null,
              "defaultValue": [
                "kube-system",
                "gatekeeper-system",
                "azure-arc",
                "azure-extensions-usage-system"
              ],
              "metadata": {
                "description": "List of Kubernetes namespaces to exclude from policy evaluation. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design. \"azure-extensions-usage-system\" is optional to remove.",
                "displayName": "Namespace exclusions"
              },
              "schema": null,
              "type": "Array"
            },
            "labelSelector": {
              "allowedValues": null,
              "defaultValue": {},
              "metadata": {
                "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources.",
                "displayName": "Kubernetes label selector"
              },
              "schema": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "matchExpressions": {
                    "description": "matchExpressions is a list of values, a key, and an operator.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string",
                          "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                          ]
                        },
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ]
                    },
                    "minItems": 1
                  },
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "minProperties": 1
                  }
                }
              },
              "type": "Object"
            },
            "namespaces": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces.",
                "displayName": "Namespace inclusions"
              },
              "schema": null,
              "type": "Array"
            },
            "allowedServicePortsList": {
              "allowedValues": null,
              "defaultValue": null,
              "metadata": {
                "description": "The list of service ports allowed in a Kubernetes cluster. Array only accepts strings. Example: [\"443\", \"80\"]",
                "displayName": "Allowed service ports list",
                "portalReview": true
              },
              "schema": null,
              "type": "Array"
            }
          },
          "description": "Restrict services to listen only on allowed ports to secure access to the Kubernetes cluster. This policy is generally available for Kubernetes Service (AKS), and preview for Azure Arc enabled Kubernetes. For more information, see https://aka.ms/kubepolicydoc.",
          "displayName": "Kubernetes cluster services should listen only on allowed ports",
          "metadata": {
            "category": "Kubernetes",
            "version": "8.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6551Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "excludedNamespaces": "[parameters('excludedNamespaces')]",
                "labelSelector": "[parameters('labelSelector')]",
                "namespaces": "[parameters('namespaces')]",
                "templateInfo": {
                  "sourceType": "PublicURL",
                  "url": "https://store.policy.core.windows.net/kubernetes/service-allowed-ports/v1/template.yaml"
                },
                "values": {
                  "allowedPorts": "[parameters('allowedServicePortsList')]",
                  "allowedServicePorts": "[parameters('allowedServicePortsList')]"
                },
                "apiGroups": [
                  ""
                ],
                "kinds": [
                  "Service"
                ]
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Kubernetes/connectedClusters",
                "Microsoft.ContainerService/managedClusters"
              ]
            }
          },
          "mode": "Microsoft.Kubernetes.Data"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "233a2a17-77ca-4fb1-9b6b-69223d272a44"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e345eecc-fa47-480f-9e88-67dcc122b164",
        "Name": "e345eecc-fa47-480f-9e88-67dcc122b164",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/e345eecc-fa47-480f-9e88-67dcc122b164",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Deny",
              "metadata": {
                "description": "'Audit' allows a non-compliant resource to be created, but flags it as non-compliant. 'Deny' blocks the resource creation. 'Disable' turns off the policy.",
                "displayName": "Effect",
                "portalReview": true
              },
              "schema": null,
              "type": "String"
            },
            "excludedNamespaces": {
              "allowedValues": null,
              "defaultValue": [
                "kube-system",
                "gatekeeper-system",
                "azure-arc",
                "azure-extensions-usage-system"
              ],
              "metadata": {
                "description": "List of Kubernetes namespaces to exclude from policy evaluation. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design. \"azure-extensions-usage-system\" is optional to remove.",
                "displayName": "Namespace exclusions"
              },
              "schema": null,
              "type": "Array"
            },
            "labelSelector": {
              "allowedValues": null,
              "defaultValue": {},
              "metadata": {
                "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources.",
                "displayName": "Kubernetes label selector"
              },
              "schema": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "matchExpressions": {
                    "description": "matchExpressions is a list of values, a key, and an operator.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string",
                          "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                          ]
                        },
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ]
                    },
                    "minItems": 1
                  },
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "minProperties": 1
                  }
                }
              },
              "type": "Object"
            },
            "excludedImages": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identifier is the image of container. Prefix-matching can be signified with `*`. For example: `myregistry.azurecr.io/istio:*`. It is recommended that users use the fully-qualified Docker image name (e.g. start with a domain name) in order to avoid unexpectedly exempting images from an untrusted repository.",
                "displayName": "Image exclusions",
                "portalReview": true
              },
              "schema": null,
              "type": "Array"
            },
            "namespaces": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces.",
                "displayName": "Namespace inclusions"
              },
              "schema": null,
              "type": "Array"
            },
            "excludedContainers": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identify is the name of container. Use an empty list to apply this policy to all containers in all namespaces.",
                "displayName": "Containers exclusions"
              },
              "schema": null,
              "type": "Array"
            },
            "memoryLimit": {
              "allowedValues": null,
              "defaultValue": null,
              "metadata": {
                "description": "The maximum memory bytes allowed for a container. E.g. 1Gi. For more information, please refer https://aka.ms/k8s-policy-pod-limits",
                "displayName": "Max allowed memory bytes",
                "portalReview": true
              },
              "schema": null,
              "type": "String"
            },
            "cpuLimit": {
              "allowedValues": null,
              "defaultValue": null,
              "metadata": {
                "description": "The maximum CPU units allowed for a container. E.g. 200m. For more information, please refer https://aka.ms/k8s-policy-pod-limits",
                "displayName": "Max allowed CPU units",
                "portalReview": true
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Enforce container CPU and memory resource limits to prevent resource exhaustion attacks in a Kubernetes cluster. This policy is generally available for Kubernetes Service (AKS), and preview for Azure Arc enabled Kubernetes. For more information, see https://aka.ms/kubepolicydoc.",
          "displayName": "Kubernetes cluster containers CPU and memory resource limits should not exceed the specified limits",
          "metadata": {
            "category": "Kubernetes",
            "version": "9.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6551Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "excludedNamespaces": "[parameters('excludedNamespaces')]",
                "labelSelector": "[parameters('labelSelector')]",
                "namespaces": "[parameters('namespaces')]",
                "templateInfo": {
                  "sourceType": "PublicURL",
                  "url": "https://store.policy.core.windows.net/kubernetes/container-resource-limits/v3/template.yaml"
                },
                "values": {
                  "excludedImages": "[parameters('excludedImages')]",
                  "excludedContainers": "[parameters('excludedContainers')]",
                  "memoryLimit": "[parameters('memoryLimit')]",
                  "cpuLimit": "[parameters('cpuLimit')]"
                },
                "apiGroups": [
                  ""
                ],
                "kinds": [
                  "Pod"
                ]
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Kubernetes/connectedClusters",
                "Microsoft.ContainerService/managedClusters"
              ]
            }
          },
          "mode": "Microsoft.Kubernetes.Data"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "e345eecc-fa47-480f-9e88-67dcc122b164"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f06ddb64-5fa3-4b77-b166-acb36f7f6042",
        "Name": "f06ddb64-5fa3-4b77-b166-acb36f7f6042",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/f06ddb64-5fa3-4b77-b166-acb36f7f6042",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "'Audit' allows a non-compliant resource to be created or updated, but flags it as non-compliant. 'Deny' blocks the non-compliant resource creation or update. 'Disabled' turns off the policy.",
                "displayName": "Effect",
                "portalReview": true
              },
              "schema": null,
              "type": "String"
            },
            "excludedNamespaces": {
              "allowedValues": null,
              "defaultValue": [
                "kube-system",
                "gatekeeper-system",
                "azure-arc",
                "azure-extensions-usage-system"
              ],
              "metadata": {
                "description": "List of Kubernetes namespaces to exclude from policy evaluation. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design. \"azure-extensions-usage-system\" is optional to remove.",
                "displayName": "Namespace exclusions"
              },
              "schema": null,
              "type": "Array"
            },
            "labelSelector": {
              "allowedValues": null,
              "defaultValue": {},
              "metadata": {
                "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources.",
                "displayName": "Kubernetes label selector"
              },
              "schema": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "matchExpressions": {
                    "description": "matchExpressions is a list of values, a key, and an operator.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string",
                          "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                          ]
                        },
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ]
                    },
                    "minItems": 1
                  },
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "minProperties": 1
                  }
                }
              },
              "type": "Object"
            },
            "excludedImages": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identifier is the image of container. Prefix-matching can be signified with `*`. For example: `myregistry.azurecr.io/istio:*`. It is recommended that users use the fully-qualified Docker image name (e.g. start with a domain name) in order to avoid unexpectedly exempting images from an untrusted repository.",
                "displayName": "Image exclusions",
                "portalReview": true
              },
              "schema": null,
              "type": "Array"
            },
            "namespaces": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces.",
                "displayName": "Namespace inclusions"
              },
              "schema": null,
              "type": "Array"
            },
            "excludedContainers": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identify is the name of container. Use an empty list to apply this policy to all containers in all namespaces.",
                "displayName": "Containers exclusions"
              },
              "schema": null,
              "type": "Array"
            },
            "supplementalGroupsRanges": {
              "allowedValues": null,
              "defaultValue": {
                "ranges": []
              },
              "metadata": {
                "description": "The supplemental group ID ranges that are allowed for containers to use. Set 'max' as '-1' to skip max limit evaluation. Empty array blocks every defined value for 'MustRunAs' and 'MayRunAs'.",
                "displayName": "Allowed supplemental group ID ranges",
                "portalReview": true
              },
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "ranges": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "max": {
                          "type": "integer"
                        },
                        "min": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "min",
                        "max"
                      ]
                    }
                  }
                },
                "required": [
                  "ranges"
                ]
              },
              "type": "Object"
            },
            "supplementalGroupsRule": {
              "allowedValues": [
                "MustRunAs",
                "MayRunAs",
                "RunAsAny"
              ],
              "defaultValue": "RunAsAny",
              "metadata": {
                "description": "The 'SupplementalGroups' rule that containers are allowed to run with. MustRunAs requires at least one range to be specified. MayRunAs does not require that 'SupplementalGroups' be specified. RunAsAny allows any",
                "displayName": "Supplemental group rule",
                "portalReview": true
              },
              "schema": null,
              "type": "String"
            },
            "runAsGroupRanges": {
              "allowedValues": null,
              "defaultValue": {
                "ranges": []
              },
              "metadata": {
                "description": "The group ID ranges that are allowed for containers to use. Set 'max' as '-1' to skip max limit evaluation. Empty array blocks every defined value for 'MustRunAs' and 'MayRunAs'.",
                "displayName": "Allowed group ID ranges",
                "portalReview": true
              },
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "ranges": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "max": {
                          "type": "integer"
                        },
                        "min": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "min",
                        "max"
                      ]
                    }
                  }
                },
                "required": [
                  "ranges"
                ]
              },
              "type": "Object"
            },
            "runAsUserRanges": {
              "allowedValues": null,
              "defaultValue": {
                "ranges": []
              },
              "metadata": {
                "description": "The user ID ranges that are allowed for containers to use. Set 'max' as '-1' to skip max limit evaluation. Empty array blocks every defined value for 'MustRunAs'.",
                "displayName": "Allowed user ID ranges",
                "portalReview": true
              },
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "ranges": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "max": {
                          "type": "integer"
                        },
                        "min": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "min",
                        "max"
                      ]
                    }
                  }
                },
                "required": [
                  "ranges"
                ]
              },
              "type": "Object"
            },
            "runAsGroupRule": {
              "allowedValues": [
                "MustRunAs",
                "MayRunAs",
                "RunAsAny"
              ],
              "defaultValue": "RunAsAny",
              "metadata": {
                "description": "The 'RunAsGroup' rule that containers are allowed to run with. MustRunAs requires at least one range to be specified. MayRunAs does not require that 'RunAsGroup' be specified. RunAsAny allows any",
                "displayName": "Run as group rule",
                "portalReview": true
              },
              "schema": null,
              "type": "String"
            },
            "fsGroupRanges": {
              "allowedValues": null,
              "defaultValue": {
                "ranges": []
              },
              "metadata": {
                "description": "The file system group ranges that are allowed for pods to use. Set 'max' as '-1' to skip max limit evaluation. Empty array blocks every defined value for 'MustRunAs' and 'MayRunAs'.",
                "displayName": "Allowed file system group ID ranges",
                "portalReview": true
              },
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "ranges": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "max": {
                          "type": "integer"
                        },
                        "min": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "min",
                        "max"
                      ]
                    }
                  }
                },
                "required": [
                  "ranges"
                ]
              },
              "type": "Object"
            },
            "runAsUserRule": {
              "allowedValues": [
                "MustRunAs",
                "MustRunAsNonRoot",
                "RunAsAny"
              ],
              "defaultValue": "MustRunAsNonRoot",
              "metadata": {
                "description": "The 'RunAsUser' rule that containers are allowed to run with. MustRunAs requires at least one range to be specified. MustRunAsNonRoot requires the pod be submitted with non-zero runAsUser or have USER directive defined (using a numeric UID) in the image. RunAsAny allows any runAsUser to be specified",
                "displayName": "Run as user rule",
                "portalReview": true
              },
              "schema": null,
              "type": "String"
            },
            "fsGroupRule": {
              "allowedValues": [
                "MustRunAs",
                "MayRunAs",
                "RunAsAny"
              ],
              "defaultValue": "RunAsAny",
              "metadata": {
                "description": "The 'FSGroup' rule that containers are allowed to run with. MustRunAs requires at least one range to be specified. MayRunAs does not require that 'FSGroup' be specified. RunAsAny allows any",
                "displayName": "File system group rule",
                "portalReview": true
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Control the user, primary group, supplemental group and file system group IDs that pods and containers can use to run in a Kubernetes Cluster. This policy is generally available for Kubernetes Service (AKS), and preview for Azure Arc enabled Kubernetes. For more information, see https://aka.ms/kubepolicydoc.",
          "displayName": "Kubernetes cluster pods and containers should only run with approved user and group IDs",
          "metadata": {
            "category": "Kubernetes",
            "version": "6.1.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6551Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "excludedNamespaces": "[parameters('excludedNamespaces')]",
                "labelSelector": "[parameters('labelSelector')]",
                "namespaces": "[parameters('namespaces')]",
                "templateInfo": {
                  "sourceType": "PublicURL",
                  "url": "https://store.policy.core.windows.net/kubernetes/allowed-users-groups/v3/template.yaml"
                },
                "values": {
                  "excludedImages": "[parameters('excludedImages')]",
                  "excludedContainers": "[parameters('excludedContainers')]",
                  "supplementalGroups": {
                    "ranges": "[parameters('supplementalGroupsRanges').ranges]",
                    "rule": "[parameters('supplementalGroupsRule')]"
                  },
                  "runAsGroup": {
                    "ranges": "[parameters('runAsGroupRanges').ranges]",
                    "rule": "[parameters('runAsGroupRule')]"
                  },
                  "runAsUser": {
                    "ranges": "[parameters('runAsUserRanges').ranges]",
                    "rule": "[parameters('runAsUserRule')]"
                  },
                  "fsGroup": {
                    "ranges": "[parameters('fsGroupRanges').ranges]",
                    "rule": "[parameters('fsGroupRule')]"
                  }
                },
                "apiGroups": [
                  ""
                ],
                "kinds": [
                  "Pod"
                ]
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Kubernetes/connectedClusters",
                "Microsoft.ContainerService/managedClusters"
              ]
            }
          },
          "mode": "Microsoft.Kubernetes.Data"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "f06ddb64-5fa3-4b77-b166-acb36f7f6042"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/8dfab9c4-fe7b-49ad-85e4-1e9be085358f",
        "Name": "8dfab9c4-fe7b-49ad-85e4-1e9be085358f",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/8dfab9c4-fe7b-49ad-85e4-1e9be085358f",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Microsoft Defender for Cloud extension for Azure Arc provides threat protection for your Arc enabled Kubernetes clusters. The extension collects data from all nodes in the cluster and sends it to the Azure Defender for Kubernetes backend in the cloud for further analysis. Learn more in https://docs.microsoft.com/azure/defender-for-cloud/defender-for-containers-enable?pivots=defender-for-container-arc.",
          "displayName": "[Preview]: Azure Arc enabled Kubernetes clusters should have Microsoft Defender for Cloud extension installed",
          "metadata": {
            "category": "Kubernetes",
            "version": "6.0.0-preview",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z",
            "preview": "true"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.KubernetesConfiguration/extensions",
                "existenceCondition": {
                  "allOf": [
                    {
                      "field": "Microsoft.KubernetesConfiguration/extensions/extensionType",
                      "equals": "microsoft.azuredefender.kubernetes"
                    },
                    {
                      "field": "Microsoft.KubernetesConfiguration/extensions/provisioningState",
                      "equals": "Succeeded"
                    }
                  ]
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Kubernetes/connectedClusters"
                },
                {
                  "field": "Microsoft.Kubernetes/connectedClusters/distribution",
                  "notIn": [
                    "aks",
                    "aks_management",
                    "eks",
                    "gke"
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "8dfab9c4-fe7b-49ad-85e4-1e9be085358f"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a1840de2-8088-4ea8-b153-b4c723e9cb01",
        "Name": "a1840de2-8088-4ea8-b153-b4c723e9cb01",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/a1840de2-8088-4ea8-b153-b4c723e9cb01",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Microsoft Defender for Containers provides cloud-native Kubernetes security capabilities including environment hardening, workload protection, and run-time protection. When you enable the SecurityProfile.AzureDefender on your Azure Kubernetes Service cluster, an agent is deployed to your cluster to collect security event data. Learn more about Microsoft Defender for Containers in https://docs.microsoft.com/azure/defender-for-cloud/defender-for-containers-introduction?tabs=defender-for-container-arch-aks",
          "displayName": "Azure Kubernetes Service clusters should have Defender profile enabled",
          "metadata": {
            "category": "Kubernetes",
            "version": "2.0.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.ContainerService/managedClusters"
                },
                {
                  "field": "Microsoft.ContainerService/managedClusters/securityProfile.defender.securityMonitoring.enabled",
                  "notEquals": true
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "a1840de2-8088-4ea8-b153-b4c723e9cb01"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5f0f936f-2f01-4bf5-b6be-d423792fa562",
        "Name": "5f0f936f-2f01-4bf5-b6be-d423792fa562",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/5f0f936f-2f01-4bf5-b6be-d423792fa562",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Container image vulnerability assessment scans your registry for security vulnerabilities and exposes detailed findings for each image. Resolving the vulnerabilities can greatly improve your containers' security posture and protect them from attacks.",
          "displayName": "Container registry images should have vulnerability findings resolved",
          "metadata": {
            "category": "Security Center",
            "version": "2.0.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "dbd0cb49-b563-45e7-9724-889e799fa648",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.ContainerRegistry/registries"
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "5f0f936f-2f01-4bf5-b6be-d423792fa562"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/090c7b07-b4ed-4561-ad20-e9075f3ccaff",
        "Name": "090c7b07-b4ed-4561-ad20-e9075f3ccaff",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/090c7b07-b4ed-4561-ad20-e9075f3ccaff",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Container image vulnerability assessment scans your registry for commonly known vulnerabilities (CVEs) and provides a detailed vulnerability report for each image. Resolving vulnerabilities can greatly improve your security posture, ensuring images are safe to use prior to deployment.",
          "displayName": "Container registry images should have vulnerability findings resolved (powered by Microsoft Defender Vulnerability Management)",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "c0b7cfc6-3172-465a-b378-53c7ff2cc0d5",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.ContainerRegistry/registries"
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "090c7b07-b4ed-4561-ad20-e9075f3ccaff"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0fc39691-5a3f-4e3e-94ee-2e6447309ad9",
        "Name": "0fc39691-5a3f-4e3e-94ee-2e6447309ad9",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0fc39691-5a3f-4e3e-94ee-2e6447309ad9",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Container image vulnerability assessment scans container images running on your Kubernetes clusters for security vulnerabilities and exposes detailed findings for each image. Resolving the vulnerabilities can greatly improve your containers' security posture and protect them from attacks.",
          "displayName": "Running container images should have vulnerability findings resolved",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.2",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "41503391-efa5-47ee-9282-4eff6131462c",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.ContainerService/managedClusters"
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "0fc39691-5a3f-4e3e-94ee-2e6447309ad9"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/17f4b1cc-c55c-4d94-b1f9-2978f6ac2957",
        "Name": "17f4b1cc-c55c-4d94-b1f9-2978f6ac2957",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/17f4b1cc-c55c-4d94-b1f9-2978f6ac2957",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Container image vulnerability assessment scans your registry for commonly known vulnerabilities (CVEs) and provides a detailed vulnerability report for each image. This recommendation provides visibility to vulnerable images currently running in your Kubernetes clusters. Remediating vulnerabilities in container images that are currently running is key to improving your security posture, significantly reducing the attack surface for your containerized workloads.",
          "displayName": "Running container images should have vulnerability findings resolved (powered by Microsoft Defender Vulnerability Management)",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "c609cf0f-71ab-41e9-a3c6-9a1f7fe1b8d5",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.ContainerService/managedClusters"
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "17f4b1cc-c55c-4d94-b1f9-2978f6ac2957"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1c6e92c9-99f0-4e55-9cf2-0c234dc48f99",
        "Name": "1c6e92c9-99f0-4e55-9cf2-0c234dc48f99",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/1c6e92c9-99f0-4e55-9cf2-0c234dc48f99",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "'Audit' allows a non-compliant resource to be created or updated, but flags it as non-compliant. 'Deny' blocks the non-compliant resource creation or update. 'Disabled' turns off the policy.",
                "displayName": "Effect",
                "portalReview": true
              },
              "schema": null,
              "type": "String"
            },
            "excludedNamespaces": {
              "allowedValues": null,
              "defaultValue": [
                "kube-system",
                "gatekeeper-system",
                "azure-arc",
                "azure-extensions-usage-system"
              ],
              "metadata": {
                "description": "List of Kubernetes namespaces to exclude from policy evaluation. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design. \"azure-extensions-usage-system\" is optional to remove.",
                "displayName": "Namespace exclusions"
              },
              "schema": null,
              "type": "Array"
            },
            "labelSelector": {
              "allowedValues": null,
              "defaultValue": {},
              "metadata": {
                "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources.",
                "displayName": "Kubernetes label selector"
              },
              "schema": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "matchExpressions": {
                    "description": "matchExpressions is a list of values, a key, and an operator.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string",
                          "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                          ]
                        },
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ]
                    },
                    "minItems": 1
                  },
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "minProperties": 1
                  }
                }
              },
              "type": "Object"
            },
            "excludedImages": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identifier is the image of container. Prefix-matching can be signified with `*`. For example: `myregistry.azurecr.io/istio:*`. It is recommended that users use the fully-qualified Docker image name (e.g. start with a domain name) in order to avoid unexpectedly exempting images from an untrusted repository.",
                "displayName": "Image exclusions",
                "portalReview": true
              },
              "schema": null,
              "type": "Array"
            },
            "namespaces": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces.",
                "displayName": "Namespace inclusions"
              },
              "schema": null,
              "type": "Array"
            },
            "excludedContainers": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identify is the name of container. Use an empty list to apply this policy to all containers in all namespaces.",
                "displayName": "Containers exclusions"
              },
              "schema": null,
              "type": "Array"
            }
          },
          "description": "Do not allow containers to run with privilege escalation to root in a Kubernetes cluster. This recommendation is part of CIS 5.2.5 which is intended to improve the security of your Kubernetes environments. This policy is generally available for Kubernetes Service (AKS), and preview for Azure Arc enabled Kubernetes. For more information, see https://aka.ms/kubepolicydoc.",
          "displayName": "Kubernetes clusters should not allow container privilege escalation",
          "metadata": {
            "category": "Kubernetes",
            "version": "7.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6551Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "excludedNamespaces": "[parameters('excludedNamespaces')]",
                "labelSelector": "[parameters('labelSelector')]",
                "namespaces": "[parameters('namespaces')]",
                "templateInfo": {
                  "sourceType": "PublicURL",
                  "url": "https://store.policy.core.windows.net/kubernetes/container-no-privilege-escalation/v3/template.yaml"
                },
                "values": {
                  "excludedImages": "[parameters('excludedImages')]",
                  "excludedContainers": "[parameters('excludedContainers')]"
                },
                "apiGroups": [
                  ""
                ],
                "kinds": [
                  "Pod"
                ]
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Kubernetes/connectedClusters",
                "Microsoft.ContainerService/managedClusters"
              ]
            }
          },
          "mode": "Microsoft.Kubernetes.Data"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "1c6e92c9-99f0-4e55-9cf2-0c234dc48f99"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/47a1ee2f-2a2a-4576-bf2a-e0e36709c2b8",
        "Name": "47a1ee2f-2a2a-4576-bf2a-e0e36709c2b8",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/47a1ee2f-2a2a-4576-bf2a-e0e36709c2b8",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "'Audit' allows a non-compliant resource to be created or updated, but flags it as non-compliant. 'Deny' blocks the non-compliant resource creation or update. 'Disabled' turns off the policy.",
                "displayName": "Effect",
                "portalReview": true
              },
              "schema": null,
              "type": "String"
            },
            "excludedNamespaces": {
              "allowedValues": null,
              "defaultValue": [
                "kube-system",
                "gatekeeper-system",
                "azure-arc",
                "azure-extensions-usage-system"
              ],
              "metadata": {
                "description": "List of Kubernetes namespaces to exclude from policy evaluation. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design. \"azure-extensions-usage-system\" is optional to remove.",
                "displayName": "Namespace exclusions"
              },
              "schema": null,
              "type": "Array"
            },
            "labelSelector": {
              "allowedValues": null,
              "defaultValue": {},
              "metadata": {
                "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources.",
                "displayName": "Kubernetes label selector"
              },
              "schema": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "matchExpressions": {
                    "description": "matchExpressions is a list of values, a key, and an operator.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string",
                          "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                          ]
                        },
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ]
                    },
                    "minItems": 1
                  },
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "minProperties": 1
                  }
                }
              },
              "type": "Object"
            },
            "excludedImages": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identifier is the image of container. Prefix-matching can be signified with `*`. For example: `myregistry.azurecr.io/istio:*`. It is recommended that users use the fully-qualified Docker image name (e.g. start with a domain name) in order to avoid unexpectedly exempting images from an untrusted repository.",
                "displayName": "Image exclusions",
                "portalReview": true
              },
              "schema": null,
              "type": "Array"
            },
            "namespaces": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces.",
                "displayName": "Namespace inclusions"
              },
              "schema": null,
              "type": "Array"
            }
          },
          "description": "Block pod containers from sharing the host process ID namespace and host IPC namespace in a Kubernetes cluster. This recommendation is part of CIS 5.2.2 and CIS 5.2.3 which are intended to improve the security of your Kubernetes environments. This policy is generally available for Kubernetes Service (AKS), and preview for Azure Arc enabled Kubernetes. For more information, see https://aka.ms/kubepolicydoc.",
          "displayName": "Kubernetes cluster containers should not share host process ID or host IPC namespace",
          "metadata": {
            "category": "Kubernetes",
            "version": "5.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6551Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "excludedNamespaces": "[parameters('excludedNamespaces')]",
                "labelSelector": "[parameters('labelSelector')]",
                "namespaces": "[parameters('namespaces')]",
                "templateInfo": {
                  "sourceType": "PublicURL",
                  "url": "https://store.policy.core.windows.net/kubernetes/block-host-namespace/v2/template.yaml"
                },
                "values": {
                  "excludedImages": "[parameters('excludedImages')]"
                },
                "apiGroups": [
                  ""
                ],
                "kinds": [
                  "Pod"
                ]
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Kubernetes/connectedClusters",
                "Microsoft.ContainerService/managedClusters"
              ]
            }
          },
          "mode": "Microsoft.Kubernetes.Data"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "47a1ee2f-2a2a-4576-bf2a-e0e36709c2b8"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/df49d893-a74c-421d-bc95-c663042e5b80",
        "Name": "df49d893-a74c-421d-bc95-c663042e5b80",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/df49d893-a74c-421d-bc95-c663042e5b80",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "'Audit' allows a non-compliant resource to be created or updated, but flags it as non-compliant. 'Deny' blocks the non-compliant resource creation or update. 'Disabled' turns off the policy.",
                "displayName": "Effect",
                "portalReview": true
              },
              "schema": null,
              "type": "String"
            },
            "excludedNamespaces": {
              "allowedValues": null,
              "defaultValue": [
                "kube-system",
                "gatekeeper-system",
                "azure-arc",
                "azure-extensions-usage-system"
              ],
              "metadata": {
                "description": "List of Kubernetes namespaces to exclude from policy evaluation. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design. \"azure-extensions-usage-system\" is optional to remove.",
                "displayName": "Namespace exclusions"
              },
              "schema": null,
              "type": "Array"
            },
            "labelSelector": {
              "allowedValues": null,
              "defaultValue": {},
              "metadata": {
                "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources.",
                "displayName": "Kubernetes label selector"
              },
              "schema": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "matchExpressions": {
                    "description": "matchExpressions is a list of values, a key, and an operator.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string",
                          "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                          ]
                        },
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ]
                    },
                    "minItems": 1
                  },
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "minProperties": 1
                  }
                }
              },
              "type": "Object"
            },
            "excludedImages": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identifier is the image of container. Prefix-matching can be signified with `*`. For example: `myregistry.azurecr.io/istio:*`. It is recommended that users use the fully-qualified Docker image name (e.g. start with a domain name) in order to avoid unexpectedly exempting images from an untrusted repository.",
                "displayName": "Image exclusions",
                "portalReview": true
              },
              "schema": null,
              "type": "Array"
            },
            "namespaces": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces.",
                "displayName": "Namespace inclusions"
              },
              "schema": null,
              "type": "Array"
            },
            "excludedContainers": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identify is the name of container. Use an empty list to apply this policy to all containers in all namespaces.",
                "displayName": "Containers exclusions"
              },
              "schema": null,
              "type": "Array"
            }
          },
          "description": "Run containers with a read only root file system to protect from changes at run-time with malicious binaries being added to PATH in a Kubernetes cluster. This policy is generally available for Kubernetes Service (AKS), and preview for Azure Arc enabled Kubernetes. For more information, see https://aka.ms/kubepolicydoc.",
          "displayName": "Kubernetes cluster containers should run with a read only root file system",
          "metadata": {
            "category": "Kubernetes",
            "version": "6.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6551Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "excludedNamespaces": "[parameters('excludedNamespaces')]",
                "labelSelector": "[parameters('labelSelector')]",
                "namespaces": "[parameters('namespaces')]",
                "templateInfo": {
                  "sourceType": "PublicURL",
                  "url": "https://store.policy.core.windows.net/kubernetes/read-only-root-filesystem/v3/template.yaml"
                },
                "values": {
                  "excludedImages": "[parameters('excludedImages')]",
                  "excludedContainers": "[parameters('excludedContainers')]"
                },
                "apiGroups": [
                  ""
                ],
                "kinds": [
                  "Pod"
                ]
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Kubernetes/connectedClusters",
                "Microsoft.ContainerService/managedClusters"
              ]
            }
          },
          "mode": "Microsoft.Kubernetes.Data"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "df49d893-a74c-421d-bc95-c663042e5b80"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c26596ff-4d70-4e6a-9a30-c2506bd2f80c",
        "Name": "c26596ff-4d70-4e6a-9a30-c2506bd2f80c",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/c26596ff-4d70-4e6a-9a30-c2506bd2f80c",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "'Audit' allows a non-compliant resource to be created or updated, but flags it as non-compliant. 'Deny' blocks the non-compliant resource creation or update. 'Disabled' turns off the policy.",
                "displayName": "Effect",
                "portalReview": true
              },
              "schema": null,
              "type": "String"
            },
            "excludedNamespaces": {
              "allowedValues": null,
              "defaultValue": [
                "kube-system",
                "gatekeeper-system",
                "azure-arc",
                "azure-extensions-usage-system"
              ],
              "metadata": {
                "description": "List of Kubernetes namespaces to exclude from policy evaluation. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design. \"azure-extensions-usage-system\" is optional to remove.",
                "displayName": "Namespace exclusions"
              },
              "schema": null,
              "type": "Array"
            },
            "labelSelector": {
              "allowedValues": null,
              "defaultValue": {},
              "metadata": {
                "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources.",
                "displayName": "Kubernetes label selector"
              },
              "schema": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "matchExpressions": {
                    "description": "matchExpressions is a list of values, a key, and an operator.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string",
                          "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                          ]
                        },
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ]
                    },
                    "minItems": 1
                  },
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "minProperties": 1
                  }
                }
              },
              "type": "Object"
            },
            "excludedImages": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identifier is the image of container. Prefix-matching can be signified with `*`. For example: `myregistry.azurecr.io/istio:*`. It is recommended that users use the fully-qualified Docker image name (e.g. start with a domain name) in order to avoid unexpectedly exempting images from an untrusted repository.",
                "displayName": "Image exclusions",
                "portalReview": true
              },
              "schema": null,
              "type": "Array"
            },
            "namespaces": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces.",
                "displayName": "Namespace inclusions"
              },
              "schema": null,
              "type": "Array"
            },
            "excludedContainers": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identify is the name of container. Use an empty list to apply this policy to all containers in all namespaces.",
                "displayName": "Containers exclusions"
              },
              "schema": null,
              "type": "Array"
            },
            "requiredDropCapabilities": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "The list of capabilities that must be dropped by a container.",
                "displayName": "Required drop capabilities",
                "portalReview": true
              },
              "schema": null,
              "type": "Array"
            },
            "allowedCapabilities": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "The list of capabilities that are allowed to be added to a container. Provide empty list as input to block everything.",
                "displayName": "Allowed capabilities",
                "portalReview": true
              },
              "schema": null,
              "type": "Array"
            }
          },
          "description": "Restrict the capabilities to reduce the attack surface of containers in a Kubernetes cluster. This recommendation is part of CIS 5.2.8 and CIS 5.2.9 which are intended to improve the security of your Kubernetes environments. This policy is generally available for Kubernetes Service (AKS), and preview for Azure Arc enabled Kubernetes. For more information, see https://aka.ms/kubepolicydoc.",
          "displayName": "Kubernetes cluster containers should only use allowed capabilities",
          "metadata": {
            "category": "Kubernetes",
            "version": "6.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6551Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "excludedNamespaces": "[parameters('excludedNamespaces')]",
                "labelSelector": "[parameters('labelSelector')]",
                "namespaces": "[parameters('namespaces')]",
                "templateInfo": {
                  "sourceType": "PublicURL",
                  "url": "https://store.policy.core.windows.net/kubernetes/container-allowed-capabilities/v3/template.yaml"
                },
                "values": {
                  "excludedImages": "[parameters('excludedImages')]",
                  "excludedContainers": "[parameters('excludedContainers')]",
                  "requiredDropCapabilities": "[parameters('requiredDropCapabilities')]",
                  "allowedCapabilities": "[parameters('allowedCapabilities')]"
                },
                "apiGroups": [
                  ""
                ],
                "kinds": [
                  "Pod"
                ]
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Kubernetes/connectedClusters",
                "Microsoft.ContainerService/managedClusters"
              ]
            }
          },
          "mode": "Microsoft.Kubernetes.Data"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "c26596ff-4d70-4e6a-9a30-c2506bd2f80c"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/511f5417-5d12-434d-ab2e-816901e72a5e",
        "Name": "511f5417-5d12-434d-ab2e-816901e72a5e",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/511f5417-5d12-434d-ab2e-816901e72a5e",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "'Audit' allows a non-compliant resource to be created or updated, but flags it as non-compliant. 'Deny' blocks the non-compliant resource creation or update. 'Disabled' turns off the policy.",
                "displayName": "Effect",
                "portalReview": true
              },
              "schema": null,
              "type": "String"
            },
            "excludedNamespaces": {
              "allowedValues": null,
              "defaultValue": [
                "kube-system",
                "gatekeeper-system",
                "azure-arc",
                "azure-extensions-usage-system"
              ],
              "metadata": {
                "description": "List of Kubernetes namespaces to exclude from policy evaluation. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design. \"azure-extensions-usage-system\" is optional to remove.",
                "displayName": "Namespace exclusions"
              },
              "schema": null,
              "type": "Array"
            },
            "labelSelector": {
              "allowedValues": null,
              "defaultValue": {},
              "metadata": {
                "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources.",
                "displayName": "Kubernetes label selector"
              },
              "schema": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "matchExpressions": {
                    "description": "matchExpressions is a list of values, a key, and an operator.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string",
                          "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                          ]
                        },
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ]
                    },
                    "minItems": 1
                  },
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "minProperties": 1
                  }
                }
              },
              "type": "Object"
            },
            "excludedImages": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identifier is the image of container. Prefix-matching can be signified with `*`. For example: `myregistry.azurecr.io/istio:*`. It is recommended that users use the fully-qualified Docker image name (e.g. start with a domain name) in order to avoid unexpectedly exempting images from an untrusted repository.",
                "displayName": "Image exclusions",
                "portalReview": true
              },
              "schema": null,
              "type": "Array"
            },
            "namespaces": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces.",
                "displayName": "Namespace inclusions"
              },
              "schema": null,
              "type": "Array"
            },
            "excludedContainers": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identify is the name of container. Use an empty list to apply this policy to all containers in all namespaces.",
                "displayName": "Containers exclusions"
              },
              "schema": null,
              "type": "Array"
            },
            "allowedProfiles": {
              "allowedValues": null,
              "defaultValue": [
                "runtime/default"
              ],
              "metadata": {
                "description": "The list of AppArmor profiles that containers are allowed to use. E.g. [ \"runtime/default\", \"docker/default\" ]. Provide empty list as input to block everything.",
                "displayName": "Allowed AppArmor profiles",
                "portalReview": true
              },
              "schema": null,
              "type": "Array"
            }
          },
          "description": "Containers should only use allowed AppArmor profiles in a Kubernetes cluster. This policy is generally available for Kubernetes Service (AKS), and preview for Azure Arc enabled Kubernetes. For more information, see https://aka.ms/kubepolicydoc.",
          "displayName": "Kubernetes cluster containers should only use allowed AppArmor profiles",
          "metadata": {
            "category": "Kubernetes",
            "version": "6.1.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6551Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "excludedNamespaces": "[parameters('excludedNamespaces')]",
                "labelSelector": "[parameters('labelSelector')]",
                "namespaces": "[parameters('namespaces')]",
                "templateInfo": {
                  "sourceType": "PublicURL",
                  "url": "https://store.policy.core.windows.net/kubernetes/enforce-apparmor-profile/v3/template.yaml"
                },
                "values": {
                  "excludedImages": "[parameters('excludedImages')]",
                  "excludedContainers": "[parameters('excludedContainers')]",
                  "allowedProfiles": "[parameters('allowedProfiles')]"
                },
                "apiGroups": [
                  ""
                ],
                "kinds": [
                  "Pod"
                ]
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Kubernetes/connectedClusters",
                "Microsoft.ContainerService/managedClusters"
              ]
            }
          },
          "mode": "Microsoft.Kubernetes.Data"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "511f5417-5d12-434d-ab2e-816901e72a5e"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/82985f06-dc18-4a48-bc1c-b9f4f0098cfe",
        "Name": "82985f06-dc18-4a48-bc1c-b9f4f0098cfe",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/82985f06-dc18-4a48-bc1c-b9f4f0098cfe",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "'Audit' allows a non-compliant resource to be created or updated, but flags it as non-compliant. 'Deny' blocks the non-compliant resource creation or update. 'Disabled' turns off the policy.",
                "displayName": "Effect",
                "portalReview": true
              },
              "schema": null,
              "type": "String"
            },
            "excludedNamespaces": {
              "allowedValues": null,
              "defaultValue": [
                "kube-system",
                "gatekeeper-system",
                "azure-arc",
                "azure-extensions-usage-system"
              ],
              "metadata": {
                "description": "List of Kubernetes namespaces to exclude from policy evaluation. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design. \"azure-extensions-usage-system\" is optional to remove.",
                "displayName": "Namespace exclusions"
              },
              "schema": null,
              "type": "Array"
            },
            "labelSelector": {
              "allowedValues": null,
              "defaultValue": {},
              "metadata": {
                "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources.",
                "displayName": "Kubernetes label selector"
              },
              "schema": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "matchExpressions": {
                    "description": "matchExpressions is a list of values, a key, and an operator.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string",
                          "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                          ]
                        },
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ]
                    },
                    "minItems": 1
                  },
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "minProperties": 1
                  }
                }
              },
              "type": "Object"
            },
            "excludedImages": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identifier is the image of container. Prefix-matching can be signified with `*`. For example: `myregistry.azurecr.io/istio:*`. It is recommended that users use the fully-qualified Docker image name (e.g. start with a domain name) in order to avoid unexpectedly exempting images from an untrusted repository.",
                "displayName": "Image exclusions",
                "portalReview": true
              },
              "schema": null,
              "type": "Array"
            },
            "namespaces": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces.",
                "displayName": "Namespace inclusions"
              },
              "schema": null,
              "type": "Array"
            },
            "excludedContainers": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identify is the name of container. Use an empty list to apply this policy to all containers in all namespaces.",
                "displayName": "Containers exclusions"
              },
              "schema": null,
              "type": "Array"
            },
            "allowHostNetwork": {
              "allowedValues": null,
              "defaultValue": false,
              "metadata": {
                "description": "Set this value to true if pod is allowed to use host network otherwise false.",
                "displayName": "Allow host network usage",
                "portalReview": true
              },
              "schema": null,
              "type": "Boolean"
            },
            "maxPort": {
              "allowedValues": null,
              "defaultValue": 0,
              "metadata": {
                "description": "The maximum value in the allowable host port range that pods can use in the host network namespace.",
                "displayName": "Max host port",
                "portalReview": true
              },
              "schema": null,
              "type": "Integer"
            },
            "minPort": {
              "allowedValues": null,
              "defaultValue": 0,
              "metadata": {
                "description": "The minimum value in the allowable host port range that pods can use in the host network namespace.",
                "displayName": "Min host port",
                "portalReview": true
              },
              "schema": null,
              "type": "Integer"
            }
          },
          "description": "Restrict pod access to the host network and the allowable host port range in a Kubernetes cluster. This recommendation is part of CIS 5.2.4 which is intended to improve the security of your Kubernetes environments. This policy is generally available for Kubernetes Service (AKS), and preview for Azure Arc enabled Kubernetes. For more information, see https://aka.ms/kubepolicydoc.",
          "displayName": "Kubernetes cluster pods should only use approved host network and port range",
          "metadata": {
            "category": "Kubernetes",
            "version": "6.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6551Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "excludedNamespaces": "[parameters('excludedNamespaces')]",
                "labelSelector": "[parameters('labelSelector')]",
                "namespaces": "[parameters('namespaces')]",
                "templateInfo": {
                  "sourceType": "PublicURL",
                  "url": "https://store.policy.core.windows.net/kubernetes/host-network-ports/v3/template.yaml"
                },
                "values": {
                  "excludedImages": "[parameters('excludedImages')]",
                  "excludedContainers": "[parameters('excludedContainers')]",
                  "allowHostNetwork": "[parameters('allowHostNetwork')]",
                  "maxPort": "[parameters('maxPort')]",
                  "minPort": "[parameters('minPort')]"
                },
                "apiGroups": [
                  ""
                ],
                "kinds": [
                  "Pod"
                ]
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Kubernetes/connectedClusters",
                "Microsoft.ContainerService/managedClusters"
              ]
            }
          },
          "mode": "Microsoft.Kubernetes.Data"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "82985f06-dc18-4a48-bc1c-b9f4f0098cfe"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/098fc59e-46c7-4d99-9b16-64990e543d75",
        "Name": "098fc59e-46c7-4d99-9b16-64990e543d75",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/098fc59e-46c7-4d99-9b16-64990e543d75",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "'Audit' allows a non-compliant resource to be created or updated, but flags it as non-compliant. 'Deny' blocks the non-compliant resource creation or update. 'Disabled' turns off the policy.",
                "displayName": "Effect",
                "portalReview": true
              },
              "schema": null,
              "type": "String"
            },
            "excludedNamespaces": {
              "allowedValues": null,
              "defaultValue": [
                "kube-system",
                "gatekeeper-system",
                "azure-arc",
                "azure-extensions-usage-system"
              ],
              "metadata": {
                "description": "List of Kubernetes namespaces to exclude from policy evaluation. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design. \"azure-extensions-usage-system\" is optional to remove.",
                "displayName": "Namespace exclusions"
              },
              "schema": null,
              "type": "Array"
            },
            "labelSelector": {
              "allowedValues": null,
              "defaultValue": {},
              "metadata": {
                "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources.",
                "displayName": "Kubernetes label selector"
              },
              "schema": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "matchExpressions": {
                    "description": "matchExpressions is a list of values, a key, and an operator.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string",
                          "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                          ]
                        },
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ]
                    },
                    "minItems": 1
                  },
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "minProperties": 1
                  }
                }
              },
              "type": "Object"
            },
            "excludedImages": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identifier is the image of container. Prefix-matching can be signified with `*`. For example: `myregistry.azurecr.io/istio:*`. It is recommended that users use the fully-qualified Docker image name (e.g. start with a domain name) in order to avoid unexpectedly exempting images from an untrusted repository.",
                "displayName": "Image exclusions",
                "portalReview": true
              },
              "schema": null,
              "type": "Array"
            },
            "namespaces": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces.",
                "displayName": "Namespace inclusions"
              },
              "schema": null,
              "type": "Array"
            },
            "excludedContainers": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "The list of InitContainers and Containers to exclude from readonly evaluation. It will not exclude the disallowed host path. The identify is the name of container. Use an empty list to apply this policy to all containers in all namespaces.",
                "displayName": "Containers exclusions"
              },
              "schema": null,
              "type": "Array"
            },
            "allowedHostPaths": {
              "allowedValues": null,
              "defaultValue": {
                "paths": []
              },
              "metadata": {
                "description": "The host paths allowed for pod hostPath volumes to use. Provide an empty paths list to block all host paths.",
                "displayName": "Allowed host paths",
                "portalReview": true
              },
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "paths": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "pathPrefix": {
                          "type": "string"
                        },
                        "readOnly": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "pathPrefix",
                        "readOnly"
                      ]
                    }
                  }
                },
                "required": [
                  "paths"
                ]
              },
              "type": "Object"
            }
          },
          "description": "Limit pod HostPath volume mounts to the allowed host paths in a Kubernetes Cluster. This policy is generally available for Kubernetes Service (AKS), and Azure Arc enabled Kubernetes. For more information, see https://aka.ms/kubepolicydoc.",
          "displayName": "Kubernetes cluster pod hostPath volumes should only use allowed host paths",
          "metadata": {
            "category": "Kubernetes",
            "version": "6.1.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6551Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "excludedNamespaces": "[parameters('excludedNamespaces')]",
                "labelSelector": "[parameters('labelSelector')]",
                "namespaces": "[parameters('namespaces')]",
                "templateInfo": {
                  "sourceType": "PublicURL",
                  "url": "https://store.policy.core.windows.net/kubernetes/allowed-host-paths/v3/template.yaml"
                },
                "values": {
                  "excludedImages": "[parameters('excludedImages')]",
                  "excludedContainers": "[parameters('excludedContainers')]",
                  "allowedHostPaths": "[parameters('allowedHostPaths').paths]"
                },
                "apiGroups": [
                  ""
                ],
                "kinds": [
                  "Pod"
                ]
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Kubernetes/connectedClusters",
                "Microsoft.ContainerService/managedClusters"
              ]
            }
          },
          "mode": "Microsoft.Kubernetes.Data"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "098fc59e-46c7-4d99-9b16-64990e543d75"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/4fa4b6c0-31ca-4c0d-b10d-24b96f62a751",
        "Name": "4fa4b6c0-31ca-4c0d-b10d-24b96f62a751",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/4fa4b6c0-31ca-4c0d-b10d-24b96f62a751",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "The effect determines what happens when the policy rule is evaluated to match",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Anonymous public read access to containers and blobs in Azure Storage is a convenient way to share data but might present security risks. To prevent data breaches caused by undesired anonymous access, Microsoft recommends preventing public access to a storage account unless your scenario requires it.",
          "displayName": "[Preview]: Storage account public access should be disallowed",
          "metadata": {
            "category": "Storage",
            "version": "3.1.0-preview",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z",
            "preview": true
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Storage/storageAccounts"
                },
                {
                  "not": {
                    "allOf": [
                      {
                        "field": "id",
                        "contains": "/resourceGroups/aro-"
                      },
                      {
                        "anyOf": [
                          {
                            "field": "name",
                            "like": "cluster*"
                          },
                          {
                            "field": "name",
                            "like": "imageregistry*"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "not": {
                    "field": "Microsoft.Storage/storageAccounts/allowBlobPublicAccess",
                    "equals": "false"
                  }
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "4fa4b6c0-31ca-4c0d-b10d-24b96f62a751"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/013e242c-8828-4970-87b3-ab247555486d",
        "Name": "013e242c-8828-4970-87b3-ab247555486d",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/013e242c-8828-4970-87b3-ab247555486d",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Ensure protection of your Azure Virtual Machines by enabling Azure Backup. Azure Backup is a secure and cost effective data protection solution for Azure.",
          "displayName": "Azure Backup should be enabled for Virtual Machines",
          "metadata": {
            "category": "Backup",
            "version": "3.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.RecoveryServices/backupprotecteditems"
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachines"
                },
                {
                  "field": "id",
                  "notContains": "/resourceGroups/databricks-rg-"
                },
                {
                  "field": "Microsoft.Compute/imagePublisher",
                  "notEquals": "azureopenshift"
                },
                {
                  "field": "Microsoft.Compute/imagePublisher",
                  "notEquals": "AzureDatabricks"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "013e242c-8828-4970-87b3-ab247555486d"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0da106f2-4ca3-48e8-bc85-c638fe6aea8f",
        "Name": "0da106f2-4ca3-48e8-bc85-c638fe6aea8f",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0da106f2-4ca3-48e8-bc85-c638fe6aea8f",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Use a managed identity for enhanced authentication security",
          "displayName": "Function apps should use managed identity",
          "metadata": {
            "category": "App Service",
            "version": "3.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Web/sites/config",
                "name": "web",
                "existenceCondition": {
                  "anyOf": [
                    {
                      "field": "Microsoft.Web/sites/config/managedServiceIdentityId",
                      "exists": "true"
                    },
                    {
                      "field": "Microsoft.Web/sites/config/xmanagedServiceIdentityId",
                      "exists": "true"
                    }
                  ]
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Web/sites"
                },
                {
                  "field": "kind",
                  "contains": "functionapp"
                },
                {
                  "field": "kind",
                  "notContains": "workflowapp"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "0da106f2-4ca3-48e8-bc85-c638fe6aea8f"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0ec47710-77ff-4a3d-9181-6aa50af424d0",
        "Name": "0ec47710-77ff-4a3d-9181-6aa50af424d0",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0ec47710-77ff-4a3d-9181-6aa50af424d0",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Azure Database for MariaDB allows you to choose the redundancy option for your database server. It can be set to a geo-redundant backup storage in which the data is not only stored within the region in which your server is hosted, but is also replicated to a paired region to provide recovery option in case of a region failure. Configuring geo-redundant storage for backup is only allowed during server create.",
          "displayName": "Geo-redundant backup should be enabled for Azure Database for MariaDB",
          "metadata": {
            "category": "SQL",
            "version": "1.0.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.DBforMariaDB/servers"
                },
                {
                  "field": "Microsoft.DBforMariaDB/servers/storageProfile.geoRedundantBackup",
                  "notEquals": "Enabled"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "0ec47710-77ff-4a3d-9181-6aa50af424d0"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2b9ad585-36bc-4615-b300-fd4435808332",
        "Name": "2b9ad585-36bc-4615-b300-fd4435808332",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/2b9ad585-36bc-4615-b300-fd4435808332",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Use a managed identity for enhanced authentication security",
          "displayName": "App Service apps should use managed identity",
          "metadata": {
            "category": "App Service",
            "version": "3.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Web/sites/config",
                "name": "web",
                "existenceCondition": {
                  "anyOf": [
                    {
                      "field": "Microsoft.Web/sites/config/managedServiceIdentityId",
                      "exists": "true"
                    },
                    {
                      "field": "Microsoft.Web/sites/config/xmanagedServiceIdentityId",
                      "exists": "true"
                    }
                  ]
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Web/sites"
                },
                {
                  "field": "kind",
                  "notContains": "functionapp"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "2b9ad585-36bc-4615-b300-fd4435808332"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/48af4db5-9b8b-401c-8e74-076be876a430",
        "Name": "48af4db5-9b8b-401c-8e74-076be876a430",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/48af4db5-9b8b-401c-8e74-076be876a430",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Azure Database for PostgreSQL allows you to choose the redundancy option for your database server. It can be set to a geo-redundant backup storage in which the data is not only stored within the region in which your server is hosted, but is also replicated to a paired region to provide recovery option in case of a region failure. Configuring geo-redundant storage for backup is only allowed during server create.",
          "displayName": "Geo-redundant backup should be enabled for Azure Database for PostgreSQL",
          "metadata": {
            "category": "SQL",
            "version": "1.0.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.DBforPostgreSQL/servers"
                },
                {
                  "field": "Microsoft.DBforPostgreSQL/servers/storageProfile.geoRedundantBackup",
                  "notEquals": "Enabled"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "48af4db5-9b8b-401c-8e74-076be876a430"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5bb220d9-2698-4ee4-8404-b9c30c9df609",
        "Name": "5bb220d9-2698-4ee4-8404-b9c30c9df609",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/5bb220d9-2698-4ee4-8404-b9c30c9df609",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Client certificates allow for the app to request a certificate for incoming requests. Only clients that have a valid certificate will be able to reach the app.",
          "displayName": "App Service apps should have 'Client Certificates (Incoming client certificates)' enabled",
          "metadata": {
            "category": "App Service",
            "version": "3.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Web/sites"
                },
                {
                  "field": "kind",
                  "notContains": "functionapp"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.Web/sites/clientCertEnabled",
                      "exists": "false"
                    },
                    {
                      "field": "Microsoft.Web/sites/clientCertEnabled",
                      "equals": "false"
                    }
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "5bb220d9-2698-4ee4-8404-b9c30c9df609"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/82339799-d096-41ae-8538-b108becf0970",
        "Name": "82339799-d096-41ae-8538-b108becf0970",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/82339799-d096-41ae-8538-b108becf0970",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Azure Database for MySQL allows you to choose the redundancy option for your database server. It can be set to a geo-redundant backup storage in which the data is not only stored within the region in which your server is hosted, but is also replicated to a paired region to provide recovery option in case of a region failure. Configuring geo-redundant storage for backup is only allowed during server create.",
          "displayName": "Geo-redundant backup should be enabled for Azure Database for MySQL",
          "metadata": {
            "category": "SQL",
            "version": "1.0.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.DBforMySQL/servers"
                },
                {
                  "field": "Microsoft.DBforMySQL/servers/storageProfile.geoRedundantBackup",
                  "notEquals": "Enabled"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "82339799-d096-41ae-8538-b108becf0970"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/91a78b24-f231-4a8a-8da9-02c35b2b6510",
        "Name": "91a78b24-f231-4a8a-8da9-02c35b2b6510",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/91a78b24-f231-4a8a-8da9-02c35b2b6510",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            },
            "requiredRetentionDays": {
              "allowedValues": null,
              "defaultValue": "365",
              "metadata": {
                "description": "The required resource logs retention in days",
                "displayName": "Required retention (days)"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Audit enabling of resource logs on the app. This enables you to recreate activity trails for investigation purposes if a security incident occurs or your network is compromised.",
          "displayName": "App Service apps should have resource logs enabled",
          "metadata": {
            "category": "App Service",
            "version": "2.0.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Insights/diagnosticSettings",
                "existenceCondition": {
                  "count": {
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                    "where": {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                                  "equals": "0"
                                },
                                {
                                  "value": "[padLeft(current('Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days'), 3, '0')]",
                                  "greaterOrEquals": "[padLeft(parameters('requiredRetentionDays'), 3, '0')]"
                                }
                              ]
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                  "notEquals": "true"
                                },
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/storageAccountId",
                                  "exists": false
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "greaterOrEquals": 1
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Web/sites"
                },
                {
                  "field": "kind",
                  "notContains": "functionapp"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "91a78b24-f231-4a8a-8da9-02c35b2b6510"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/d158790f-bfb0-486c-8631-2dc6b4e8e6af",
        "Name": "d158790f-bfb0-486c-8631-2dc6b4e8e6af",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/d158790f-bfb0-486c-8631-2dc6b4e8e6af",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Azure Database for PostgreSQL supports connecting your Azure Database for PostgreSQL server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.",
          "displayName": "Enforce SSL connection should be enabled for PostgreSQL database servers",
          "metadata": {
            "category": "SQL",
            "version": "1.0.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.DBforPostgreSQL/servers"
                },
                {
                  "field": "Microsoft.DBforPostgreSQL/servers/sslEnforcement",
                  "exists": "true"
                },
                {
                  "field": "Microsoft.DBforPostgreSQL/servers/sslEnforcement",
                  "notEquals": "Enabled"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "d158790f-bfb0-486c-8631-2dc6b4e8e6af"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e802a67a-daf5-4436-9ea6-f6d821dd0c5d",
        "Name": "e802a67a-daf5-4436-9ea6-f6d821dd0c5d",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/e802a67a-daf5-4436-9ea6-f6d821dd0c5d",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Azure Database for MySQL supports connecting your Azure Database for MySQL server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.",
          "displayName": "Enforce SSL connection should be enabled for MySQL database servers",
          "metadata": {
            "category": "SQL",
            "version": "1.0.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.DBforMySQL/servers"
                },
                {
                  "field": "Microsoft.DBforMySQL/servers/sslEnforcement",
                  "exists": "true"
                },
                {
                  "field": "Microsoft.DBforMySQL/servers/sslEnforcement",
                  "notEquals": "Enabled"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "e802a67a-daf5-4436-9ea6-f6d821dd0c5d"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f0e6e85b-9b9f-4a4b-b67b-f730d42f1b0b",
        "Name": "f0e6e85b-9b9f-4a4b-b67b-f730d42f1b0b",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/f0e6e85b-9b9f-4a4b-b67b-f730d42f1b0b",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Periodically, newer versions are released for TLS either due to security flaws, include additional functionality, and enhance speed. Upgrade to the latest TLS version for App Service apps to take advantage of security fixes, if any, and/or new functionalities of the latest version.",
          "displayName": "App Service apps should use the latest TLS version",
          "metadata": {
            "category": "App Service",
            "version": "2.0.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Web/sites/config",
                "name": "web",
                "existenceCondition": {
                  "field": "Microsoft.Web/sites/config/minTlsVersion",
                  "equals": "1.2"
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Web/sites"
                },
                {
                  "field": "kind",
                  "notContains": "functionapp"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "f0e6e85b-9b9f-4a4b-b67b-f730d42f1b0b"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f9d614c5-c173-4d56-95a7-b4437057d193",
        "Name": "f9d614c5-c173-4d56-95a7-b4437057d193",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/f9d614c5-c173-4d56-95a7-b4437057d193",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Periodically, newer versions are released for TLS either due to security flaws, include additional functionality, and enhance speed. Upgrade to the latest TLS version for Function apps to take advantage of security fixes, if any, and/or new functionalities of the latest version.",
          "displayName": "Function apps should use the latest TLS version",
          "metadata": {
            "category": "App Service",
            "version": "2.0.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Web/sites/config",
                "name": "web",
                "existenceCondition": {
                  "field": "Microsoft.Web/sites/config/minTlsVersion",
                  "equals": "1.2"
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Web/sites"
                },
                {
                  "field": "kind",
                  "contains": "functionapp"
                },
                {
                  "field": "kind",
                  "notContains": "workflowapp"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "f9d614c5-c173-4d56-95a7-b4437057d193"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0564d078-92f5-4f97-8398-b9f58a51f70b",
        "Name": "0564d078-92f5-4f97-8398-b9f58a51f70b",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0564d078-92f5-4f97-8398-b9f58a51f70b",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Private endpoint connections enforce secure communication by enabling private connectivity to Azure Database for PostgreSQL. Configure a private endpoint connection to enable access to traffic coming only from known networks and prevent access from all other IP addresses, including within Azure.",
          "displayName": "Private endpoint should be enabled for PostgreSQL servers",
          "metadata": {
            "category": "SQL",
            "version": "1.0.2",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.DBforPostgreSQL/servers/privateEndpointConnections",
                "existenceCondition": {
                  "field": "Microsoft.DBforPostgreSQL/servers/privateEndpointConnections/privateLinkServiceConnectionState.status",
                  "equals": "Approved"
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.DBforPostgreSQL/servers"
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "0564d078-92f5-4f97-8398-b9f58a51f70b"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0a1302fb-a631-4106-9753-f3d494733990",
        "Name": "0a1302fb-a631-4106-9753-f3d494733990",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0a1302fb-a631-4106-9753-f3d494733990",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Private endpoint connections enforce secure communication by enabling private connectivity to Azure Database for MariaDB. Configure a private endpoint connection to enable access to traffic coming only from known networks and prevent access from all other IP addresses, including within Azure.",
          "displayName": "Private endpoint should be enabled for MariaDB servers",
          "metadata": {
            "category": "SQL",
            "version": "1.0.2",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.DBforMariaDB/servers/privateEndpointConnections",
                "existenceCondition": {
                  "field": "Microsoft.DBforMariaDB/servers/privateEndpointConnections/privateLinkServiceConnectionState.status",
                  "equals": "Approved"
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.DBforMariaDB/servers"
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "0a1302fb-a631-4106-9753-f3d494733990"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7595c971-233d-4bcf-bd18-596129188c49",
        "Name": "7595c971-233d-4bcf-bd18-596129188c49",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/7595c971-233d-4bcf-bd18-596129188c49",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Private endpoint connections enforce secure communication by enabling private connectivity to Azure Database for MySQL. Configure a private endpoint connection to enable access to traffic coming only from known networks and prevent access from all other IP addresses, including within Azure.",
          "displayName": "Private endpoint should be enabled for MySQL servers",
          "metadata": {
            "category": "SQL",
            "version": "1.0.2",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.DBforMySQL/servers/privateEndpointConnections",
                "existenceCondition": {
                  "field": "Microsoft.DBforMySQL/servers/privateEndpointConnections/privateLinkServiceConnectionState.status",
                  "equals": "Approved"
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.DBforMySQL/servers"
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "7595c971-233d-4bcf-bd18-596129188c49"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/89099bee-89e0-4b26-a5f4-165451757743",
        "Name": "89099bee-89e0-4b26-a5f4-165451757743",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/89099bee-89e0-4b26-a5f4-165451757743",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "For incident investigation purposes, we recommend setting the data retention for your SQL Server' auditing to storage account destination to at least 90 days. Confirm that you are meeting the necessary retention rules for the regions in which you are operating. This is sometimes required for compliance with regulatory standards.",
          "displayName": "SQL servers with auditing to storage account destination should be configured with 90 days retention or higher",
          "metadata": {
            "category": "SQL",
            "version": "3.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Sql/servers/auditingSettings",
                "name": "default",
                "existenceCondition": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Sql/servers/auditingSettings/isAzureMonitorTargetEnabled",
                          "equals": true
                        },
                        {
                          "field": "Microsoft.Sql/servers/auditingSettings/storageEndpoint",
                          "equals": ""
                        }
                      ]
                    },
                    {
                      "field": "Microsoft.Sql/servers/auditingSettings/retentionDays",
                      "equals": 0
                    },
                    {
                      "field": "Microsoft.Sql/servers/auditingSettings/retentionDays",
                      "greaterOrEquals": 90
                    }
                  ]
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Sql/servers"
                },
                {
                  "field": "kind",
                  "notContains": "analytics"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "89099bee-89e0-4b26-a5f4-165451757743"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/399b2637-a50f-4f95-96f8-3a145476eb15",
        "Name": "399b2637-a50f-4f95-96f8-3a145476eb15",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/399b2637-a50f-4f95-96f8-3a145476eb15",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Enable FTPS enforcement for enhanced security.",
          "displayName": "Function apps should require FTPS only",
          "metadata": {
            "category": "App Service",
            "version": "3.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Web/sites/config",
                "name": "web",
                "existenceCondition": {
                  "field": "Microsoft.Web/sites/config/ftpsState",
                  "in": [
                    "FtpsOnly",
                    "Disabled"
                  ]
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Web/sites"
                },
                {
                  "field": "kind",
                  "contains": "functionapp"
                },
                {
                  "field": "kind",
                  "notContains": "workflowapp"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "399b2637-a50f-4f95-96f8-3a145476eb15"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/4d24b6d4-5e53-4a4f-a7f4-618fa573ee4b",
        "Name": "4d24b6d4-5e53-4a4f-a7f4-618fa573ee4b",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/4d24b6d4-5e53-4a4f-a7f4-618fa573ee4b",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Enable FTPS enforcement for enhanced security.",
          "displayName": "App Service apps should require FTPS only",
          "metadata": {
            "category": "App Service",
            "version": "3.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Web/sites/config",
                "name": "web",
                "existenceCondition": {
                  "field": "Microsoft.Web/sites/config/ftpsState",
                  "in": [
                    "FtpsOnly",
                    "Disabled"
                  ]
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Web/sites"
                },
                {
                  "field": "kind",
                  "notContains": "functionapp"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "4d24b6d4-5e53-4a4f-a7f4-618fa573ee4b"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/eaebaea7-8013-4ceb-9d14-7eb32271373c",
        "Name": "eaebaea7-8013-4ceb-9d14-7eb32271373c",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/eaebaea7-8013-4ceb-9d14-7eb32271373c",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Client certificates allow for the app to request a certificate for incoming requests. Only clients with valid certificates will be able to reach the app.",
          "displayName": "Function apps should have 'Client Certificates (Incoming client certificates)' enabled",
          "metadata": {
            "category": "App Service",
            "version": "3.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Web/sites"
                },
                {
                  "field": "kind",
                  "contains": "functionapp"
                },
                {
                  "field": "kind",
                  "notContains": "workflowapp"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.Web/sites/clientCertEnabled",
                      "exists": "false"
                    },
                    {
                      "field": "Microsoft.Web/sites/clientCertEnabled",
                      "equals": "false"
                    }
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "eaebaea7-8013-4ceb-9d14-7eb32271373c"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/67121cc7-ff39-4ab8-b7e3-95b84dab487d",
        "Name": "67121cc7-ff39-4ab8-b7e3-95b84dab487d",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/67121cc7-ff39-4ab8-b7e3-95b84dab487d",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "The effect determines what happens when the policy rule is evaluated to match",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            },
            "excludedKinds": {
              "allowedValues": null,
              "defaultValue": [
                "CognitiveServices",
                "Knowledge",
                "LUIS",
                "QnAMaker",
                "TextAnalytics",
                "ComputerVision",
                "HealthDecisionSupport",
                "ImmersiveReader"
              ],
              "metadata": {
                "description": "The list of excluded API kinds for customer-managed key, default is the list of API kinds that don't have data stored in Cognitive Services",
                "displayName": "Excluded Kinds"
              },
              "schema": null,
              "type": "Array"
            }
          },
          "description": "Customer-managed keys are commonly required to meet regulatory compliance standards. Customer-managed keys enable the data stored in Cognitive Services to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more about customer-managed keys at https://go.microsoft.com/fwlink/?linkid=2121321.",
          "displayName": "Cognitive Services accounts should enable data encryption with a customer-managed key",
          "metadata": {
            "category": "Cognitive Services",
            "version": "2.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.CognitiveServices/accounts"
                },
                {
                  "field": "Microsoft.CognitiveServices/accounts/encryption.keySource",
                  "notEquals": "Microsoft.KeyVault"
                },
                {
                  "field": "kind",
                  "notIn": "[parameters('excludedKinds')]"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "67121cc7-ff39-4ab8-b7e3-95b84dab487d"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1f905d99-2ab7-462c-a6b0-f709acca6c8f",
        "Name": "1f905d99-2ab7-462c-a6b0-f709acca6c8f",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/1f905d99-2ab7-462c-a6b0-f709acca6c8f",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "The desired effect of the policy.",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Use customer-managed keys to manage the encryption at rest of your Azure Cosmos DB. By default, the data is encrypted at rest with service-managed keys, but customer-managed keys are commonly required to meet regulatory compliance standards. Customer-managed keys enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more at https://aka.ms/cosmosdb-cmk.",
          "displayName": "Azure Cosmos DB accounts should use customer-managed keys to encrypt data at rest",
          "metadata": {
            "category": "Cosmos DB",
            "version": "1.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "Microsoft.DocumentDB/databaseAccounts/keyVaultKeyUri",
                  "exists": false
                },
                {
                  "field": "type",
                  "equals": "Microsoft.DocumentDB/databaseAccounts"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "1f905d99-2ab7-462c-a6b0-f709acca6c8f"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5450f5bd-9c72-4390-a9c4-a7aba4edfdd2",
        "Name": "5450f5bd-9c72-4390-a9c4-a7aba4edfdd2",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/5450f5bd-9c72-4390-a9c4-a7aba4edfdd2",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Disabling local authentication methods improves security by ensuring that Cosmos DB database accounts exclusively require Azure Active Directory identities for authentication. Learn more at: https://docs.microsoft.com/azure/cosmos-db/how-to-setup-rbac#disable-local-auth.",
          "displayName": "Cosmos DB database accounts should have local authentication methods disabled",
          "metadata": {
            "category": "Cosmos DB",
            "version": "1.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.DocumentDB/databaseAccounts"
                },
                {
                  "field": "Microsoft.DocumentDB/databaseAccounts/disableLocalAuth",
                  "notEquals": true
                },
                {
                  "field": "Microsoft.DocumentDB/databaseAccounts/capabilities[*].name",
                  "notin": [
                    "EnableMongo",
                    "EnableCassandra",
                    "EnableTable",
                    "EnableGremlin"
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "5450f5bd-9c72-4390-a9c4-a7aba4edfdd2"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0b60c0b2-2dc2-4e1c-b5c9-abbed971de53",
        "Name": "0b60c0b2-2dc2-4e1c-b5c9-abbed971de53",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0b60c0b2-2dc2-4e1c-b5c9-abbed971de53",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Malicious deletion of a key vault can lead to permanent data loss. You can prevent permanent data loss by enabling purge protection and soft delete. Purge protection protects you from insider attacks by enforcing a mandatory retention period for soft deleted key vaults. No one inside your organization or Microsoft will be able to purge your key vaults during the soft delete retention period. Keep in mind that key vaults created after September 1st 2019 have soft-delete enabled by default.",
          "displayName": "Key vaults should have deletion protection enabled",
          "metadata": {
            "category": "Key Vault",
            "version": "2.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.KeyVault/vaults"
                },
                {
                  "field": "Microsoft.KeyVault/vaults/createMode",
                  "notEquals": "recover"
                },
                {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "value": "[requestContext().apiVersion]",
                          "less": "2019-09-01"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.KeyVault/vaults/enableSoftDelete",
                              "equals": "false"
                            },
                            {
                              "field": "Microsoft.KeyVault/vaults/enableSoftDelete",
                              "exists": "false"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "value": "[requestContext().apiVersion]",
                          "greaterOrEquals": "2019-09-01"
                        },
                        {
                          "field": "Microsoft.KeyVault/vaults/enableSoftDelete",
                          "equals": "false"
                        }
                      ]
                    },
                    {
                      "field": "Microsoft.KeyVault/vaults/enablePurgeProtection",
                      "exists": "false"
                    },
                    {
                      "field": "Microsoft.KeyVault/vaults/enablePurgeProtection",
                      "equals": "false"
                    }
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "0b60c0b2-2dc2-4e1c-b5c9-abbed971de53"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1e66c121-a66a-4b1f-9b83-0fd99bf0fc2d",
        "Name": "1e66c121-a66a-4b1f-9b83-0fd99bf0fc2d",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/1e66c121-a66a-4b1f-9b83-0fd99bf0fc2d",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Deleting a key vault without soft delete enabled permanently deletes all secrets, keys, and certificates stored in the key vault. Accidental deletion of a key vault can lead to permanent data loss. Soft delete allows you to recover an accidentally deleted key vault for a configurable retention period.",
          "displayName": "Key vaults should have soft delete enabled",
          "metadata": {
            "category": "Key Vault",
            "version": "3.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.KeyVault/vaults"
                },
                {
                  "not": {
                    "field": "Microsoft.KeyVault/vaults/createMode",
                    "equals": "recover"
                  }
                },
                {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "value": "[requestContext().apiVersion]",
                          "less": "2019-09-01"
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.KeyVault/vaults/enableSoftDelete",
                              "equals": "false"
                            },
                            {
                              "field": "Microsoft.KeyVault/vaults/enableSoftDelete",
                              "exists": "false"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "value": "[requestContext().apiVersion]",
                          "greaterOrEquals": "2019-09-01"
                        },
                        {
                          "field": "Microsoft.KeyVault/vaults/enableSoftDelete",
                          "equals": "false"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "1e66c121-a66a-4b1f-9b83-0fd99bf0fc2d"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7803067c-7d34-46e3-8c79-0ca68fc4036d",
        "Name": "7803067c-7d34-46e3-8c79-0ca68fc4036d",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/7803067c-7d34-46e3-8c79-0ca68fc4036d",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Private endpoints lets you connect your virtual network to Azure services without a public IP address at the source or destination. By mapping private endpoints to your Azure Cache for Redis instances, data leakage risks are reduced. Learn more at: https://docs.microsoft.com/azure/azure-cache-for-redis/cache-private-link.",
          "displayName": "Azure Cache for Redis should use private link",
          "metadata": {
            "category": "Cache",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Cache/redis/privateEndpointConnections",
                "existenceCondition": {
                  "field": "Microsoft.Cache/redis/privateEndpointConnections/privateLinkServiceConnectionState.status",
                  "equals": "Approved"
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Cache/redis"
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "7803067c-7d34-46e3-8c79-0ca68fc4036d"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6fac406b-40ca-413b-bf8e-0bf964659c25",
        "Name": "6fac406b-40ca-413b-bf8e-0bf964659c25",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/6fac406b-40ca-413b-bf8e-0bf964659c25",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Secure your blob and file storage account with greater flexibility using customer-managed keys. When you specify a customer-managed key, that key is used to protect and control access to the key that encrypts your data. Using customer-managed keys provides additional capabilities to control rotation of the key encryption key or cryptographically erase data.",
          "displayName": "Storage accounts should use customer-managed key for encryption",
          "metadata": {
            "category": "Storage",
            "version": "1.0.3",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Storage/storageAccounts"
                },
                {
                  "not": {
                    "field": "Microsoft.Storage/storageAccounts/encryption.keySource",
                    "equals": "Microsoft.Keyvault"
                  }
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "6fac406b-40ca-413b-bf8e-0bf964659c25"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2a1a9cdf-e04d-429a-8416-3bfb72a1b26f",
        "Name": "2a1a9cdf-e04d-429a-8416-3bfb72a1b26f",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/2a1a9cdf-e04d-429a-8416-3bfb72a1b26f",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the audit policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Protect your storage accounts from potential threats using virtual network rules as a preferred method instead of IP-based filtering. Disabling IP-based filtering prevents public IPs from accessing your storage accounts.",
          "displayName": "Storage accounts should restrict network access using virtual network rules",
          "metadata": {
            "category": "Storage",
            "version": "1.0.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Storage/storageAccounts"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.Storage/storageAccounts/networkAcls.defaultAction",
                      "notEquals": "Deny"
                    },
                    {
                      "count": {
                        "field": "Microsoft.Storage/storageAccounts/networkAcls.ipRules[*]"
                      },
                      "greaterOrEquals": 1
                    }
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "2a1a9cdf-e04d-429a-8416-3bfb72a1b26f"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5b9159ae-1701-4a6f-9a7a-aa9c8ddd0580",
        "Name": "5b9159ae-1701-4a6f-9a7a-aa9c8ddd0580",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/5b9159ae-1701-4a6f-9a7a-aa9c8ddd0580",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Use customer-managed keys to manage the encryption at rest of the contents of your registries. By default, the data is encrypted at rest with service-managed keys, but customer-managed keys are commonly required to meet regulatory compliance standards. Customer-managed keys enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more at https://aka.ms/acr/CMK.",
          "displayName": "Container registries should be encrypted with a customer-managed key",
          "metadata": {
            "category": "Container Registry",
            "version": "1.1.2",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.ContainerRegistry/registries"
                },
                {
                  "field": "Microsoft.ContainerRegistry/registries/encryption.status",
                  "notEquals": "enabled"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "5b9159ae-1701-4a6f-9a7a-aa9c8ddd0580"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/d0793b48-0edc-4296-a390-4c75d1bdfd71",
        "Name": "d0793b48-0edc-4296-a390-4c75d1bdfd71",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/d0793b48-0edc-4296-a390-4c75d1bdfd71",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Azure container registries by default accept connections over the internet from hosts on any network. To protect your registries from potential threats, allow access from only specific private endpoints, public IP addresses or address ranges. If your registry doesn't have network rules configured, it will appear in the unhealthy resources. Learn more about Container Registry network rules here: https://aka.ms/acr/privatelink, https://aka.ms/acr/portal/public-network and https://aka.ms/acr/vnet.",
          "displayName": "Container registries should not allow unrestricted network access",
          "metadata": {
            "category": "Container Registry",
            "version": "2.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.ContainerRegistry/registries"
                },
                {
                  "allOf": [
                    {
                      "anyof": [
                        {
                          "field": "Microsoft.ContainerRegistry/registries/networkRuleSet.defaultAction",
                          "exists": "false"
                        },
                        {
                          "field": "Microsoft.ContainerRegistry/registries/networkRuleSet.defaultAction",
                          "equals": "Allow"
                        }
                      ]
                    },
                    {
                      "anyof": [
                        {
                          "field": "Microsoft.ContainerRegistry/registries/publicNetworkAccess",
                          "exists": "false"
                        },
                        {
                          "field": "Microsoft.ContainerRegistry/registries/publicNetworkAccess",
                          "equals": "Enabled"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "d0793b48-0edc-4296-a390-4c75d1bdfd71"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e8eef0a8-67cf-4eb4-9386-14b0e78733d4",
        "Name": "e8eef0a8-67cf-4eb4-9386-14b0e78733d4",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/e8eef0a8-67cf-4eb4-9386-14b0e78733d4",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Azure Private Link lets you connect your virtual network to Azure services without a public IP address at the source or destination. The private link platform handles the connectivity between the consumer and services over the Azure backbone network.By mapping private endpoints to your container registries instead of the entire service, you'll also be protected against data leakage risks. Learn more at: https://aka.ms/acr/private-link.",
          "displayName": "Container registries should use private link",
          "metadata": {
            "category": "Container Registry",
            "version": "1.0.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.ContainerRegistry/registries"
                },
                {
                  "count": {
                    "field": "Microsoft.ContainerRegistry/registries/privateEndpointConnections[*]",
                    "where": {
                      "field": "Microsoft.ContainerRegistry/registries/privateEndpointConnections[*].privateLinkServiceConnectionState.status",
                      "equals": "Approved"
                    }
                  },
                  "less": 1
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "e8eef0a8-67cf-4eb4-9386-14b0e78733d4"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ca610c1d-041c-4332-9d88-7ed3094967c7",
        "Name": "ca610c1d-041c-4332-9d88-7ed3094967c7",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/ca610c1d-041c-4332-9d88-7ed3094967c7",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Azure Private Link lets you connect your virtual network to Azure services without a public IP address at the source or destination. The private link platform handles the connectivity between the consumer and services over the Azure backbone network. By mapping private endpoints to your app configuration instances instead of the entire service, you'll also be protected against data leakage risks. Learn more at: https://aka.ms/appconfig/private-endpoint.",
          "displayName": "App Configuration should use private link",
          "metadata": {
            "category": "App Configuration",
            "version": "1.0.2",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.AppConfiguration/configurationStores/privateEndpointConnections",
                "existenceCondition": {
                  "field": "Microsoft.AppConfiguration/configurationStores/privateEndpointConnections/privateLinkServiceConnectionState.status",
                  "equals": "Approved"
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.AppConfiguration/configurationStores"
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "ca610c1d-041c-4332-9d88-7ed3094967c7"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9830b652-8523-49cc-b1b3-e17dce1127ca",
        "Name": "9830b652-8523-49cc-b1b3-e17dce1127ca",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/9830b652-8523-49cc-b1b3-e17dce1127ca",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Azure Private Link lets you connect your virtual network to Azure services without a public IP address at the source or destination. The Private Link platform handles the connectivity between the consumer and services over the Azure backbone network. By mapping private endpoints to your Event Grid domain instead of the entire service, you'll also be protected against data leakage risks. Learn more at: https://aka.ms/privateendpoints.",
          "displayName": "Azure Event Grid domains should use private link",
          "metadata": {
            "category": "Event Grid",
            "version": "1.0.2",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.EventGrid/domains"
                },
                {
                  "count": {
                    "field": "Microsoft.EventGrid/domains/privateEndpointConnections[*]",
                    "where": {
                      "field": "Microsoft.EventGrid/domains/privateEndpointConnections[*].privateLinkServiceConnectionState.status",
                      "equals": "Approved"
                    }
                  },
                  "less": 1
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "9830b652-8523-49cc-b1b3-e17dce1127ca"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/4b90e17e-8448-49db-875e-bd83fb6f804f",
        "Name": "4b90e17e-8448-49db-875e-bd83fb6f804f",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/4b90e17e-8448-49db-875e-bd83fb6f804f",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Azure Private Link lets you connect your virtual network to Azure services without a public IP address at the source or destination. The Private Link platform handles the connectivity between the consumer and services over the Azure backbone network. By mapping private endpoints to your Event Grid topic instead of the entire service, you'll also be protected against data leakage risks. Learn more at: https://aka.ms/privateendpoints.",
          "displayName": "Azure Event Grid topics should use private link",
          "metadata": {
            "category": "Event Grid",
            "version": "1.0.2",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.EventGrid/topics"
                },
                {
                  "field": "kind",
                  "notEquals": "AzureArc"
                },
                {
                  "count": {
                    "field": "Microsoft.EventGrid/topics/privateEndpointConnections[*]",
                    "where": {
                      "field": "Microsoft.EventGrid/topics/privateEndpointConnections[*].privateLinkServiceConnectionState.status",
                      "equals": "Approved"
                    }
                  },
                  "less": 1
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "4b90e17e-8448-49db-875e-bd83fb6f804f"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2393d2cf-a342-44cd-a2e2-fe0188fd1234",
        "Name": "2393d2cf-a342-44cd-a2e2-fe0188fd1234",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/2393d2cf-a342-44cd-a2e2-fe0188fd1234",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Azure Private Link lets you connect your virtual network to Azure services without a public IP address at the source or destination. The private link platform handles the connectivity between the consumer and services over the Azure backbone network. By mapping private endpoints to your Azure SignalR Service resource instead of the entire service, you'll reduce your data leakage risks. Learn more about private links at: https://aka.ms/asrs/privatelink.",
          "displayName": "Azure SignalR Service should use private link",
          "metadata": {
            "category": "SignalR",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.SignalRService/SignalR"
                },
                {
                  "count": {
                    "field": "Microsoft.SignalRService/SignalR/privateEndpointConnections[*]",
                    "where": {
                      "field": "Microsoft.SignalRService/SignalR/privateEndpointConnections[*].privateLinkServiceConnectionState.status",
                      "equals": "Approved"
                    }
                  },
                  "less": 1
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "2393d2cf-a342-44cd-a2e2-fe0188fd1234"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ba769a63-b8cc-4b2d-abf6-ac33c7204be8",
        "Name": "ba769a63-b8cc-4b2d-abf6-ac33c7204be8",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/ba769a63-b8cc-4b2d-abf6-ac33c7204be8",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Manage encryption at rest of Azure Machine Learning workspace data with customer-managed keys. By default, customer data is encrypted with service-managed keys, but customer-managed keys are commonly required to meet regulatory compliance standards. Customer-managed keys enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more at https://aka.ms/azureml-workspaces-cmk.",
          "displayName": "Azure Machine Learning workspaces should be encrypted with a customer-managed key",
          "metadata": {
            "category": "Machine Learning",
            "version": "1.0.3",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.MachineLearningServices/workspaces"
                },
                {
                  "not": {
                    "field": "Microsoft.MachineLearningServices/workspaces/encryption.status",
                    "equals": "enabled"
                  }
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "ba769a63-b8cc-4b2d-abf6-ac33c7204be8"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/45e05259-1eb5-4f70-9574-baf73e9d219b",
        "Name": "45e05259-1eb5-4f70-9574-baf73e9d219b",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/45e05259-1eb5-4f70-9574-baf73e9d219b",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Azure Private Link lets you connect your virtual network to Azure services without a public IP address at the source or destination. The Private Link platform handles the connectivity between the consumer and services over the Azure backbone network. By mapping private endpoints to Azure Machine Learning workspaces, data leakage risks are reduced. Learn more about private links at: https://docs.microsoft.com/azure/machine-learning/how-to-configure-private-link.",
          "displayName": "Azure Machine Learning workspaces should use private link",
          "metadata": {
            "category": "Machine Learning",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.MachineLearningServices/workspaces"
                },
                {
                  "count": {
                    "field": "Microsoft.MachineLearningServices/workspaces/privateEndpointConnections[*]",
                    "where": {
                      "field": "Microsoft.MachineLearningServices/workspaces/privateEndpointConnections[*].privateLinkServiceConnectionState.status",
                      "equals": "Approved"
                    }
                  },
                  "less": 1
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "45e05259-1eb5-4f70-9574-baf73e9d219b"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/055aa869-bc98-4af8-bafc-23f1ab6ffe2c",
        "Name": "055aa869-bc98-4af8-bafc-23f1ab6ffe2c",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/055aa869-bc98-4af8-bafc-23f1ab6ffe2c",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Deploy Azure Web Application Firewall (WAF) in front of public facing web applications for additional inspection of incoming traffic. Web Application Firewall (WAF) provides centralized protection of your web applications from common exploits and vulnerabilities such as SQL injections, Cross-Site Scripting, local and remote file executions. You can also restrict access to your web applications by countries, IP address ranges, and other http(s) parameters via custom rules.",
          "displayName": "Azure Web Application Firewall should be enabled for Azure Front Door entry-points",
          "metadata": {
            "category": "Network",
            "version": "1.0.2",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Network/frontdoors"
                },
                {
                  "field": "Microsoft.Network/frontdoors/frontendEndpoints[*].webApplicationFirewallPolicyLink.id",
                  "exists": "false"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "055aa869-bc98-4af8-bafc-23f1ab6ffe2c"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/564feb30-bf6a-4854-b4bb-0d2d2d1e6c66",
        "Name": "564feb30-bf6a-4854-b4bb-0d2d2d1e6c66",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/564feb30-bf6a-4854-b4bb-0d2d2d1e6c66",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Deploy Azure Web Application Firewall (WAF) in front of public facing web applications for additional inspection of incoming traffic. Web Application Firewall (WAF) provides centralized protection of your web applications from common exploits and vulnerabilities such as SQL injections, Cross-Site Scripting, local and remote file executions. You can also restrict access to your web applications by countries, IP address ranges, and other http(s) parameters via custom rules.",
          "displayName": "Web Application Firewall (WAF) should be enabled for Application Gateway",
          "metadata": {
            "category": "Network",
            "version": "2.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Network/applicationGateways"
                },
                {
                  "field": "Microsoft.Network/applicationGateways/webApplicationFirewallConfiguration",
                  "exists": "false"
                },
                {
                  "field": "Microsoft.Network/applicationGateways/firewallPolicy",
                  "exists": "false"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "564feb30-bf6a-4854-b4bb-0d2d2d1e6c66"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/fdccbe47-f3e3-4213-ad5d-ea459b2fa077",
        "Name": "fdccbe47-f3e3-4213-ad5d-ea459b2fa077",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/fdccbe47-f3e3-4213-ad5d-ea459b2fa077",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Disable the public network access property to improve security and ensure your Azure Database for MariaDB can only be accessed from a private endpoint. This configuration strictly disables access from any public address space outside of Azure IP range, and denies all logins that match IP or virtual network-based firewall rules.",
          "displayName": "Public network access should be disabled for MariaDB servers",
          "metadata": {
            "category": "SQL",
            "version": "2.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.DBforMariaDB/servers"
                },
                {
                  "field": "Microsoft.DBforMariaDB/servers/publicNetworkAccess",
                  "notEquals": "Disabled"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "fdccbe47-f3e3-4213-ad5d-ea459b2fa077"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/d9844e8a-1437-4aeb-a32c-0c992f056095",
        "Name": "d9844e8a-1437-4aeb-a32c-0c992f056095",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/d9844e8a-1437-4aeb-a32c-0c992f056095",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Disable the public network access property to improve security and ensure your Azure Database for MySQL can only be accessed from a private endpoint. This configuration strictly disables access from any public address space outside of Azure IP range, and denies all logins that match IP or virtual network-based firewall rules.",
          "displayName": "Public network access should be disabled for MySQL servers",
          "metadata": {
            "category": "SQL",
            "version": "2.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.DBforMySQL/servers"
                },
                {
                  "field": "Microsoft.DBforMySQL/servers/publicNetworkAccess",
                  "notEquals": "Disabled"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "d9844e8a-1437-4aeb-a32c-0c992f056095"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/83cef61d-dbd1-4b20-a4fc-5fbc7da10833",
        "Name": "83cef61d-dbd1-4b20-a4fc-5fbc7da10833",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/83cef61d-dbd1-4b20-a4fc-5fbc7da10833",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Use customer-managed keys to manage the encryption at rest of your MySQL servers. By default, the data is encrypted at rest with service-managed keys, but customer-managed keys are commonly required to meet regulatory compliance standards. Customer-managed keys enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management.",
          "displayName": "MySQL servers should use customer-managed keys to encrypt data at rest",
          "metadata": {
            "category": "SQL",
            "version": "1.0.4",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.DBforMySQL/servers/keys",
                "existenceCondition": {
                  "allOf": [
                    {
                      "field": "Microsoft.DBforMySQL/servers/keys/serverKeyType",
                      "equals": "AzureKeyVault"
                    },
                    {
                      "field": "Microsoft.DBforMySQL/servers/keys/uri",
                      "notEquals": ""
                    },
                    {
                      "field": "Microsoft.DBforMySQL/servers/keys/uri",
                      "exists": "true"
                    }
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.DBforMySQL/servers"
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "83cef61d-dbd1-4b20-a4fc-5fbc7da10833"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b52376f7-9612-48a1-81cd-1ffe4b61032c",
        "Name": "b52376f7-9612-48a1-81cd-1ffe4b61032c",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/b52376f7-9612-48a1-81cd-1ffe4b61032c",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Disable the public network access property to improve security and ensure your Azure Database for PostgreSQL can only be accessed from a private endpoint. This configuration disables access from any public address space outside of Azure IP range, and denies all logins that match IP or virtual network-based firewall rules.",
          "displayName": "Public network access should be disabled for PostgreSQL servers",
          "metadata": {
            "category": "SQL",
            "version": "2.0.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.DBforPostgreSQL/servers"
                },
                {
                  "field": "Microsoft.DBforPostgreSQL/servers/publicNetworkAccess",
                  "notEquals": "Disabled"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "b52376f7-9612-48a1-81cd-1ffe4b61032c"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/18adea5e-f416-4d0f-8aa8-d24321e3e274",
        "Name": "18adea5e-f416-4d0f-8aa8-d24321e3e274",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/18adea5e-f416-4d0f-8aa8-d24321e3e274",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Use customer-managed keys to manage the encryption at rest of your PostgreSQL servers. By default, the data is encrypted at rest with service-managed keys, but customer-managed keys are commonly required to meet regulatory compliance standards. Customer-managed keys enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management.",
          "displayName": "PostgreSQL servers should use customer-managed keys to encrypt data at rest",
          "metadata": {
            "category": "SQL",
            "version": "1.0.4",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.DBforPostgreSQL/servers/keys",
                "existenceCondition": {
                  "allOf": [
                    {
                      "field": "Microsoft.DBforPostgreSQL/servers/keys/serverKeyType",
                      "equals": "AzureKeyVault"
                    },
                    {
                      "field": "Microsoft.DBforPostgreSQL/servers/keys/uri",
                      "notEquals": ""
                    },
                    {
                      "field": "Microsoft.DBforPostgreSQL/servers/keys/uri",
                      "exists": "true"
                    }
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.DBforPostgreSQL/servers"
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "18adea5e-f416-4d0f-8aa8-d24321e3e274"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2154edb9-244f-4741-9970-660785bccdaa",
        "Name": "2154edb9-244f-4741-9970-660785bccdaa",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/2154edb9-244f-4741-9970-660785bccdaa",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled",
                "Deny"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Azure Private Link lets you connect your virtual network to Azure services without a public IP address at the source or destination. The Private Link platform handles the connectivity between the consumer and services over the Azure backbone network. By mapping private endpoints to your VM Image Builder building resources, data leakage risks are reduced. Learn more about private links at: https://docs.microsoft.com/azure/virtual-machines/linux/image-builder-networking#deploy-using-an-existing-vnet.",
          "displayName": "VM Image Builder templates should use private link",
          "metadata": {
            "category": "VM Image Builder",
            "version": "1.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.VirtualMachineImages/imageTemplates"
                },
                {
                  "field": "Microsoft.VirtualMachineImages/imageTemplates/vmProfile.vnetConfig",
                  "exists": "false"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "2154edb9-244f-4741-9970-660785bccdaa"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/55615ac9-af46-4a59-874e-391cc3dfb490",
        "Name": "55615ac9-af46-4a59-874e-391cc3dfb490",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/55615ac9-af46-4a59-874e-391cc3dfb490",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            },
            "allowedIPAddresses": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "Array with allowed public IP addresses. An empty array is evaluated as to allow all IPs.",
                "displayName": "Allowed IP addresses"
              },
              "schema": null,
              "type": "Array"
            },
            "forbiddenIPAddresses": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "Array with forbidden public IP addresses. An empty array is evaluated as there are no forbidden IP addresses.",
                "displayName": "Forbidden IP addresses"
              },
              "schema": null,
              "type": "Array"
            },
            "restrictIPAddresses": {
              "allowedValues": [
                "Yes",
                "No"
              ],
              "defaultValue": "No",
              "metadata": {
                "description": "Select (Yes) to allow or forbid a list of IP addresses. If (No), the list of IP addresses won't have any effect in the policy enforcement",
                "displayName": "Would you like to restrict specific IP addresses?"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Enable the key vault firewall so that the key vault is not accessible by default to any public IPs. Optionally, you can configure specific IP ranges to limit access to those networks. Learn more at: https://docs.microsoft.com/azure/key-vault/general/network-security",
          "displayName": "Azure Key Vault should have firewall enabled",
          "metadata": {
            "category": "Key Vault",
            "version": "3.2.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.KeyVault/vaults"
                },
                {
                  "field": "Microsoft.KeyVault/vaults/createMode",
                  "notEquals": "recover"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.KeyVault/vaults/networkAcls.defaultAction",
                      "notEquals": "Deny"
                    },
                    {
                      "allOf": [
                        {
                          "value": "[parameters('restrictIPAddresses')]",
                          "equals": "Yes"
                        },
                        {
                          "anyOf": [
                            {
                              "allOf": [
                                {
                                  "notEquals": 0,
                                  "count": {
                                    "value": "[parameters('allowedIPAddresses')]",
                                    "name": "allowedIPAddresses"
                                  }
                                },
                                {
                                  "not": {
                                    "equals": "[length(field('Microsoft.KeyVault/vaults/networkAcls.ipRules[*]'))]",
                                    "count": {
                                      "field": "Microsoft.KeyVault/vaults/networkAcls.ipRules[*]",
                                      "where": {
                                        "count": {
                                          "value": "[parameters('allowedIPAddresses')]",
                                          "name": "allowedIpAddress",
                                          "where": {
                                            "value": "[ipRangeContains(current('allowedIpAddress'), current('Microsoft.KeyVault/vaults/networkAcls.ipRules[*].value'))]",
                                            "equals": true
                                          }
                                        },
                                        "greater": 0
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "notEquals": 0,
                                  "count": {
                                    "value": "[parameters('forbiddenIPAddresses')]",
                                    "name": "forbiddenIPAddresses"
                                  }
                                },
                                {
                                  "not": {
                                    "equals": 0,
                                    "count": {
                                      "field": "Microsoft.KeyVault/vaults/networkAcls.ipRules[*]",
                                      "where": {
                                        "count": {
                                          "value": "[parameters('forbiddenIPAddresses')]",
                                          "name": "forbiddenIPAddresses",
                                          "where": {
                                            "value": "[ipRangeContains(current('forbiddenIPAddresses'), current('Microsoft.KeyVault/vaults/networkAcls.ipRules[*].value'))]",
                                            "equals": true
                                          }
                                        },
                                        "greater": 0
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "55615ac9-af46-4a59-874e-391cc3dfb490"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a6abeaec-4d90-4a02-805f-6b26c4d3fbe9",
        "Name": "a6abeaec-4d90-4a02-805f-6b26c4d3fbe9",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/a6abeaec-4d90-4a02-805f-6b26c4d3fbe9",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "The Deny effect has been deprecated for this policy given that the simultaneous creation of a Key Vault and its associated private endpoint is not possible. Therefore, Deny prevents the creation of any new Key Vault.",
                "displayName": "[Deprecated]: Effect",
                "deprecated": true
              },
              "schema": null,
              "type": "String"
            },
            "audit_effect": {
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Azure Private Link lets you connect your virtual networks to Azure services without a public IP address at the source or destination. The Private Link platform handles the connectivity between the consumer and services over the Azure backbone network. By mapping private endpoints to key vault, you can reduce data leakage risks. Learn more about private links at: https://aka.ms/akvprivatelink.",
          "displayName": "Azure Key Vaults should use private link",
          "metadata": {
            "category": "Key Vault",
            "version": "1.2.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('audit_effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.KeyVault/vaults"
                },
                {
                  "count": {
                    "field": "Microsoft.KeyVault/vaults/privateEndpointConnections[*]",
                    "where": {
                      "field": "Microsoft.KeyVault/vaults/privateEndpointConnections[*].privateLinkServiceConnectionState.status",
                      "equals": "Approved"
                    }
                  },
                  "less": 1
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "a6abeaec-4d90-4a02-805f-6b26c4d3fbe9"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/af35e2a4-ef96-44e7-a9ae-853dd97032c4",
        "Name": "af35e2a4-ef96-44e7-a9ae-853dd97032c4",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/af35e2a4-ef96-44e7-a9ae-853dd97032c4",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled",
                "Deny"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            },
            "evaluatedSkuNames": {
              "allowedValues": [
                "Standard",
                "Enterprise"
              ],
              "defaultValue": [
                "Standard",
                "Enterprise"
              ],
              "metadata": {
                "description": "List of Azure Spring Cloud SKUs against which this policy will be evaluated.",
                "displayName": "Azure Spring Cloud SKU Names"
              },
              "schema": null,
              "type": "Array"
            }
          },
          "description": "Azure Spring Cloud instances should use virtual network injection for the following purposes: 1. Isolate Azure Spring Cloud from Internet. 2. Enable Azure Spring Cloud to interact with systems in either on premises data centers or Azure service in other virtual networks. 3. Empower customers to control inbound and outbound network communications for Azure Spring Cloud.",
          "displayName": "Azure Spring Cloud should use network injection",
          "metadata": {
            "category": "App Platform",
            "version": "1.2.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.AppPlatform/Spring"
                },
                {
                  "field": "Microsoft.AppPlatform/Spring/sku.tier",
                  "in": "[parameters('evaluatedSkuNames')]"
                },
                {
                  "field": "Microsoft.AppPlatform/Spring/networkProfile.serviceRuntimeSubnetId",
                  "exists": false
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "af35e2a4-ef96-44e7-a9ae-853dd97032c4"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/4f4f78b8-e367-4b10-a341-d9a4ad5cf1c7",
        "Name": "4f4f78b8-e367-4b10-a341-d9a4ad5cf1c7",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/4f4f78b8-e367-4b10-a341-d9a4ad5cf1c7",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "To ensure the relevant people in your organization are notified when there is a potential security breach in one of your subscriptions, set a security contact to receive email notifications from Security Center.",
          "displayName": "Subscriptions should have a contact email address for security issues",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/securityContacts",
                "existenceCondition": {
                  "field": "Microsoft.Security/securityContacts/email",
                  "notEquals": ""
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "4f4f78b8-e367-4b10-a341-d9a4ad5cf1c7"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/475aae12-b88a-4572-8b36-9b712b2b3a17",
        "Name": "475aae12-b88a-4572-8b36-9b712b2b3a17",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/475aae12-b88a-4572-8b36-9b712b2b3a17",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "To monitor for security vulnerabilities and threats, Azure Security Center collects data from your Azure virtual machines. Data is collected by the Log Analytics agent, formerly known as the Microsoft Monitoring Agent (MMA), which reads various security-related configurations and event logs from the machine and copies the data to your Log Analytics workspace for analysis. We recommend enabling auto provisioning to automatically deploy the agent to all supported Azure VMs and any new ones that are created.",
          "displayName": "Auto provisioning of the Log Analytics agent should be enabled on your subscription",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/autoProvisioningSettings",
                "existenceCondition": {
                  "field": "Microsoft.Security/autoProvisioningSettings/autoProvision",
                  "equals": "On"
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "475aae12-b88a-4572-8b36-9b712b2b3a17"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6e2593d9-add6-4083-9c9b-4b7d2188c899",
        "Name": "6e2593d9-add6-4083-9c9b-4b7d2188c899",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/6e2593d9-add6-4083-9c9b-4b7d2188c899",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "To ensure the relevant people in your organization are notified when there is a potential security breach in one of your subscriptions, enable email notifications for high severity alerts in Security Center.",
          "displayName": "Email notification for high severity alerts should be enabled",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/securityContacts",
                "existenceCondition": {
                  "field": "Microsoft.Security/securityContacts/alertNotifications",
                  "notEquals": "Off"
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "6e2593d9-add6-4083-9c9b-4b7d2188c899"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0b15565f-aa9e-48ba-8619-45960f2c314d",
        "Name": "0b15565f-aa9e-48ba-8619-45960f2c314d",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0b15565f-aa9e-48ba-8619-45960f2c314d",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "To ensure your subscription owners are notified when there is a potential security breach in their subscription, set email notifications to subscription owners for high severity alerts in Security Center.",
          "displayName": "Email notification to subscription owner for high severity alerts should be enabled",
          "metadata": {
            "category": "Security Center",
            "version": "2.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/securityContacts",
                "existenceCondition": {
                  "not": {
                    "allOf": [
                      {
                        "field": "Microsoft.Security/securityContacts/alertsToAdmins",
                        "equals": "Off"
                      },
                      {
                        "field": "Microsoft.Security/securityContacts/alertNotifications.minimalSeverity",
                        "equals": "High"
                      }
                    ]
                  }
                },
                "existenceScope": "subscription"
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "0b15565f-aa9e-48ba-8619-45960f2c314d"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6edd7eda-6dd8-40f7-810d-67160c639cd9",
        "Name": "6edd7eda-6dd8-40f7-810d-67160c639cd9",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/6edd7eda-6dd8-40f7-810d-67160c639cd9",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Azure Private Link lets you connect your virtual network to Azure services without a public IP address at the source or destination. The Private Link platform handles the connectivity between the consumer and services over the Azure backbone network. By mapping private endpoints to your storage account, data leakage risks are reduced. Learn more about private links at - https://aka.ms/azureprivatelinkoverview",
          "displayName": "Storage accounts should use private link",
          "metadata": {
            "category": "Storage",
            "version": "2.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Storage/storageAccounts/privateEndpointConnections",
                "existenceCondition": {
                  "field": "Microsoft.Storage/storageAccounts/privateEndpointConnections/privateLinkServiceConnectionState.status",
                  "equals": "Approved"
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Storage/storageAccounts"
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "6edd7eda-6dd8-40f7-810d-67160c639cd9"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/630c64f9-8b6b-4c64-b511-6544ceff6fd6",
        "Name": "630c64f9-8b6b-4c64-b511-6544ceff6fd6",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/630c64f9-8b6b-4c64-b511-6544ceff6fd6",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of this policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            },
            "IncludeArcMachines": {
              "allowedValues": [
                "true",
                "false"
              ],
              "defaultValue": "false",
              "metadata": {
                "description": "By selecting this option, you agree to be charged monthly per Arc connected machine.",
                "displayName": "Include Arc connected servers",
                "portalReview": "true"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Although SSH itself provides an encrypted connection, using passwords with SSH still leaves the VM vulnerable to brute-force attacks. The most secure option for authenticating to an Azure Linux virtual machine over SSH is with a public-private key pair, also known as SSH keys. Learn more: https://docs.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed.",
          "displayName": "Authentication to Linux machines should require SSH keys",
          "metadata": {
            "category": "Guest Configuration",
            "version": "3.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z",
            "guestConfiguration": {
              "version": "1.*",
              "name": "LinuxNoPasswordForSSH"
            },
            "requiredProviders": [
              "Microsoft.GuestConfiguration"
            ]
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                "name": "LinuxNoPasswordForSSH",
                "existenceCondition": {
                  "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                  "equals": "Compliant"
                }
              }
            },
            "if": {
              "anyOf": [
                {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "in": [
                            "microsoft-aks",
                            "qubole-inc",
                            "datastax",
                            "couchbase",
                            "scalegrid",
                            "checkpoint",
                            "paloaltonetworks",
                            "debian",
                            "credativ"
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "OpenLogic"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "6*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Oracle"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "6*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "RedHat"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "6*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "center-for-internet-security-inc"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "notLike": "cis-windows*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Suse"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "11*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "Canonical"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "12*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-dsvm"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "notLike": "dsvm-win*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "cloudera"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "6*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-ads"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "linux*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/virtualMachines/osProfile.linuxConfiguration",
                                  "exists": "true"
                                },
                                {
                                  "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                  "like": "Linux*"
                                }
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "exists": "false"
                                },
                                {
                                  "field": "Microsoft.Compute/imagePublisher",
                                  "notIn": [
                                    "OpenLogic",
                                    "RedHat",
                                    "credativ",
                                    "Suse",
                                    "Canonical",
                                    "microsoft-dsvm",
                                    "cloudera",
                                    "microsoft-ads",
                                    "center-for-internet-security-inc",
                                    "Oracle",
                                    "AzureDatabricks",
                                    "azureopenshift"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "allOf": [
                    {
                      "value": "[parameters('IncludeArcMachines')]",
                      "equals": "true"
                    },
                    {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "type",
                              "equals": "Microsoft.HybridCompute/machines"
                            },
                            {
                              "field": "Microsoft.HybridCompute/imageOffer",
                              "like": "linux*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "type",
                              "equals": "Microsoft.ConnectedVMwarevSphere/virtualMachines"
                            },
                            {
                              "field": "Microsoft.ConnectedVMwarevSphere/virtualMachines/osProfile.osType",
                              "like": "linux*"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "630c64f9-8b6b-4c64-b511-6544ceff6fd6"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7698e800-9299-47a6-b3b6-5a0fee576eed",
        "Name": "7698e800-9299-47a6-b3b6-5a0fee576eed",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/7698e800-9299-47a6-b3b6-5a0fee576eed",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Private endpoint connections enforce secure communication by enabling private connectivity to Azure SQL Database.",
          "displayName": "Private endpoint connections on Azure SQL Database should be enabled",
          "metadata": {
            "category": "SQL",
            "version": "1.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Sql/servers"
                },
                {
                  "count": {
                    "field": "Microsoft.Sql/servers/privateEndpointConnections[*]",
                    "where": {
                      "field": "Microsoft.Sql/servers/privateEndpointConnections[*].privateLinkServiceConnectionState.status",
                      "equals": "Approved"
                    }
                  },
                  "less": 1
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "7698e800-9299-47a6-b3b6-5a0fee576eed"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1b8ca024-1d5c-4dec-8995-b1a932b41780",
        "Name": "1b8ca024-1d5c-4dec-8995-b1a932b41780",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/1b8ca024-1d5c-4dec-8995-b1a932b41780",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Disabling the public network access property improves security by ensuring your Azure SQL Database can only be accessed from a private endpoint. This configuration denies all logins that match IP or virtual network based firewall rules.",
          "displayName": "Public network access on Azure SQL Database should be disabled",
          "metadata": {
            "category": "SQL",
            "version": "1.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Sql/servers"
                },
                {
                  "field": "Microsoft.Sql/servers/publicNetworkAccess",
                  "notEquals": "Disabled"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "1b8ca024-1d5c-4dec-8995-b1a932b41780"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1a5b4dca-0b6f-4cf5-907c-56316bc1bf3d",
        "Name": "1a5b4dca-0b6f-4cf5-907c-56316bc1bf3d",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/1a5b4dca-0b6f-4cf5-907c-56316bc1bf3d",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Deny",
              "metadata": {
                "description": "'Audit' allows a non-compliant resource to be created, but flags it as non-compliant. 'Deny' blocks the resource creation. 'Disable' turns off the policy.",
                "displayName": "Effect",
                "portalReview": true
              },
              "schema": null,
              "type": "String"
            },
            "excludedNamespaces": {
              "allowedValues": null,
              "defaultValue": [
                "kube-system",
                "gatekeeper-system",
                "azure-arc",
                "azure-extensions-usage-system"
              ],
              "metadata": {
                "description": "List of Kubernetes namespaces to exclude from policy evaluation. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design. \"azure-extensions-usage-system\" is optional to remove.",
                "displayName": "Namespace exclusions"
              },
              "schema": null,
              "type": "Array"
            },
            "labelSelector": {
              "allowedValues": null,
              "defaultValue": {},
              "metadata": {
                "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources.",
                "displayName": "Kubernetes label selector"
              },
              "schema": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "matchExpressions": {
                    "description": "matchExpressions is a list of values, a key, and an operator.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string",
                          "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                          ]
                        },
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ]
                    },
                    "minItems": 1
                  },
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "minProperties": 1
                  }
                }
              },
              "type": "Object"
            },
            "namespaces": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces.",
                "displayName": "Namespace inclusions"
              },
              "schema": null,
              "type": "Array"
            }
          },
          "description": "Use of HTTPS ensures authentication and protects data in transit from network layer eavesdropping attacks. This capability is currently generally available for Kubernetes Service (AKS), and in preview for Azure Arc enabled Kubernetes. For more info, visit https://aka.ms/kubepolicydoc",
          "displayName": "Kubernetes clusters should be accessible only over HTTPS",
          "metadata": {
            "category": "Kubernetes",
            "version": "8.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6551Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "excludedNamespaces": "[parameters('excludedNamespaces')]",
                "labelSelector": "[parameters('labelSelector')]",
                "namespaces": "[parameters('namespaces')]",
                "templateInfo": {
                  "sourceType": "PublicURL",
                  "url": "https://store.policy.core.windows.net/kubernetes/ingress-https-only/v1/template.yaml"
                },
                "apiGroups": [
                  "extensions",
                  "networking.k8s.io"
                ],
                "kinds": [
                  "Ingress"
                ]
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Kubernetes/connectedClusters",
                "Microsoft.ContainerService/managedClusters"
              ]
            }
          },
          "mode": "Microsoft.Kubernetes.Data"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "1a5b4dca-0b6f-4cf5-907c-56316bc1bf3d"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/5752e6d6-1206-46d8-8ab1-ecc2f71a8112",
        "Name": "5752e6d6-1206-46d8-8ab1-ecc2f71a8112",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/5752e6d6-1206-46d8-8ab1-ecc2f71a8112",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of this policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            },
            "IncludeArcMachines": {
              "allowedValues": [
                "true",
                "false"
              ],
              "defaultValue": "false",
              "metadata": {
                "description": "By selecting this option, you agree to be charged monthly per Arc connected machine.",
                "displayName": "Include Arc connected servers",
                "portalReview": "true"
              },
              "schema": null,
              "type": "String"
            },
            "MinimumTLSVersion": {
              "allowedValues": [
                "1.1",
                "1.2"
              ],
              "defaultValue": "1.2",
              "metadata": {
                "description": "The minimum TLS protocol version that should be enabled. Windows machines with lower TLS versions will be marked as non-compliant.",
                "displayName": "Minimum TLS version"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "To protect the privacy of information communicated over the Internet, your machines should use the latest version of the industry-standard cryptographic protocol, Transport Layer Security (TLS). TLS secures communications over a network by encrypting a connection between machines.",
          "displayName": "Windows machines should be configured to use secure communication protocols",
          "metadata": {
            "category": "Guest Configuration",
            "version": "4.1.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z",
            "guestConfiguration": {
              "version": "1.*",
              "name": "AuditSecureProtocol",
              "configurationParameter": {
                "MinimumTLSVersion": "[SecureWebServer]s1;MinimumTLSVersion"
              }
            },
            "requiredProviders": [
              "Microsoft.GuestConfiguration"
            ]
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                "name": "AuditSecureProtocol",
                "existenceCondition": {
                  "allOf": [
                    {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                      "equals": "Compliant"
                    },
                    {
                      "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/parameterHash",
                      "equals": "[base64(concat('[SecureWebServer]s1;MinimumTLSVersion', '=', parameters('MinimumTLSVersion')))]"
                    }
                  ]
                }
              }
            },
            "if": {
              "anyOf": [
                {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "in": [
                            "esri",
                            "incredibuild",
                            "MicrosoftDynamicsAX",
                            "MicrosoftSharepoint",
                            "MicrosoftVisualStudio",
                            "MicrosoftWindowsServerHPCPack"
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftWindowsServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "notLike": "2008*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "MicrosoftSQLServer"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "notLike": "SQL2008*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-dsvm"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "dsvm-win*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "microsoft-ads"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "in": [
                                "standard-data-science-vm",
                                "windows-data-science-vm"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "batch"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "equals": "rendering-windows2016"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "center-for-internet-security-inc"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "cis-windows-server-201*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "pivotal"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "bosh-windows-server*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "equals": "cloud-infrastructure-services"
                            },
                            {
                              "field": "Microsoft.Compute/imageOffer",
                              "like": "ad*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                                  "exists": "true"
                                },
                                {
                                  "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                                  "like": "Windows*"
                                }
                              ]
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "exists": "false"
                                },
                                {
                                  "allOf": [
                                    {
                                      "field": "Microsoft.Compute/imageSKU",
                                      "notLike": "2008*"
                                    },
                                    {
                                      "field": "Microsoft.Compute/imageOffer",
                                      "notLike": "SQL2008*"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "allOf": [
                    {
                      "value": "[parameters('IncludeArcMachines')]",
                      "equals": "true"
                    },
                    {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "type",
                              "equals": "Microsoft.HybridCompute/machines"
                            },
                            {
                              "field": "Microsoft.HybridCompute/imageOffer",
                              "like": "windows*"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "type",
                              "equals": "Microsoft.ConnectedVMwarevSphere/virtualMachines"
                            },
                            {
                              "field": "Microsoft.ConnectedVMwarevSphere/virtualMachines/osProfile.osType",
                              "like": "windows*"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "5752e6d6-1206-46d8-8ab1-ecc2f71a8112"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/037eea7a-bd0a-46c5-9a66-03aea78705d3",
        "Name": "037eea7a-bd0a-46c5-9a66-03aea78705d3",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/037eea7a-bd0a-46c5-9a66-03aea78705d3",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "The effect determines what happens when the policy rule is evaluated to match",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Network access to Cognitive Services accounts should be restricted. Configure network rules so only applications from allowed networks can access the Cognitive Services account. To allow connections from specific internet or on-premises clients, access can be granted to traffic from specific Azure virtual networks or to public internet IP address ranges.",
          "displayName": "Cognitive Services accounts should restrict network access",
          "metadata": {
            "category": "Cognitive Services",
            "version": "3.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.CognitiveServices/accounts"
                },
                {
                  "field": "Microsoft.CognitiveServices/accounts/networkAcls.defaultAction",
                  "notEquals": "Deny"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "037eea7a-bd0a-46c5-9a66-03aea78705d3"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0725b4dd-7e76-479c-a735-68e7ee23d5ca",
        "Name": "0725b4dd-7e76-479c-a735-68e7ee23d5ca",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0725b4dd-7e76-479c-a735-68e7ee23d5ca",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "The effect determines what happens when the policy rule is evaluated to match",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "To improve the security of Cognitive Services accounts, ensure that it isn't exposed to the public internet and can only be accessed from a private endpoint. Disable the public network access property as described in https://go.microsoft.com/fwlink/?linkid=2129800. This option disables access from any public address space outside the Azure IP range, and denies all logins that match IP or virtual network-based firewall rules. This reduces data leakage risks.",
          "displayName": "Cognitive Services accounts should disable public network access",
          "metadata": {
            "category": "Cognitive Services",
            "version": "3.0.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.CognitiveServices/accounts"
                },
                {
                  "field": "Microsoft.CognitiveServices/accounts/publicNetworkAccess",
                  "notEquals": "Disabled"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "0725b4dd-7e76-479c-a735-68e7ee23d5ca"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ef619a2c-cc4d-4d03-b2ba-8c94a834d85b",
        "Name": "ef619a2c-cc4d-4d03-b2ba-8c94a834d85b",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/ef619a2c-cc4d-4d03-b2ba-8c94a834d85b",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            },
            "evaluatedSkuNames": {
              "allowedValues": [
                "Developer",
                "Basic",
                "Standard",
                "Premium",
                "Consumption"
              ],
              "defaultValue": [
                "Developer",
                "Premium"
              ],
              "metadata": {
                "description": "List of API Management SKUs against which this policy will be evaluated.",
                "displayName": "API Management SKU Names"
              },
              "schema": null,
              "type": "Array"
            }
          },
          "description": "Azure Virtual Network deployment provides enhanced security, isolation and allows you to place your API Management service in a non-internet routable network that you control access to. These networks can then be connected to your on-premises networks using various VPN technologies, which enables access to your backend services within the network and/or on-premises. The developer portal and API gateway, can be configured to be accessible either from the Internet or only within the virtual network.",
          "displayName": "API Management services should use a virtual network",
          "metadata": {
            "category": "API Management",
            "version": "1.0.2",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.ApiManagement/service"
                },
                {
                  "field": "Microsoft.ApiManagement/service/sku.name",
                  "in": "[parameters('evaluatedSkuNames')]"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.ApiManagement/service/virtualNetworkType",
                      "exists": "false"
                    },
                    {
                      "field": "Microsoft.ApiManagement/service/virtualNetworkType",
                      "equals": "None"
                    }
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "ef619a2c-cc4d-4d03-b2ba-8c94a834d85b"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/862e97cf-49fc-4a5c-9de4-40d4e2e7c8eb",
        "Name": "862e97cf-49fc-4a5c-9de4-40d4e2e7c8eb",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/862e97cf-49fc-4a5c-9de4-40d4e2e7c8eb",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Deny",
              "metadata": {
                "description": "The desired effect of the policy.",
                "displayName": "Policy Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Firewall rules should be defined on your Azure Cosmos DB accounts to prevent traffic from unauthorized sources. Accounts that have at least one IP rule defined with the virtual network filter enabled are deemed compliant. Accounts disabling public access are also deemed compliant.",
          "displayName": "Azure Cosmos DB accounts should have firewall rules",
          "metadata": {
            "category": "Cosmos DB",
            "version": "2.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.DocumentDB/databaseAccounts"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.DocumentDB/databaseAccounts/publicNetworkAccess",
                      "exists": "false"
                    },
                    {
                      "field": "Microsoft.DocumentDB/databaseAccounts/publicNetworkAccess",
                      "equals": "Enabled"
                    }
                  ]
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.DocumentDB/databaseAccounts/isVirtualNetworkFilterEnabled",
                      "exists": "false"
                    },
                    {
                      "field": "Microsoft.DocumentDB/databaseAccounts/isVirtualNetworkFilterEnabled",
                      "equals": "false"
                    }
                  ]
                },
                {
                  "allOf": [
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.DocumentDB/databaseAccounts/ipRules",
                          "exists": "false"
                        },
                        {
                          "equals": 0,
                          "count": {
                            "field": "Microsoft.DocumentDB/databaseAccounts/ipRules[*]"
                          }
                        }
                      ]
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.DocumentDB/databaseAccounts/ipRangeFilter",
                          "exists": "false"
                        },
                        {
                          "field": "Microsoft.DocumentDB/databaseAccounts/ipRangeFilter",
                          "equals": ""
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "862e97cf-49fc-4a5c-9de4-40d4e2e7c8eb"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b6e2945c-0b7b-40f5-9233-7a5323b5cdc6",
        "Name": "b6e2945c-0b7b-40f5-9233-7a5323b5cdc6",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/b6e2945c-0b7b-40f5-9233-7a5323b5cdc6",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            },
            "resourceGroupName": {
              "allowedValues": null,
              "defaultValue": "NetworkWatcherRG",
              "metadata": {
                "description": "Name of the resource group of NetworkWatcher, such as NetworkWatcherRG. This is the resource group where the Network Watchers are located.",
                "displayName": "NetworkWatcher resource group name"
              },
              "schema": null,
              "type": "String"
            },
            "listOfLocations": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "Audit if Network Watcher is not enabled for region(s).",
                "displayName": "[Deprecated]: Locations",
                "strongType": "location",
                "deprecated": true
              },
              "schema": null,
              "type": "Array"
            }
          },
          "description": "Network Watcher is a regional service that enables you to monitor and diagnose conditions at a network scenario level in, to, and from Azure. Scenario level monitoring enables you to diagnose problems at an end to end network level view. It is required to have a network watcher resource group to be created in every region where a virtual network is present. An alert is enabled if a network watcher resource group is not available in a particular region.",
          "displayName": "Network Watcher should be enabled",
          "metadata": {
            "category": "Network",
            "version": "3.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Network/networkWatchers",
                "existenceCondition": {
                  "field": "location",
                  "equals": "[field('location')]"
                },
                "resourceGroupName": "[parameters('resourceGroupName')]"
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Network/virtualNetworks"
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "b6e2945c-0b7b-40f5-9233-7a5323b5cdc6"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/afe0c3be-ba3b-4544-ba52-0c99672a8ad6",
        "Name": "afe0c3be-ba3b-4544-ba52-0c99672a8ad6",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/afe0c3be-ba3b-4544-ba52-0c99672a8ad6",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            },
            "requiredRetentionDays": {
              "allowedValues": null,
              "defaultValue": "365",
              "metadata": {
                "description": "The required resource logs retention in days if exporting to an Azure Storage account",
                "displayName": "Required retention (days)"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Resource logs enable recreating activity trails to use for investigation purposes when a security incident occurs or when your network is compromised.",
          "displayName": "Resource logs in Azure Machine Learning Workspaces should be enabled",
          "metadata": {
            "category": "Machine Learning",
            "version": "1.0.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Insights/diagnosticSettings",
                "existenceCondition": {
                  "count": {
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                    "where": {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                                  "equals": "0"
                                },
                                {
                                  "value": "[padLeft(current('Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days'), 3, '0')]",
                                  "greaterOrEquals": "[padLeft(parameters('requiredRetentionDays'), 3, '0')]"
                                }
                              ]
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                  "notEquals": "true"
                                },
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/storageAccountId",
                                  "exists": false
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "greaterOrEquals": 1
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.MachineLearningServices/workspaces"
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "afe0c3be-ba3b-4544-ba52-0c99672a8ad6"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/438c38d2-3772-465a-a9cc-7a6666a275ce",
        "Name": "438c38d2-3772-465a-a9cc-7a6666a275ce",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/438c38d2-3772-465a-a9cc-7a6666a275ce",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Disabling public network access improves security by ensuring that the Machine Learning Workspaces aren't exposed on the public internet. You can control exposure of your workspaces by creating private endpoints instead. Learn more at: https://learn.microsoft.com/azure/machine-learning/how-to-configure-private-link?view=azureml-api-2&tabs=azure-portal.",
          "displayName": "Azure Machine Learning Workspaces should disable public network access",
          "metadata": {
            "category": "Machine Learning",
            "version": "2.0.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.MachineLearningServices/workspaces"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.MachineLearningServices/workspaces/publicNetworkAccess",
                      "exists": "false"
                    },
                    {
                      "field": "Microsoft.MachineLearningServices/workspaces/publicNetworkAccess",
                      "notEquals": "Disabled"
                    }
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "438c38d2-3772-465a-a9cc-7a6666a275ce"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7804b5c7-01dc-4723-969b-ae300cc07ff1",
        "Name": "7804b5c7-01dc-4723-969b-ae300cc07ff1",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/7804b5c7-01dc-4723-969b-ae300cc07ff1",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "The effect determines what happens when the policy rule is evaluated to match.",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Azure Virtual Networks provide enhanced security and isolation for your Azure Machine Learning Compute Clusters and Instances, as well as subnets, access control policies, and other features to further restrict access. When a compute is configured with a virtual network, it is not publicly addressable and can only be accessed from virtual machines and applications within the virtual network.",
          "displayName": "Azure Machine Learning Computes should be in a virtual network",
          "metadata": {
            "category": "Machine Learning",
            "version": "1.0.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.MachineLearningServices/workspaces/computes"
                },
                {
                  "field": "Microsoft.MachineLearningServices/workspaces/computes/computeType",
                  "in": [
                    "AmlCompute",
                    "ComputeInstance"
                  ]
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.MachineLearningServices/workspaces/computes/subnet.id",
                      "exists": false
                    },
                    {
                      "value": "[empty(field('Microsoft.MachineLearningServices/workspaces/computes/subnet.id'))]",
                      "equals": true
                    }
                  ]
                }
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "7804b5c7-01dc-4723-969b-ae300cc07ff1"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e96a9a5f-07ca-471b-9bc5-6a0f33cbd68f",
        "Name": "e96a9a5f-07ca-471b-9bc5-6a0f33cbd68f",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/e96a9a5f-07ca-471b-9bc5-6a0f33cbd68f",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Disabling local authentication methods improves security by ensuring that Machine Learning Computes require Azure Active Directory identities exclusively for authentication. Learn more at: https://aka.ms/azure-ml-aad-policy.",
          "displayName": "Azure Machine Learning Computes should have local authentication methods disabled",
          "metadata": {
            "category": "Machine Learning",
            "version": "2.0.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.MachineLearningServices/workspaces/computes"
                },
                {
                  "field": "Microsoft.MachineLearningServices/workspaces/computes/disableLocalAuth",
                  "notEquals": true
                }
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "e96a9a5f-07ca-471b-9bc5-6a0f33cbd68f"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f110a506-2dcb-422e-bcea-d533fc8c35e2",
        "Name": "f110a506-2dcb-422e-bcea-d533fc8c35e2",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/f110a506-2dcb-422e-bcea-d533fc8c35e2",
        "Properties": {
          "parameters": {
            "effects": {
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "The effect determines what happens when the policy rule is evaluated to match.",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Ensure Azure Machine Learning compute instances run on the latest available operating system. Security is improved and vulnerabilities reduced by running with the latest security patches. For more information, visit https://aka.ms/azureml-ci-updates/.",
          "displayName": "Azure Machine Learning compute instances should be recreated to get the latest software updates",
          "metadata": {
            "category": "Machine Learning",
            "version": "1.0.3",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effects')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.MachineLearningServices/workspaces/computes"
                },
                {
                  "field": "Microsoft.MachineLearningServices/workspaces/computes/computeType",
                  "equals": "ComputeInstance"
                },
                {
                  "field": "Microsoft.MachineLearningServices/workspaces/computes/osImageMetadata.isLatestOsImageVersion",
                  "equals": "false"
                }
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "f110a506-2dcb-422e-bcea-d533fc8c35e2"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/138ff14d-b687-4faa-a81c-898c91a87fa2",
        "Name": "138ff14d-b687-4faa-a81c-898c91a87fa2",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/138ff14d-b687-4faa-a81c-898c91a87fa2",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            },
            "requiredRetentionDays": {
              "allowedValues": null,
              "defaultValue": "365",
              "metadata": {
                "description": "The required resource logs retention in days if exporting to an Azure Storage account",
                "displayName": "Required retention (days)"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Resource logs enable recreating activity trails to use for investigation purposes when a security incident occurs or when your network is compromised.",
          "displayName": "Resource logs in Azure Databricks Workspaces should be enabled",
          "metadata": {
            "category": "Azure Databricks",
            "version": "1.0.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Insights/diagnosticSettings",
                "existenceCondition": {
                  "count": {
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                    "where": {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                                  "equals": "0"
                                },
                                {
                                  "value": "[padLeft(current('Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days'), 3, '0')]",
                                  "greaterOrEquals": "[padLeft(parameters('requiredRetentionDays'), 3, '0')]"
                                }
                              ]
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                  "notEquals": "true"
                                },
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/storageAccountId",
                                  "exists": false
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "greaterOrEquals": 1
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Databricks/workspaces"
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "138ff14d-b687-4faa-a81c-898c91a87fa2"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0e7849de-b939-4c50-ab48-fc6b0f5eeba2",
        "Name": "0e7849de-b939-4c50-ab48-fc6b0f5eeba2",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0e7849de-b939-4c50-ab48-fc6b0f5eeba2",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "The desired effect of the policy.",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Disabling public network access improves security by ensuring that the resource isn't exposed on the public internet. You can control exposure of your resources by creating private endpoints instead. Learn more at: https://learn.microsoft.com/azure/databricks/administration-guide/cloud-configurations/azure/private-link. ",
          "displayName": "Azure Databricks Workspaces should disable public network access",
          "metadata": {
            "category": "Azure Databricks",
            "version": "1.0.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Databricks/workspaces"
                },
                {
                  "field": "Microsoft.Databricks/workspaces/publicNetworkAccess",
                  "notEquals": "Disabled"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "0e7849de-b939-4c50-ab48-fc6b0f5eeba2"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/51c1490f-3319-459c-bbbc-7f391bbed753",
        "Name": "51c1490f-3319-459c-bbbc-7f391bbed753",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/51c1490f-3319-459c-bbbc-7f391bbed753",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "The desired effect of the policy.",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Disabling public IP of clusters in Azure Databricks Workspaces improves security by ensuring that the clusters aren't exposed on the public internet. Learn more at: https://learn.microsoft.com/azure/databricks/security/secure-cluster-connectivity.",
          "displayName": "Azure Databricks Clusters should disable public IP",
          "metadata": {
            "category": "Azure Databricks",
            "version": "1.0.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Databricks/workspaces"
                },
                {
                  "field": "Microsoft.DataBricks/workspaces/parameters.enableNoPublicIp.value",
                  "notEquals": "true"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "51c1490f-3319-459c-bbbc-7f391bbed753"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9c25c9e4-ee12-4882-afd2-11fb9d87893f",
        "Name": "9c25c9e4-ee12-4882-afd2-11fb9d87893f",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/9c25c9e4-ee12-4882-afd2-11fb9d87893f",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "The effect determines what happens when the policy rule is evaluated to match.",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Azure Virtual Networks provide enhanced security and isolation for your Azure Databricks Workspaces, as well as subnets, access control policies, and other features to further restrict access. Learn more at: https://docs.microsoft.com/azure/databricks/administration-guide/cloud-configurations/azure/vnet-inject.",
          "displayName": "Azure Databricks Workspaces should be in a virtual network",
          "metadata": {
            "category": "Azure Databricks",
            "version": "1.0.2",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Databricks/workspaces"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.Databricks/workspaces/parameters.customPublicSubnetName.value",
                      "exists": "false"
                    },
                    {
                      "field": "Microsoft.Databricks/workspaces/parameters.customPrivateSubnetName.value",
                      "exists": "false"
                    },
                    {
                      "field": "Microsoft.Databricks/workspaces/parameters.customVirtualNetworkId.value",
                      "exists": "false"
                    }
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "9c25c9e4-ee12-4882-afd2-11fb9d87893f"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/258823f2-4595-4b52-b333-cc96192710d8",
        "Name": "258823f2-4595-4b52-b333-cc96192710d8",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/258823f2-4595-4b52-b333-cc96192710d8",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Azure Private Link lets you connect your virtual networks to Azure services without a public IP address at the source or destination. The Private Link platform handles the connectivity between the consumer and services over the Azure backbone network. By mapping private endpoints to Azure Databricks workspaces, you can reduce data leakage risks. Learn more about private links at: https://aka.ms/adbpe.",
          "displayName": "Azure Databricks Workspaces should use private link",
          "metadata": {
            "category": "Azure Databricks",
            "version": "1.0.2",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Databricks/workspaces"
                },
                {
                  "count": {
                    "field": "Microsoft.Databricks/workspaces/privateEndpointConnections[*]",
                    "where": {
                      "field": "Microsoft.Databricks/workspaces/privateEndpointConnections[*].privateLinkServiceConnectionState.status",
                      "equals": "Approved"
                    }
                  },
                  "less": 1
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "258823f2-4595-4b52-b333-cc96192710d8"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c3d20c29-b36d-48fe-808b-99a87530ad99",
        "Name": "c3d20c29-b36d-48fe-808b-99a87530ad99",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/c3d20c29-b36d-48fe-808b-99a87530ad99",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Azure Defender for Resource Manager automatically monitors the resource management operations in your organization. Azure Defender detects threats and alerts you about suspicious activity. Learn more about the capabilities of Azure Defender for Resource Manager at https://aka.ms/defender-for-resource-manager . Enabling this Azure Defender plan results in charges. Learn about the pricing details per region on Security Center's pricing page: https://aka.ms/pricing-security-center .",
          "displayName": "Azure Defender for Resource Manager should be enabled",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/pricings",
                "name": "Arm",
                "existenceCondition": {
                  "field": "Microsoft.Security/pricings/pricingTier",
                  "equals": "Standard"
                },
                "existenceScope": "subscription"
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "c3d20c29-b36d-48fe-808b-99a87530ad99"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/bdc59948-5574-49b3-bb91-76b7c986428d",
        "Name": "bdc59948-5574-49b3-bb91-76b7c986428d",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/bdc59948-5574-49b3-bb91-76b7c986428d",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Azure Defender for DNS provides an additional layer of protection for your cloud resources by continuously monitoring all DNS queries from your Azure resources. Azure Defender alerts you about suspicious activity at the DNS layer. Learn more about the capabilities of Azure Defender for DNS at https://aka.ms/defender-for-dns . Enabling this Azure Defender plan results in charges. Learn about the pricing details per region on Security Center's pricing page: https://aka.ms/pricing-security-center .",
          "displayName": "Azure Defender for DNS should be enabled",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/pricings",
                "name": "Dns",
                "existenceCondition": {
                  "field": "Microsoft.Security/pricings/pricingTier",
                  "equals": "Standard"
                },
                "existenceScope": "subscription"
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "bdc59948-5574-49b3-bb91-76b7c986428d"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9f061a12-e40d-4183-a00e-171812443373",
        "Name": "9f061a12-e40d-4183-a00e-171812443373",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/9f061a12-e40d-4183-a00e-171812443373",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "'Audit' allows a non-compliant resource to be created or updated, but flags it as non-compliant. 'Deny' blocks the non-compliant resource creation or update. 'Disabled' turns off the policy.",
                "displayName": "Effect",
                "portalReview": true
              },
              "schema": null,
              "type": "String"
            },
            "excludedNamespaces": {
              "allowedValues": null,
              "defaultValue": [
                "kube-system",
                "gatekeeper-system",
                "azure-arc",
                "azure-extensions-usage-system"
              ],
              "metadata": {
                "description": "List of Kubernetes namespaces to exclude from policy evaluation. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design. \"azure-extensions-usage-system\" is optional to remove.",
                "displayName": "Namespace exclusions"
              },
              "schema": null,
              "type": "Array"
            },
            "labelSelector": {
              "allowedValues": null,
              "defaultValue": {},
              "metadata": {
                "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources.",
                "displayName": "Kubernetes label selector"
              },
              "schema": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "matchExpressions": {
                    "description": "matchExpressions is a list of values, a key, and an operator.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string",
                          "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                          ]
                        },
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ]
                    },
                    "minItems": 1
                  },
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "minProperties": 1
                  }
                }
              },
              "type": "Object"
            },
            "namespaces": {
              "allowedValues": null,
              "defaultValue": [
                "default"
              ],
              "metadata": {
                "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces.",
                "displayName": "Namespace inclusions"
              },
              "schema": null,
              "type": "Array"
            }
          },
          "description": "Prevent usage of the default namespace in Kubernetes clusters to protect against unauthorized access for ConfigMap, Pod, Secret, Service, and ServiceAccount resource types. For more information, see https://aka.ms/kubepolicydoc.",
          "displayName": "Kubernetes clusters should not use the default namespace",
          "metadata": {
            "category": "Kubernetes",
            "version": "4.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6551Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "excludedNamespaces": "[parameters('excludedNamespaces')]",
                "labelSelector": "[parameters('labelSelector')]",
                "namespaces": "[parameters('namespaces')]",
                "templateInfo": {
                  "sourceType": "PublicURL",
                  "url": "https://store.policy.core.windows.net/kubernetes/block-default-namespace/v1/template.yaml"
                },
                "apiGroups": [
                  ""
                ],
                "kinds": [
                  "Pod",
                  "Service",
                  "ServiceAccount"
                ]
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Kubernetes/connectedClusters",
                "Microsoft.ContainerService/managedClusters"
              ]
            }
          },
          "mode": "Microsoft.Kubernetes.Data"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "9f061a12-e40d-4183-a00e-171812443373"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/423dd1ba-798e-40e4-9c4d-b6902674b423",
        "Name": "423dd1ba-798e-40e4-9c4d-b6902674b423",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/423dd1ba-798e-40e4-9c4d-b6902674b423",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "'Audit' allows a non-compliant resource to be created or updated, but flags it as non-compliant. 'Deny' blocks the non-compliant resource creation or update. 'Disabled' turns off the policy.",
                "displayName": "Effect",
                "portalReview": true
              },
              "schema": null,
              "type": "String"
            },
            "excludedNamespaces": {
              "allowedValues": null,
              "defaultValue": [
                "kube-system",
                "gatekeeper-system",
                "azure-arc",
                "azure-extensions-usage-system"
              ],
              "metadata": {
                "description": "List of Kubernetes namespaces to exclude from policy evaluation. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design. \"azure-extensions-usage-system\" is optional to remove.",
                "displayName": "Namespace exclusions"
              },
              "schema": null,
              "type": "Array"
            },
            "labelSelector": {
              "allowedValues": null,
              "defaultValue": {},
              "metadata": {
                "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources.",
                "displayName": "Kubernetes label selector"
              },
              "schema": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "matchExpressions": {
                    "description": "matchExpressions is a list of values, a key, and an operator.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string",
                          "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                          ]
                        },
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ]
                    },
                    "minItems": 1
                  },
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "minProperties": 1
                  }
                }
              },
              "type": "Object"
            },
            "excludedImages": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identifier is the image of container. Prefix-matching can be signified with `*`. For example: `myregistry.azurecr.io/istio:*`. It is recommended that users use the fully-qualified Docker image name (e.g. start with a domain name) in order to avoid unexpectedly exempting images from an untrusted repository.",
                "displayName": "Image exclusions",
                "portalReview": true
              },
              "schema": null,
              "type": "Array"
            },
            "namespaces": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces.",
                "displayName": "Namespace inclusions"
              },
              "schema": null,
              "type": "Array"
            }
          },
          "description": "Disable automounting API credentials to prevent a potentially compromised Pod resource to run API commands against Kubernetes clusters. For more information, see https://aka.ms/kubepolicydoc.",
          "displayName": "Kubernetes clusters should disable automounting API credentials",
          "metadata": {
            "category": "Kubernetes",
            "version": "4.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6551Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "excludedNamespaces": "[parameters('excludedNamespaces')]",
                "labelSelector": "[parameters('labelSelector')]",
                "namespaces": "[parameters('namespaces')]",
                "templateInfo": {
                  "sourceType": "PublicURL",
                  "url": "https://store.policy.core.windows.net/kubernetes/block-automount-token/v2/template.yaml"
                },
                "values": {
                  "excludedImages": "[parameters('excludedImages')]"
                },
                "apiGroups": [
                  ""
                ],
                "kinds": [
                  "Pod"
                ]
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Kubernetes/connectedClusters",
                "Microsoft.ContainerService/managedClusters"
              ]
            }
          },
          "mode": "Microsoft.Kubernetes.Data"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "423dd1ba-798e-40e4-9c4d-b6902674b423"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/d2e7ea85-6b44-4317-a0be-1b951587f626",
        "Name": "d2e7ea85-6b44-4317-a0be-1b951587f626",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/d2e7ea85-6b44-4317-a0be-1b951587f626",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "audit",
                "Audit",
                "deny",
                "Deny",
                "disabled",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "'Audit' allows a non-compliant resource to be created or updated, but flags it as non-compliant. 'Deny' blocks the non-compliant resource creation or update. 'Disabled' turns off the policy.",
                "displayName": "Effect",
                "portalReview": true
              },
              "schema": null,
              "type": "String"
            },
            "excludedNamespaces": {
              "allowedValues": null,
              "defaultValue": [
                "kube-system",
                "gatekeeper-system",
                "azure-arc",
                "azure-extensions-usage-system"
              ],
              "metadata": {
                "description": "List of Kubernetes namespaces to exclude from policy evaluation. System namespaces \"kube-system\", \"gatekeeper-system\" and \"azure-arc\" are always excluded by design. \"azure-extensions-usage-system\" is optional to remove.",
                "displayName": "Namespace exclusions"
              },
              "schema": null,
              "type": "Array"
            },
            "labelSelector": {
              "allowedValues": null,
              "defaultValue": {},
              "metadata": {
                "description": "Label query to select Kubernetes resources for policy evaluation. An empty label selector matches all Kubernetes resources.",
                "displayName": "Kubernetes label selector"
              },
              "schema": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all resources.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "matchExpressions": {
                    "description": "matchExpressions is a list of values, a key, and an operator.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.",
                          "type": "string",
                          "enum": [
                            "In",
                            "NotIn",
                            "Exists",
                            "DoesNotExist"
                          ]
                        },
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ]
                    },
                    "minItems": 1
                  },
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "minProperties": 1
                  }
                }
              },
              "type": "Object"
            },
            "excludedImages": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identifier is the image of container. Prefix-matching can be signified with `*`. For example: `myregistry.azurecr.io/istio:*`. It is recommended that users use the fully-qualified Docker image name (e.g. start with a domain name) in order to avoid unexpectedly exempting images from an untrusted repository.",
                "displayName": "Image exclusions",
                "portalReview": true
              },
              "schema": null,
              "type": "Array"
            },
            "namespaces": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "List of Kubernetes namespaces to only include in policy evaluation. An empty list means the policy is applied to all resources in all namespaces.",
                "displayName": "Namespace inclusions"
              },
              "schema": null,
              "type": "Array"
            },
            "excludedContainers": {
              "allowedValues": null,
              "defaultValue": [],
              "metadata": {
                "description": "The list of InitContainers and Containers to exclude from policy evaluation. The identify is the name of container. Use an empty list to apply this policy to all containers in all namespaces.",
                "displayName": "Containers exclusions"
              },
              "schema": null,
              "type": "Array"
            }
          },
          "description": "To reduce the attack surface of your containers, restrict CAP_SYS_ADMIN Linux capabilities. For more information, see https://aka.ms/kubepolicydoc.",
          "displayName": "Kubernetes clusters should not grant CAP_SYS_ADMIN security capabilities",
          "metadata": {
            "category": "Kubernetes",
            "version": "5.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6551Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "excludedNamespaces": "[parameters('excludedNamespaces')]",
                "labelSelector": "[parameters('labelSelector')]",
                "namespaces": "[parameters('namespaces')]",
                "templateInfo": {
                  "sourceType": "PublicURL",
                  "url": "https://store.policy.core.windows.net/kubernetes/container-disallowed-capabilities/v3/template.yaml"
                },
                "values": {
                  "excludedImages": "[parameters('excludedImages')]",
                  "excludedContainers": "[parameters('excludedContainers')]",
                  "disallowedCapabilities": [
                    "SYS_ADMIN"
                  ]
                },
                "apiGroups": [
                  ""
                ],
                "kinds": [
                  "Pod"
                ]
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Kubernetes/connectedClusters",
                "Microsoft.ContainerService/managedClusters"
              ]
            }
          },
          "mode": "Microsoft.Kubernetes.Data"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "d2e7ea85-6b44-4317-a0be-1b951587f626"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1c30f9cd-b84c-49cc-aa2c-9288447cc3b3",
        "Name": "1c30f9cd-b84c-49cc-aa2c-9288447cc3b3",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/1c30f9cd-b84c-49cc-aa2c-9288447cc3b3",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Enable virtual TPM device on supported virtual machines to facilitate Measured Boot and other OS security features that require a TPM. Once enabled, vTPM can be used to attest boot integrity. This assessment only applies to trusted launch enabled virtual machines.",
          "displayName": "[Preview]: vTPM should be enabled on supported virtual machines",
          "metadata": {
            "category": "Security Center",
            "version": "2.0.0-preview",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z",
            "preview": true
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachines"
                },
                {
                  "field": "Microsoft.Compute/virtualMachines/securityProfile.securityType",
                  "equals": "TrustedLaunch"
                },
                {
                  "field": "Microsoft.Compute/virtualMachines/securityProfile.uefiSettings",
                  "exists": "true"
                },
                {
                  "field": "Microsoft.Compute/virtualMachines/securityProfile.uefiSettings.vTpmEnabled",
                  "notequals": "true"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "1c30f9cd-b84c-49cc-aa2c-9288447cc3b3"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/97566dd7-78ae-4997-8b36-1c7bfe0d8121",
        "Name": "97566dd7-78ae-4997-8b36-1c7bfe0d8121",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/97566dd7-78ae-4997-8b36-1c7bfe0d8121",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Enable Secure Boot on supported Windows virtual machines to mitigate against malicious and unauthorized changes to the boot chain. Once enabled, only trusted bootloaders, kernel and kernel drivers will be allowed to run. This assessment applies to Trusted Launch and Confidential Windows virtual machines.",
          "displayName": "[Preview]: Secure Boot should be enabled on supported Windows virtual machines",
          "metadata": {
            "category": "Security Center",
            "version": "4.0.0-preview",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z",
            "preview": true
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachines"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.Compute/virtualMachines/storageProfile.imageReference.offer",
                      "like": "windows*"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                      "like": "Windows*"
                    }
                  ]
                },
                {
                  "field": "Microsoft.Compute/virtualMachines/securityProfile.securityType",
                  "in": [
                    "TrustedLaunch",
                    "ConfidentialVM"
                  ]
                },
                {
                  "field": "Microsoft.Compute/virtualMachines/securityProfile.uefiSettings",
                  "exists": "true"
                },
                {
                  "field": "Microsoft.Compute/virtualMachines/securityProfile.uefiSettings.secureBootEnabled",
                  "notequals": "true"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "97566dd7-78ae-4997-8b36-1c7bfe0d8121"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/672fe5a1-2fcd-42d7-b85d-902b6e28c6ff",
        "Name": "672fe5a1-2fcd-42d7-b85d-902b6e28c6ff",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/672fe5a1-2fcd-42d7-b85d-902b6e28c6ff",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Install Guest Attestation extension on supported Linux virtual machines to allow Azure Security Center to proactively attest and monitor the boot integrity. Once installed, boot integrity will be attested via Remote Attestation. This assessment applies to Trusted Launch and Confidential Linux virtual machines.",
          "displayName": "[Preview]: Guest Attestation extension should be installed on supported Linux virtual machines",
          "metadata": {
            "category": "Security Center",
            "version": "6.0.0-preview",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z",
            "preview": true
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Compute/virtualMachines/extensions",
                "existenceCondition": {
                  "allOf": [
                    {
                      "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                      "equals": "Microsoft.Azure.Security.LinuxAttestation"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/extensions/type",
                      "equals": "GuestAttestation"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/extensions/provisioningState",
                      "in": [
                        "Succeeded",
                        "Provisioning succeeded"
                      ]
                    }
                  ]
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachines"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                      "like": "Linux*"
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "Canonical"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "UbuntuServer"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "like": "18_04-lts-gen2"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "Canonical"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "0001-com-ubuntu-server-focal"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "like": "20_04-lts-gen2"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "Canonical"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "0001-com-ubuntu-confidential-vm-focal"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "like": "20_04-lts-cvm"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "RedHat"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "RHEL"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "like": "83-gen2"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "SUSE"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "SLES-15-SP2"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "like": "gen2"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "OpenLogic"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "CENTOS"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "equals": "8_3-gen2"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "Oracle"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "Oracle-Linux"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "equals": "ol83-lvm-gen2"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "microsoftcblmariner"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "cbl-mariner"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "equals": "1-gen2"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "debian"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "debian-11"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "equals": "11-gen2"
                        }
                      ]
                    }
                  ]
                },
                {
                  "field": "Microsoft.Compute/virtualMachines/securityProfile.securityType",
                  "in": [
                    "TrustedLaunch",
                    "ConfidentialVM"
                  ]
                },
                {
                  "field": "Microsoft.Compute/virtualMachines/securityProfile.uefiSettings",
                  "exists": "true"
                },
                {
                  "field": "Microsoft.Compute/virtualMachines/securityProfile.uefiSettings.secureBootEnabled",
                  "equals": "true"
                },
                {
                  "field": "Microsoft.Compute/virtualMachines/securityProfile.uefiSettings.vTpmEnabled",
                  "equals": "true"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "672fe5a1-2fcd-42d7-b85d-902b6e28c6ff"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a21f8c92-9e22-4f09-b759-50500d1d2dda",
        "Name": "a21f8c92-9e22-4f09-b759-50500d1d2dda",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/a21f8c92-9e22-4f09-b759-50500d1d2dda",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Install Guest Attestation extension on supported Linux virtual machines scale sets to allow Azure Security Center to proactively attest and monitor the boot integrity. Once installed, boot integrity will be attested via Remote Attestation.  This assessment applies to Trusted Launch and Confidential Linux virtual machine scale sets.",
          "displayName": "[Preview]: Guest Attestation extension should be installed on supported Linux virtual machines scale sets",
          "metadata": {
            "category": "Security Center",
            "version": "5.1.0-preview",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z",
            "preview": true
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Compute/virtualMachineScaleSets/extensions",
                "existenceCondition": {
                  "allOf": [
                    {
                      "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/publisher",
                      "equals": "Microsoft.Azure.Security.LinuxAttestation"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/type",
                      "equals": "GuestAttestation"
                    }
                  ]
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachineScaleSets"
                },
                {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "Canonical"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "UbuntuServer"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "like": "18_04-lts-gen2"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "Canonical"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "0001-com-ubuntu-server-focal"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "like": "20_04-lts-gen2"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "Canonical"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "0001-com-ubuntu-confidential-vm-focal"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "like": "20_04-lts-cvm"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "RedHat"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "RHEL"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "like": "83-gen2"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "SUSE"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "SLES-15-SP2"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "like": "gen2"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "OpenLogic"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "CENTOS"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "equals": "8_3-gen2"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "Oracle"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "Oracle-Linux"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "equals": "ol83-lvm-gen2"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "microsoftcblmariner"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "cbl-mariner"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "equals": "1-gen2"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "debian"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "debian-11"
                        },
                        {
                          "field": "Microsoft.Compute/imageSku",
                          "equals": "11-gen2"
                        }
                      ]
                    }
                  ]
                },
                {
                  "field": "Microsoft.Compute/virtualMachineScaleSets/virtualMachineProfile.securityProfile.securityType",
                  "in": [
                    "TrustedLaunch",
                    "ConfidentialVM"
                  ]
                },
                {
                  "field": "Microsoft.Compute/virtualMachineScaleSets/virtualMachineProfile.securityProfile.uefiSettings",
                  "exists": "true"
                },
                {
                  "field": "Microsoft.Compute/virtualMachineScaleSets/virtualMachineProfile.securityProfile.uefiSettings.vTpmEnabled",
                  "equals": "true"
                },
                {
                  "field": "Microsoft.Compute/virtualMachineScaleSets/virtualMachineProfile.securityProfile.uefiSettings.secureBootEnabled",
                  "equals": "true"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "a21f8c92-9e22-4f09-b759-50500d1d2dda"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1cb4d9c2-f88f-4069-bee0-dba239a57b09",
        "Name": "1cb4d9c2-f88f-4069-bee0-dba239a57b09",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/1cb4d9c2-f88f-4069-bee0-dba239a57b09",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Install Guest Attestation extension on supported virtual machines to allow Azure Security Center to proactively attest and monitor the boot integrity. Once installed, boot integrity will be attested via Remote Attestation. This assessment applies to Trusted Launch and Confidential Windows virtual machines.",
          "displayName": "[Preview]: Guest Attestation extension should be installed on supported Windows virtual machines",
          "metadata": {
            "category": "Security Center",
            "version": "4.0.0-preview",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z",
            "preview": true
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Compute/virtualMachines/extensions",
                "existenceCondition": {
                  "allOf": [
                    {
                      "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                      "equals": "Microsoft.Azure.Security.WindowsAttestation"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/extensions/type",
                      "equals": "GuestAttestation"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/extensions/provisioningState",
                      "in": [
                        "Succeeded",
                        "Provisioning succeeded"
                      ]
                    }
                  ]
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachines"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.Compute/virtualMachines/storageProfile.imageReference.offer",
                      "like": "windows*"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                      "like": "Windows*"
                    }
                  ]
                },
                {
                  "field": "Microsoft.Compute/virtualMachines/securityProfile.securityType",
                  "in": [
                    "TrustedLaunch",
                    "ConfidentialVM"
                  ]
                },
                {
                  "field": "Microsoft.Compute/virtualMachines/securityProfile.uefiSettings",
                  "exists": "true"
                },
                {
                  "field": "Microsoft.Compute/virtualMachines/securityProfile.uefiSettings.secureBootEnabled",
                  "equals": "true"
                },
                {
                  "field": "Microsoft.Compute/virtualMachines/securityProfile.uefiSettings.vTpmEnabled",
                  "equals": "true"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "1cb4d9c2-f88f-4069-bee0-dba239a57b09"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f655e522-adff-494d-95c2-52d4f6d56a42",
        "Name": "f655e522-adff-494d-95c2-52d4f6d56a42",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/f655e522-adff-494d-95c2-52d4f6d56a42",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Install Guest Attestation extension on supported virtual machines scale sets to allow Azure Security Center to proactively attest and monitor the boot integrity. Once installed, boot integrity will be attested via Remote Attestation. This assessment applies to Trusted Launch and Confidential Windows virtual machine scale sets.",
          "displayName": "[Preview]: Guest Attestation extension should be installed on supported Windows virtual machines scale sets",
          "metadata": {
            "category": "Security Center",
            "version": "3.1.0-preview",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z",
            "preview": true
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Compute/virtualMachineScaleSets/extensions",
                "existenceCondition": {
                  "allOf": [
                    {
                      "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/publisher",
                      "equals": "Microsoft.Azure.Security.WindowsAttestation"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachineScaleSets/extensions/type",
                      "equals": "GuestAttestation"
                    }
                  ]
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachineScaleSets"
                },
                {
                  "field": "Microsoft.Compute/virtualMachineScaleSets/virtualMachineProfile.storageProfile.imageReference.offer",
                  "like": "windows*"
                },
                {
                  "field": "Microsoft.Compute/virtualMachineScaleSets/virtualMachineProfile.securityProfile.securityType",
                  "in": [
                    "TrustedLaunch",
                    "ConfidentialVM"
                  ]
                },
                {
                  "field": "Microsoft.Compute/virtualMachineScaleSets/virtualMachineProfile.securityProfile.uefiSettings",
                  "exists": "true"
                },
                {
                  "field": "Microsoft.Compute/virtualMachineScaleSets/virtualMachineProfile.securityProfile.uefiSettings.vTpmEnabled",
                  "equals": "true"
                },
                {
                  "field": "Microsoft.Compute/virtualMachineScaleSets/virtualMachineProfile.securityProfile.uefiSettings.secureBootEnabled",
                  "equals": "true"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "f655e522-adff-494d-95c2-52d4f6d56a42"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/13a6c84f-49a5-410a-b5df-5b880c3fe009",
        "Name": "13a6c84f-49a5-410a-b5df-5b880c3fe009",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/13a6c84f-49a5-410a-b5df-5b880c3fe009",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "All OS boot components (boot loader, kernel, kernel drivers) must be signed by trusted publishers. Defender for Cloud has identified untrusted OS boot components on one or more of your Linux machines. To protect your machines from potentially malicious components, add them to your allow list or remove the identified components.",
          "displayName": "[Preview]: Linux virtual machines should use only signed and trusted boot components",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.0-preview",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z",
            "preview": true
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "ad50b498-f90c-451f-886f-d0a169cc5002",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachines"
                },
                {
                  "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                  "like": "Linux*"
                }
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "13a6c84f-49a5-410a-b5df-5b880c3fe009"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1f7c564c-0a90-4d44-b7e1-9d456cffaee8",
        "Name": "1f7c564c-0a90-4d44-b7e1-9d456cffaee8",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/1f7c564c-0a90-4d44-b7e1-9d456cffaee8",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "To protect your machines from threats and vulnerabilities, install a supported endpoint protection solution.",
          "displayName": "Endpoint protection should be installed on your machines",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "4fb67663-9ab9-475d-b026-8c544cced439",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "in": [
                    "Microsoft.Compute/virtualMachines",
                    "Microsoft.ClassicCompute/virtualMachines",
                    "Microsoft.HybridCompute/machines"
                  ]
                }
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "1f7c564c-0a90-4d44-b7e1-9d456cffaee8"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/8e42c1f2-a2ab-49bc-994a-12bcd0dc4ac2",
        "Name": "8e42c1f2-a2ab-49bc-994a-12bcd0dc4ac2",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/8e42c1f2-a2ab-49bc-994a-12bcd0dc4ac2",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Resolve endpoint protection health issues on your virtual machines to protect them from latest threats and vulnerabilities. Azure Security Center supported endpoint protection solutions are documented here - https://docs.microsoft.com/azure/security-center/security-center-services?tabs=features-windows#supported-endpoint-protection-solutions. Endpoint protection assessment is documented here - https://docs.microsoft.com/azure/security-center/security-center-endpoint-protection.",
          "displayName": "Endpoint protection health issues should be resolved on your machines",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "37a3689a-818e-4a0e-82ac-b1392b9bb000",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "in": [
                    "Microsoft.Compute/virtualMachines",
                    "Microsoft.ClassicCompute/virtualMachines",
                    "Microsoft.HybridCompute/machines"
                  ]
                }
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "8e42c1f2-a2ab-49bc-994a-12bcd0dc4ac2"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/245fc9df-fa96-4414-9a0b-3738c2f7341c",
        "Name": "245fc9df-fa96-4414-9a0b-3738c2f7341c",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/245fc9df-fa96-4414-9a0b-3738c2f7341c",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            },
            "requiredRetentionDays": {
              "allowedValues": null,
              "defaultValue": "365",
              "metadata": {
                "description": "The required resource logs retention (in days)",
                "displayName": "Required retention (days)"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Azure Kubernetes Service's resource logs can help recreate activity trails when investigating security incidents. Enable it to make sure the logs will exist when needed",
          "displayName": "Resource logs in Azure Kubernetes Service should be enabled",
          "metadata": {
            "category": "Kubernetes",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Insights/diagnosticSettings",
                "existenceCondition": {
                  "count": {
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                    "where": {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                                  "equals": "0"
                                },
                                {
                                  "value": "[padLeft(current('Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days'), 3, '0')]",
                                  "greaterOrEquals": "[padLeft(parameters('requiredRetentionDays'), 3, '0')]"
                                }
                              ]
                            },
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                              "equals": "true"
                            },
                            {
                              "anyOf": [
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                                  "notEquals": "true"
                                },
                                {
                                  "field": "Microsoft.Insights/diagnosticSettings/storageAccountId",
                                  "exists": false
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "greaterOrEquals": 1
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.ContainerService/managedClusters"
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "245fc9df-fa96-4414-9a0b-3738c2f7341c"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0a9fbe0d-c5c4-4da8-87d8-f4fd77338835",
        "Name": "0a9fbe0d-c5c4-4da8-87d8-f4fd77338835",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/0a9fbe0d-c5c4-4da8-87d8-f4fd77338835",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Azure Defender for open-source relational databases detects anomalous activities indicating unusual and potentially harmful attempts to access or exploit databases. Learn more about the capabilities of Azure Defender for open-source relational databases at https://aka.ms/AzDforOpenSourceDBsDocu. Important: Enabling this plan will result in charges for protecting your open-source relational databases. Learn about the pricing on Security Center's pricing page: https://aka.ms/pricing-security-center",
          "displayName": "Azure Defender for open-source relational databases should be enabled",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/pricings",
                "name": "OpenSourceRelationalDatabases",
                "existenceCondition": {
                  "field": "Microsoft.Security/pricings/pricingTier",
                  "equals": "Standard"
                },
                "existenceScope": "subscription"
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "0a9fbe0d-c5c4-4da8-87d8-f4fd77338835"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1f90fc71-a595-4066-8974-d4d0802e8ef0",
        "Name": "1f90fc71-a595-4066-8974-d4d0802e8ef0",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/1f90fc71-a595-4066-8974-d4d0802e8ef0",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Defender Cloud Security Posture Management (CSPM) provides enhanced posture capabilities and a new intelligent cloud security graph to help identify, prioritize, and reduce risk. Defender CSPM is available in addition to the free foundational security posture capabilities turned on by default in Defender for Cloud.",
          "displayName": "Microsoft Defender CSPM should be enabled",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/pricings",
                "name": "CloudPosture",
                "existenceCondition": {
                  "field": "Microsoft.Security/pricings/pricingTier",
                  "equals": "Standard"
                },
                "existenceScope": "subscription"
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "1f90fc71-a595-4066-8974-d4d0802e8ef0"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ca88aadc-6e2b-416c-9de2-5a0f01d1693f",
        "Name": "ca88aadc-6e2b-416c-9de2-5a0f01d1693f",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/ca88aadc-6e2b-416c-9de2-5a0f01d1693f",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of this policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "By default, a virtual machine's OS and data disks are encrypted-at-rest using platform-managed keys; temp disks and data caches aren't encrypted, and data isn't encrypted when flowing between compute and storage resources. Use Azure Disk Encryption or EncryptionAtHost to encrypt all this data.Visit https://aka.ms/diskencryptioncomparison to compare encryption offerings. This policy requires two prerequisites to be deployed to the policy assignment scope. For details, visit https://aka.ms/gcpol.",
          "displayName": "[Preview]: Linux virtual machines should enable Azure Disk Encryption or EncryptionAtHost.",
          "metadata": {
            "category": "Guest Configuration",
            "version": "1.1.0-preview",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z",
            "guestConfiguration": {
              "version": "1.*",
              "name": "AzureLinuxVMEncryptionCompliance"
            },
            "requiredProviders": [
              "Microsoft.GuestConfiguration"
            ],
            "preview": true
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                "name": "AzureLinuxVMEncryptionCompliance",
                "existenceCondition": {
                  "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                  "equals": "Compliant"
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachines"
                },
                {
                  "allOf": [
                    {
                      "field": "Microsoft.Compute/virtualMachines/securityProfile.securityType",
                      "notEquals": "ConfidentialVM"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/additionalCapabilities.ultraSSDEnabled",
                      "notEquals": "true"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/sku.name",
                      "notIn": [
                        "standard_a0",
                        "standard_a1",
                        "basic_a0",
                        "basic_a1",
                        "basic_a2",
                        "basic_a3",
                        "basic_a4"
                      ]
                    },
                    {
                      "field": "Microsoft.Compute/imagePublisher",
                      "notIn": [
                        "microsoft-aks",
                        "AzureDatabricks"
                      ]
                    },
                    {
                      "field": "Microsoft.Compute/imageSKU",
                      "notLike": "aks*"
                    }
                  ]
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.Compute/imagePublisher",
                      "in": [
                        "qubole-inc",
                        "datastax",
                        "couchbase",
                        "scalegrid",
                        "checkpoint",
                        "paloaltonetworks",
                        "debian",
                        "credativ"
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "OpenLogic"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "notLike": "6*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "Oracle"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "notLike": "6*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "RedHat"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "notLike": "6*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "center-for-internet-security-inc"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "notLike": "cis-windows*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "Suse"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "notLike": "11*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "Canonical"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "notLike": "12*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "microsoft-dsvm"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "notLike": "dsvm-win*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "cloudera"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "notLike": "6*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "microsoft-ads"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "like": "linux*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/virtualMachines/osProfile.linuxConfiguration",
                              "exists": "true"
                            },
                            {
                              "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                              "like": "Linux*"
                            }
                          ]
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "exists": "false"
                            },
                            {
                              "field": "Microsoft.Compute/imagePublisher",
                              "notIn": [
                                "OpenLogic",
                                "RedHat",
                                "credativ",
                                "Suse",
                                "Canonical",
                                "microsoft-dsvm",
                                "cloudera",
                                "microsoft-ads",
                                "center-for-internet-security-inc",
                                "Oracle",
                                "azureopenshift"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "ca88aadc-6e2b-416c-9de2-5a0f01d1693f"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/3dc5edcd-002d-444c-b216-e123bbfa37c0",
        "Name": "3dc5edcd-002d-444c-b216-e123bbfa37c0",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/3dc5edcd-002d-444c-b216-e123bbfa37c0",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of this policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "By default, a virtual machine's OS and data disks are encrypted-at-rest using platform-managed keys; temp disks and data caches aren't encrypted, and data isn't encrypted when flowing between compute and storage resources. Use Azure Disk Encryption or EncryptionAtHost to encrypt all this data.Visit https://aka.ms/diskencryptioncomparison to compare encryption offerings. This policy requires two prerequisites to be deployed to the policy assignment scope. For details, visit https://aka.ms/gcpol.",
          "displayName": "[Preview]: Windows virtual machines should enable Azure Disk Encryption or EncryptionAtHost.",
          "metadata": {
            "category": "Guest Configuration",
            "version": "1.1.0-preview",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z",
            "guestConfiguration": {
              "version": "1.*",
              "name": "AzureWindowsVMEncryptionCompliance"
            },
            "requiredProviders": [
              "Microsoft.GuestConfiguration"
            ],
            "preview": true
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.GuestConfiguration/guestConfigurationAssignments",
                "name": "AzureWindowsVMEncryptionCompliance",
                "existenceCondition": {
                  "field": "Microsoft.GuestConfiguration/guestConfigurationAssignments/complianceStatus",
                  "equals": "Compliant"
                }
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachines"
                },
                {
                  "allOf": [
                    {
                      "field": "Microsoft.Compute/virtualMachines/securityProfile.securityType",
                      "notEquals": "ConfidentialVM"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/additionalCapabilities.ultraSSDEnabled",
                      "notEquals": "true"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/sku.name",
                      "notIn": [
                        "standard_a0",
                        "standard_a1",
                        "basic_a0",
                        "basic_a1",
                        "basic_a2",
                        "basic_a3",
                        "basic_a4"
                      ]
                    },
                    {
                      "field": "Microsoft.Compute/imagePublisher",
                      "notIn": [
                        "microsoft-aks",
                        "AzureDatabricks"
                      ]
                    },
                    {
                      "field": "Microsoft.Compute/imageSKU",
                      "notLike": "aks*"
                    }
                  ]
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.Compute/imagePublisher",
                      "in": [
                        "esri",
                        "incredibuild",
                        "MicrosoftDynamicsAX",
                        "MicrosoftSharepoint",
                        "MicrosoftVisualStudio",
                        "MicrosoftWindowsDesktop",
                        "MicrosoftWindowsServerHPCPack"
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "MicrosoftWindowsServer"
                        },
                        {
                          "field": "Microsoft.Compute/imageSKU",
                          "notLike": "2008*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "MicrosoftSQLServer"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "notLike": "SQL2008*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "microsoft-dsvm"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "like": "dsvm-win*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "microsoft-ads"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "in": [
                            "standard-data-science-vm",
                            "windows-data-science-vm"
                          ]
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "batch"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "equals": "rendering-windows2016"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "center-for-internet-security-inc"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "like": "cis-windows-server-201*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "pivotal"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "like": "bosh-windows-server*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Compute/imagePublisher",
                          "equals": "cloud-infrastructure-services"
                        },
                        {
                          "field": "Microsoft.Compute/imageOffer",
                          "like": "ad*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration",
                              "exists": "true"
                            },
                            {
                              "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                              "like": "Windows*"
                            }
                          ]
                        },
                        {
                          "anyOf": [
                            {
                              "field": "Microsoft.Compute/imageSKU",
                              "exists": "false"
                            },
                            {
                              "allOf": [
                                {
                                  "field": "Microsoft.Compute/imageSKU",
                                  "notLike": "2008*"
                                },
                                {
                                  "field": "Microsoft.Compute/imageOffer",
                                  "notLike": "SQL2008*"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "3dc5edcd-002d-444c-b216-e123bbfa37c0"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/abda6d70-9778-44e7-84a8-06713e6db027",
        "Name": "abda6d70-9778-44e7-84a8-06713e6db027",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/abda6d70-9778-44e7-84a8-06713e6db027",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Disabling local authentication methods and allowing only Microsoft Entra authentication improves security by ensuring that Azure SQL Databases can exclusively be accessed by Microsoft Entra identities. Learn more at: aka.ms/adonlycreate.",
          "displayName": "Azure SQL Database should have Microsoft Entra-only authentication enabled",
          "metadata": {
            "category": "SQL",
            "version": "1.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "anyOf": [
                {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Sql/servers"
                    },
                    {
                      "value": "[resourcegroup().managedBy]",
                      "notContains": "/providers/Microsoft.Synapse/"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Sql/servers/administrators.azureADOnlyAuthentication",
                          "exists": false
                        },
                        {
                          "field": "Microsoft.Sql/servers/administrators.azureADOnlyAuthentication",
                          "equals": "false"
                        }
                      ]
                    }
                  ]
                },
                {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Sql/servers/azureADOnlyAuthentications"
                    },
                    {
                      "value": "[resourcegroup().managedBy]",
                      "notContains": "/providers/Microsoft.Synapse/"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Sql/servers/azureADOnlyAuthentications/azureADOnlyAuthentication",
                          "exists": false
                        },
                        {
                          "field": "Microsoft.Sql/servers/azureADOnlyAuthentications/azureADOnlyAuthentication",
                          "equals": "false"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "abda6d70-9778-44e7-84a8-06713e6db027"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/146412e9-005c-472b-9e48-c87b72ac229e",
        "Name": "146412e9-005c-472b-9e48-c87b72ac229e",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/146412e9-005c-472b-9e48-c87b72ac229e",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Audit provisioning of an Azure Active Directory administrator for your MySQL server to enable Azure AD authentication. Azure AD authentication enables simplified permission management and centralized identity management of database users and other Microsoft services",
          "displayName": "An Azure Active Directory administrator should be provisioned for MySQL servers",
          "metadata": {
            "category": "SQL",
            "version": "1.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.DBforMySQL/servers/administrators"
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.DBforMySQL/servers"
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "146412e9-005c-472b-9e48-c87b72ac229e"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b4dec045-250a-48c2-b5cc-e0c4eec8b5b4",
        "Name": "b4dec045-250a-48c2-b5cc-e0c4eec8b5b4",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/b4dec045-250a-48c2-b5cc-e0c4eec8b5b4",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Audit provisioning of an Azure Active Directory administrator for your PostgreSQL server to enable Azure AD authentication. Azure AD authentication enables simplified permission management and centralized identity management of database users and other Microsoft services",
          "displayName": "An Azure Active Directory administrator should be provisioned for PostgreSQL servers",
          "metadata": {
            "category": "SQL",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.DBforPostgreSQL/servers/administrators"
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.DBforPostgreSQL/servers"
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "b4dec045-250a-48c2-b5cc-e0c4eec8b5b4"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/78215662-041e-49ed-a9dd-5385911b3a1f",
        "Name": "78215662-041e-49ed-a9dd-5385911b3a1f",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/78215662-041e-49ed-a9dd-5385911b3a1f",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Disabling local authentication methods and allowing only Microsoft Entra authentication improves security by ensuring that Azure SQL Managed Instances can exclusively be accessed by Microsoft Entra identities. Learn more at: aka.ms/adonlycreate.",
          "displayName": "Azure SQL Managed Instance should have Microsoft Entra-only authentication enabled",
          "metadata": {
            "category": "SQL",
            "version": "1.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "anyOf": [
                {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Sql/managedInstances"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Sql/managedInstances/administrators.azureADOnlyAuthentication",
                          "exists": false
                        },
                        {
                          "field": "Microsoft.Sql/managedInstances/administrators.azureADOnlyAuthentication",
                          "equals": "false"
                        }
                      ]
                    }
                  ]
                },
                {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Sql/managedInstances/azureADOnlyAuthentications"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Sql/managedInstances/azureADOnlyAuthentications/azureADOnlyAuthentication",
                          "exists": false
                        },
                        {
                          "field": "Microsoft.Sql/managedInstances/azureADOnlyAuthentications/azureADOnlyAuthentication",
                          "equals": "false"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "78215662-041e-49ed-a9dd-5385911b3a1f"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2158ddbe-fefa-408e-b43f-d4faef8ff3b8",
        "Name": "2158ddbe-fefa-408e-b43f-d4faef8ff3b8",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/2158ddbe-fefa-408e-b43f-d4faef8ff3b8",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Microsoft Entra-only authentication improves security by ensuring that Synapse Workspaces exclusively require Microsoft Entra identities for authentication. Learn more at: https://aka.ms/Synapse.",
          "displayName": "Synapse Workspaces should use only Microsoft Entra identities for authentication",
          "metadata": {
            "category": "Synapse",
            "version": "1.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "anyOf": [
                {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Synapse/workspaces"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Synapse/workspaces/extraProperties",
                          "exists": false
                        },
                        {
                          "value": "[if(empty(field('Microsoft.Synapse/workspaces/extraProperties')), 0, length(intersection(field('Microsoft.Synapse/workspaces/extraProperties'), createObject('WorkspaceType', 'Normal'))))]",
                          "equals": 1
                        }
                      ]
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Synapse/workspaces/azureADOnlyAuthentication",
                          "exists": "false"
                        },
                        {
                          "value": "[field('Microsoft.Synapse/workspaces/azureADOnlyAuthentication')]",
                          "notEquals": "true"
                        },
                        {
                          "allOf": [
                            {
                              "field": "Microsoft.Synapse/workspaces/settings",
                              "exists": "true"
                            },
                            {
                              "value": "[if(empty(field('Microsoft.Synapse/workspaces/settings')), 0, length(intersection(field('Microsoft.Synapse/workspaces/settings'), createObject('azureADOnlyAuthentication', createObject('value', 'true', 'state', 'Inconsistent')))))]",
                              "equals": 1
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Synapse/workspaces/azureADOnlyAuthentications"
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Synapse/workspaces/azureADOnlyAuthentications/azureADOnlyAuthentication",
                          "exists": "false"
                        },
                        {
                          "value": "[field('Microsoft.Synapse/workspaces/azureADOnlyAuthentications/azureADOnlyAuthentication')]",
                          "notEquals": "true"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "mode": "indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "2158ddbe-fefa-408e-b43f-d4faef8ff3b8"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/3aa03346-d8c5-4994-a5bc-7652c2a2aef1",
        "Name": "3aa03346-d8c5-4994-a5bc-7652c2a2aef1",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/3aa03346-d8c5-4994-a5bc-7652c2a2aef1",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled",
                "Deny"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "API Management subscriptions should be scoped to a product or an individual API instead of all APIs, which could result in an excessive data exposure.",
          "displayName": "API Management subscriptions should not be scoped to all APIs",
          "metadata": {
            "category": "API Management",
            "version": "1.1.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.ApiManagement/service/subscriptions"
                },
                {
                  "field": "Microsoft.ApiManagement/service/subscriptions/scope",
                  "like": "*/apis"
                },
                {
                  "field": "Microsoft.ApiManagement/service/subscriptions/state",
                  "equals": "active"
                }
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "3aa03346-d8c5-4994-a5bc-7652c2a2aef1"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/92bb331d-ac71-416a-8c91-02f2cb734ce4",
        "Name": "92bb331d-ac71-416a-8c91-02f2cb734ce4",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/92bb331d-ac71-416a-8c91-02f2cb734ce4",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled",
                "Deny"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "To improve the API security, API Management should validate the backend server certificate for all API calls. Enable SSL certificate thumbprint and name validation.",
          "displayName": "API Management calls to API backends should not bypass certificate thumbprint or name validation",
          "metadata": {
            "category": "API Management",
            "version": "1.0.2",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.ApiManagement/service/backends"
                },
                {
                  "anyof": [
                    {
                      "field": "Microsoft.ApiManagement/service/backends/tls.validateCertificateChain",
                      "equals": false
                    },
                    {
                      "field": "Microsoft.ApiManagement/service/backends/tls.validateCertificateName",
                      "equals": false
                    }
                  ]
                }
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "92bb331d-ac71-416a-8c91-02f2cb734ce4"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ee7495e7-3ba7-40b6-bfee-c29e22cc75d4",
        "Name": "ee7495e7-3ba7-40b6-bfee-c29e22cc75d4",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/ee7495e7-3ba7-40b6-bfee-c29e22cc75d4",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled",
                "Deny"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "To ensure security of data in transit, APIs should be available only through encrypted protocols, like HTTPS or WSS. Avoid using unsecured protocols, such as HTTP or WS.",
          "displayName": "API Management APIs should use only encrypted protocols",
          "metadata": {
            "category": "API Management",
            "version": "2.0.2",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.ApiManagement/service/apis"
                },
                {
                  "count": {
                    "field": "Microsoft.ApiManagement/service/apis/protocols[*]",
                    "where": {
                      "anyOf": [
                        {
                          "field": "Microsoft.ApiManagement/service/apis/protocols[*]",
                          "equals": "http"
                        },
                        {
                          "field": "Microsoft.ApiManagement/service/apis/protocols[*]",
                          "equals": "ws"
                        }
                      ]
                    }
                  },
                  "greaterOrEquals": 1
                }
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "ee7495e7-3ba7-40b6-bfee-c29e22cc75d4"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f1cc7827-022c-473e-836e-5a51cae0b249",
        "Name": "f1cc7827-022c-473e-836e-5a51cae0b249",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/f1cc7827-022c-473e-836e-5a51cae0b249",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled",
                "Deny"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Named values are a collection of name and value pairs in each API Management service. Secret values can be stored either as encrypted text in API Management (custom secrets) or by referencing secrets in Azure Key Vault. To improve security of API Management and secrets, reference secret named values from Azure Key Vault. Azure Key Vault supports granular access management and secret rotation policies.",
          "displayName": "API Management secret named values should be stored in Azure Key Vault",
          "metadata": {
            "category": "API Management",
            "version": "1.0.2",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.ApiManagement/service/namedValues"
                },
                {
                  "field": "Microsoft.ApiManagement/service/namedValues/displayName",
                  "exists": "true"
                },
                {
                  "field": "Microsoft.ApiManagement/service/namedValues/secret",
                  "equals": "true"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.ApiManagement/service/namedValues/keyVault",
                      "exists": "false"
                    },
                    {
                      "field": "Microsoft.ApiManagement/service/namedValues/keyVault.secretIdentifier",
                      "exists": "false"
                    }
                  ]
                }
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "f1cc7827-022c-473e-836e-5a51cae0b249"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/b741306c-968e-4b67-b916-5675e5c709f4",
        "Name": "b741306c-968e-4b67-b916-5675e5c709f4",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/b741306c-968e-4b67-b916-5675e5c709f4",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled",
                "Deny"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "The direct management REST API in Azure API Management bypasses Azure Resource Manager role-based access control, authorization, and throttling mechanisms, thus increasing the vulnerability of your service.",
          "displayName": "API Management direct management endpoint should not be enabled",
          "metadata": {
            "category": "API Management",
            "version": "1.0.2",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.ApiManagement/service/tenant"
                },
                {
                  "field": "Microsoft.ApiManagement/service/tenant/enabled",
                  "equals": true
                }
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "b741306c-968e-4b67-b916-5675e5c709f4"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/df73bd95-24da-4a4f-96b9-4e8b94b402bd",
        "Name": "df73bd95-24da-4a4f-96b9-4e8b94b402bd",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/df73bd95-24da-4a4f-96b9-4e8b94b402bd",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            },
            "endpointType": {
              "allowedValues": [
                "Management",
                "Git",
                "Gateway Configuration"
              ],
              "defaultValue": "Management",
              "metadata": {
                "description": "Public Endpoint Type for which to enforce the access check",
                "displayName": "Public Endpoint Type"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "To improve the security of API Management services, restrict connectivity to service configuration endpoints, like direct access management API, Git configuration management endpoint, or self-hosted gateways configuration endpoint.",
          "displayName": "API Management should disable public network access to the service configuration endpoints",
          "metadata": {
            "category": "API Management",
            "version": "1.0.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.ApiManagement/service/tenant",
                "name": "[if(equals(parameters('endpointType'), 'Management'), 'access', if(equals(parameters('endpointType'), 'Git'), 'gitaccess', 'gatewayaccess'))]",
                "existenceCondition": {
                  "field": "Microsoft.ApiManagement/service/tenant/enabled",
                  "equals": false
                },
                "evaluationDelay": "AfterProvisioningSuccess"
              }
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.ApiManagement/service"
                },
                {
                  "field": "Microsoft.ApiManagement/service/sku.name",
                  "notEquals": "Consumption"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "df73bd95-24da-4a4f-96b9-4e8b94b402bd"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/549814b6-3212-4203-bdc8-1548d342fb67",
        "Name": "549814b6-3212-4203-bdc8-1548d342fb67",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/549814b6-3212-4203-bdc8-1548d342fb67",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "To prevent service secrets from being shared with read-only users, the minimum API version should be set to 2019-12-01 or higher.",
          "displayName": "API Management minimum API version should be set to 2019-12-01 or higher",
          "metadata": {
            "category": "API Management",
            "version": "1.0.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.ApiManagement/service"
                },
                {
                  "field": "Microsoft.ApiManagement/service/apiVersionConstraint.minApiVersion",
                  "notMatch": "2019-12-01"
                },
                {
                  "field": "Microsoft.ApiManagement/service/apiVersionConstraint.minApiVersion",
                  "notMatch": "202#-##-##-preview"
                },
                {
                  "field": "Microsoft.ApiManagement/service/apiVersionConstraint.minApiVersion",
                  "notMatch": "202#-##-##"
                },
                {
                  "field": "Microsoft.ApiManagement/service/sku.name",
                  "notEquals": "Consumption"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "549814b6-3212-4203-bdc8-1548d342fb67"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c15dcc82-b93c-4dcb-9332-fbf121685b54",
        "Name": "c15dcc82-b93c-4dcb-9332-fbf121685b54",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/c15dcc82-b93c-4dcb-9332-fbf121685b54",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled",
                "Deny"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Calls from API Management to backends should use some form of authentication, whether via certificates or credentials. Does not apply to Service Fabric backends.",
          "displayName": "API Management calls to API backends should be authenticated",
          "metadata": {
            "category": "API Management",
            "version": "1.0.1",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.ApiManagement/service/backends"
                },
                {
                  "field": "Microsoft.ApiManagement/service/backends/url",
                  "exists": "true"
                },
                {
                  "field": "Microsoft.ApiManagement/service/backends/protocol",
                  "equals": "http"
                },
                {
                  "allOf": [
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.ApiManagement/service/backends/credentials.certificate",
                          "exists": "false"
                        },
                        {
                          "value": "[length(field('Microsoft.ApiManagement/service/backends/credentials.certificate[*]'))]",
                          "equals": 0
                        }
                      ]
                    },
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.ApiManagement/service/backends/credentials.authorization.scheme",
                          "exists": "false"
                        },
                        {
                          "field": "Microsoft.ApiManagement/service/backends/credentials.authorization.parameter",
                          "exists": "false"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "c15dcc82-b93c-4dcb-9332-fbf121685b54"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/40e85574-ef33-47e8-a854-7a65c7500560",
        "Name": "40e85574-ef33-47e8-a854-7a65c7500560",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/40e85574-ef33-47e8-a854-7a65c7500560",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Disabling local authentication methods and allowing only Azure Active Directory Authentication improves security by ensuring that Azure MySQL flexible server can exclusively be accessed by Azure Active Directory identities.",
          "displayName": "Azure MySQL flexible server should have Azure Active Directory Only Authentication enabled",
          "metadata": {
            "category": "SQL",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.DBForMySql/flexibleServers/configurations",
                "name": "aad_auth_only",
                "existenceCondition": {
                  "field": "Microsoft.DBForMySql/flexibleServers/configurations/value",
                  "equals": "ON"
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.DBForMySql/flexibleServers"
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "40e85574-ef33-47e8-a854-7a65c7500560"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/3ac7c827-eea2-4bde-acc7-9568cd320efa",
        "Name": "3ac7c827-eea2-4bde-acc7-9568cd320efa",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/3ac7c827-eea2-4bde-acc7-9568cd320efa",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Audits virtual machines to detect whether they contain secret findings from the secret scanning solutions on your virtual machines.",
          "displayName": "Machines should have secret findings resolved",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.2",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "17618b1a-ed14-49bb-b37f-9f8ba967be8b",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "in": [
                "Microsoft.Compute/virtualMachines",
                "Microsoft.ClassicCompute/virtualMachines"
              ]
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "3ac7c827-eea2-4bde-acc7-9568cd320efa"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c8acafaf-3d23-44d1-9624-978ef0f8652c",
        "Name": "c8acafaf-3d23-44d1-9624-978ef0f8652c",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/c8acafaf-3d23-44d1-9624-978ef0f8652c",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "As a security best practice, API endpoints that haven't received traffic for 30 days are considered unused and should be removed from the Azure API Management service. Keeping unused API endpoints may pose a security risk to your organization. These may be APIs that should have been deprecated from the Azure API Management service but may have been accidentally left active. Such APIs typically do not receive the most up to date security coverage.",
          "displayName": "[Preview]: API endpoints that are unused should be disabled and removed from the Azure API Management service",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.0-preview",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z",
            "preview": true
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "4e8c00a2-e8bc-42a8-9e12-99584a51ad10",
                "existencecondition": {
                  "field": "microsoft.security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.ApiManagement/service/apis/operations"
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "c8acafaf-3d23-44d1-9624-978ef0f8652c"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/8ac833bd-f505-48d5-887e-c993a1d3eea0",
        "Name": "8ac833bd-f505-48d5-887e-c993a1d3eea0",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/8ac833bd-f505-48d5-887e-c993a1d3eea0",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "API endpoints published within Azure API Management should enforce authentication to help minimize security risk. Authentication mechanisms are sometimes implemented incorrectly or are missing. This allows attackers to exploit implementation flaws and to access data. Learn More about the OWASP API Threat for Broken User Authentication here: https://learn.microsoft.com/azure/api-management/mitigate-owasp-api-threats#broken-user-authentication",
          "displayName": "[Preview]: API endpoints in Azure API Management should be authenticated",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.0-preview",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z",
            "preview": true
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/assessments",
                "name": "91af2040-7874-4659-abf0-578e1f8d07dc",
                "existenceCondition": {
                  "field": "Microsoft.Security/assessments/status.code",
                  "in": [
                    "NotApplicable",
                    "Healthy"
                  ]
                }
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.ApiManagement/service/apis/operations"
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "8ac833bd-f505-48d5-887e-c993a1d3eea0"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/640d2586-54d2-465f-877f-9ffc1d2109f4",
        "Name": "640d2586-54d2-465f-877f-9ffc1d2109f4",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/640d2586-54d2-465f-877f-9ffc1d2109f4",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "AuditIfNotExists",
                "Disabled"
              ],
              "defaultValue": "AuditIfNotExists",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Microsoft Defender for Storage detects potential threats to your storage accounts. It helps prevent the three major impacts on your data and workload: malicious file uploads, sensitive data exfiltration, and data corruption. The new Defender for Storage plan includes Malware Scanning and Sensitive Data Threat Detection. This plan also provides a predictable pricing structure (per storage account) for control over coverage and costs.",
          "displayName": "Microsoft Defender for Storage should be enabled",
          "metadata": {
            "category": "Security Center",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]",
              "details": {
                "type": "Microsoft.Security/pricings",
                "name": "StorageAccounts",
                "existenceCondition": {
                  "allOf": [
                    {
                      "field": "Microsoft.Security/pricings/pricingTier",
                      "equals": "Standard"
                    },
                    {
                      "field": "Microsoft.Security/pricings/subPlan",
                      "equals": "DefenderForStorageV2"
                    },
                    {
                      "equals": 2,
                      "count": {
                        "field": "Microsoft.Security/pricings/extensions[*]",
                        "where": {
                          "allOf": [
                            {
                              "field": "Microsoft.Security/pricings/extensions[*].name",
                              "in": [
                                "OnUploadMalwareScanning",
                                "SensitiveDataDiscovery"
                              ]
                            },
                            {
                              "field": "Microsoft.Security/pricings/extensions[*].isEnabled",
                              "equals": "true"
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "existenceScope": "subscription"
              }
            },
            "if": {
              "field": "type",
              "equals": "Microsoft.Resources/subscriptions"
            }
          },
          "mode": "All"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "640d2586-54d2-465f-877f-9ffc1d2109f4"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/71ef260a-8f18-47b7-abcb-62d0673d94dc",
        "Name": "71ef260a-8f18-47b7-abcb-62d0673d94dc",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/71ef260a-8f18-47b7-abcb-62d0673d94dc",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Disabling local authentication methods improves security by ensuring that Cognitive Services accounts require Azure Active Directory identities exclusively for authentication. Learn more at: https://aka.ms/cs/auth.",
          "displayName": "Cognitive Services accounts should have local authentication methods disabled",
          "metadata": {
            "category": "Cognitive Services",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.CognitiveServices/accounts"
                },
                {
                  "field": "Microsoft.CognitiveServices/accounts/disableLocalAuth",
                  "notEquals": true
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "71ef260a-8f18-47b7-abcb-62d0673d94dc"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/cddd188c-4b82-4c48-a19d-ddf74ee66a01",
        "Name": "cddd188c-4b82-4c48-a19d-ddf74ee66a01",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/cddd188c-4b82-4c48-a19d-ddf74ee66a01",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Azure Private Link lets you connect your virtual networks to Azure services without a public IP address at the source or destination. The Private Link platform handles the connectivity between the consumer and services over the Azure backbone network. By mapping private endpoints to Cognitive Services, you'll reduce the potential for data leakage. Learn more about private links at: https://go.microsoft.com/fwlink/?linkid=2129800.",
          "displayName": "Cognitive Services should use private link",
          "metadata": {
            "category": "Cognitive Services",
            "version": "3.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.CognitiveServices/accounts"
                },
                {
                  "count": {
                    "field": "Microsoft.CognitiveServices/accounts/privateEndpointConnections[*]",
                    "where": {
                      "field": "Microsoft.CognitiveServices/accounts/privateEndpointConnections[*].privateLinkServiceConnectionState.status",
                      "equals": "Approved"
                    }
                  },
                  "less": 1
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "cddd188c-4b82-4c48-a19d-ddf74ee66a01"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/fc4d8e41-e223-45ea-9bf5-eada37891d87",
        "Name": "fc4d8e41-e223-45ea-9bf5-eada37891d87",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/fc4d8e41-e223-45ea-9bf5-eada37891d87",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Use encryption at host to get end-to-end encryption for your virtual machine and virtual machine scale set data. Encryption at host enables encryption at rest for your temporary disk and OS/data disk caches. Temporary and ephemeral OS disks are encrypted with platform-managed keys when encryption at host is enabled. OS/data disk caches are encrypted at rest with either customer-managed or platform-managed key, depending on the encryption type selected on the disk. Learn more at https://aka.ms/vm-hbe.",
          "displayName": "Virtual machines and virtual machine scale sets should have encryption at host enabled",
          "metadata": {
            "category": "Compute",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "anyOf": [
                {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachines"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachines/securityProfile.encryptionAtHost",
                      "notEquals": "true"
                    }
                  ]
                },
                {
                  "allOf": [
                    {
                      "field": "type",
                      "equals": "Microsoft.Compute/virtualMachineScaleSets"
                    },
                    {
                      "field": "Microsoft.Compute/virtualMachineScaleSets/virtualMachineProfile.securityProfile.encryptionAtHost",
                      "notEquals": "true"
                    }
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "fc4d8e41-e223-45ea-9bf5-eada37891d87"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/797b37f7-06b8-444c-b1ad-fc62867f335a",
        "Name": "797b37f7-06b8-444c-b1ad-fc62867f335a",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/797b37f7-06b8-444c-b1ad-fc62867f335a",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Disabling public network access improves security by ensuring that your CosmosDB account isn't exposed on the public internet. Creating private endpoints can limit exposure of your CosmosDB account. Learn more at: https://docs.microsoft.com/azure/cosmos-db/how-to-configure-private-endpoints#blocking-public-network-access-during-account-creation.",
          "displayName": "Azure Cosmos DB should disable public network access",
          "metadata": {
            "category": "Cosmos DB",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.DocumentDB/databaseAccounts"
                },
                {
                  "field": "Microsoft.DocumentDB/databaseAccounts/publicNetworkAccess",
                  "notEquals": "Disabled"
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "797b37f7-06b8-444c-b1ad-fc62867f335a"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/58440f8a-10c5-4151-bdce-dfbaad4a20b7",
        "Name": "58440f8a-10c5-4151-bdce-dfbaad4a20b7",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/58440f8a-10c5-4151-bdce-dfbaad4a20b7",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Azure Private Link lets you connect your virtual network to Azure services without a public IP address at the source or destination. The Private Link platform handles the connectivity between the consumer and services over the Azure backbone network. By mapping private endpoints to your CosmosDB account, data leakage risks are reduced. Learn more about private links at: https://docs.microsoft.com/azure/cosmos-db/how-to-configure-private-endpoints.",
          "displayName": "CosmosDB accounts should use private link",
          "metadata": {
            "category": "Cosmos DB",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.DocumentDB/databaseAccounts"
                },
                {
                  "count": {
                    "field": "Microsoft.DocumentDB/databaseAccounts/privateEndpointConnections[*]",
                    "where": {
                      "field": "Microsoft.DocumentDB/databaseAccounts/privateEndpointConnections[*].privateLinkServiceConnectionState.status",
                      "equals": "Approved"
                    }
                  },
                  "less": 1
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "58440f8a-10c5-4151-bdce-dfbaad4a20b7"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/21a6bc25-125e-4d13-b82d-2e19b7208ab7",
        "Name": "21a6bc25-125e-4d13-b82d-2e19b7208ab7",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/21a6bc25-125e-4d13-b82d-2e19b7208ab7",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Disabling local authentication methods improves security by ensuring that VPN Gateways use only Azure Active Directory identities for authentication. Learn more about Azure AD authentication at https://docs.microsoft.com/azure/vpn-gateway/openvpn-azure-ad-tenant",
          "displayName": "VPN gateways should use only Azure Active Directory (Azure AD) authentication for point-to-site users",
          "metadata": {
            "category": "Network",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Network/virtualNetworkGateways"
                },
                {
                  "field": "Microsoft.Network/virtualNetworkGateways/vpnClientConfiguration.vpnClientAddressPool.addressPrefixes",
                  "exists": "true"
                },
                {
                  "count": {
                    "field": "Microsoft.Network/virtualNetworkGateways/vpnClientConfiguration.vpnAuthenticationTypes[*]",
                    "where": {
                      "field": "Microsoft.Network/virtualNetworkGateways/vpnClientConfiguration.vpnAuthenticationTypes[*]",
                      "notcontains": "AAD"
                    }
                  },
                  "greaterOrEquals": 1
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "21a6bc25-125e-4d13-b82d-2e19b7208ab7"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/32e6bbec-16b6-44c2-be37-c5b672d103cf",
        "Name": "32e6bbec-16b6-44c2-be37-c5b672d103cf",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/32e6bbec-16b6-44c2-be37-c5b672d103cf",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Disabled",
                "Deny"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Setting TLS version to 1.2 or newer improves security by ensuring your Azure SQL Database can only be accessed from clients using TLS 1.2 or newer. Using versions of TLS less than 1.2 is not recommended since they have well documented security vulnerabilities.",
          "displayName": "Azure SQL Database should be running TLS version 1.2 or newer",
          "metadata": {
            "category": "SQL",
            "version": "2.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Sql/servers"
                },
                {
                  "anyOf": [
                    {
                      "field": "Microsoft.Sql/servers/minimalTlsVersion",
                      "exists": false
                    },
                    {
                      "field": "Microsoft.Sql/servers/minimalTlsVersion",
                      "less": "1.2"
                    }
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "32e6bbec-16b6-44c2-be37-c5b672d103cf"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9dfea752-dd46-4766-aed1-c355fa93fb91",
        "Name": "9dfea752-dd46-4766-aed1-c355fa93fb91",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/9dfea752-dd46-4766-aed1-c355fa93fb91",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "Enable or disable the execution of the policy",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Disabling public network access (public endpoint) on Azure SQL Managed Instances improves security by ensuring that they can only be accessed from inside their virtual networks or via Private Endpoints. To learn more about public network access, visit https://aka.ms/mi-public-endpoint.",
          "displayName": "Azure SQL Managed Instances should disable public network access",
          "metadata": {
            "category": "SQL",
            "version": "1.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Sql/managedInstances"
                },
                {
                  "field": "Microsoft.Sql/managedInstances/publicDataEndpointEnabled",
                  "equals": true
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "9dfea752-dd46-4766-aed1-c355fa93fb91"
      },
      {
        "PolicyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/8c6a50c6-9ffd-4ae7-986f-5fa6111f9a54",
        "Name": "8c6a50c6-9ffd-4ae7-986f-5fa6111f9a54",
        "SubscriptionId": "",
        "ResourceId": "/providers/Microsoft.Authorization/policyDefinitions/8c6a50c6-9ffd-4ae7-986f-5fa6111f9a54",
        "Properties": {
          "parameters": {
            "effect": {
              "allowedValues": [
                "Audit",
                "Deny",
                "Disabled"
              ],
              "defaultValue": "Audit",
              "metadata": {
                "description": "The effect determines what happens when the policy rule is evaluated to match",
                "displayName": "Effect"
              },
              "schema": null,
              "type": "String"
            }
          },
          "description": "Audit requirement of Azure Active Directory (Azure AD) to authorize requests for your storage account. By default, requests can be authorized with either Azure Active Directory credentials, or by using the account access key for Shared Key authorization. Of these two types of authorization, Azure AD provides superior security and ease of use over Shared Key, and is recommended by Microsoft.",
          "displayName": "Storage accounts should prevent shared key access",
          "metadata": {
            "category": "Storage",
            "version": "2.0.0",
            "lastSyncedToArgOn": "2023-11-06T15:30:00.6529Z"
          },
          "version": null,
          "oldVersions": null,
          "policyType": "BuiltIn",
          "versions": null,
          "policyRule": {
            "then": {
              "effect": "[parameters('effect')]"
            },
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Storage/storageAccounts"
                },
                {
                  "anyOf": [
                    {
                      "anyOf": [
                        {
                          "field": "Microsoft.Storage/storageAccounts/allowSharedKeyAccess",
                          "exists": "false"
                        },
                        {
                          "field": "Microsoft.Storage/storageAccounts/allowSharedKeyAccess",
                          "equals": ""
                        }
                      ]
                    },
                    {
                      "field": "Microsoft.Storage/storageAccounts/allowSharedKeyAccess",
                      "equals": "true"
                    }
                  ]
                }
              ]
            }
          },
          "mode": "Indexed"
        },
        "ResourceType": "microsoft.authorization/policydefinitions",
        "ResourceName": "8c6a50c6-9ffd-4ae7-986f-5fa6111f9a54"
      }
    ],
    "ResourceId": "/subscriptions/bf16f701-98ed-45e4-b38c-2661ca1075b0/providers/Microsoft.Authorization/policyAssignments/SecurityCenterBuiltIn",
    "ResourceName": "SecurityCenterBuiltIn",
    "PolicyAssignmentId": "/subscriptions/bf16f701-98ed-45e4-b38c-2661ca1075b0/providers/Microsoft.Authorization/policyAssignments/SecurityCenterBuiltIn",
    "ResourceType": null,
    "Name": "SecurityCenterBuiltIn",
    "ResourceGroupName": null,
    "Location": "global",
    "Properties": {
      "Parameters": {},
      "Metadata": {
        "updatedBy": null,
        "updatedOn": null,
        "createdOn": "2023-10-17T12:24:29.022Z",
        "createdBy": "ad55dfcb-fd25-4512-9d1e-d06c865c98c8",
        "excludedOutOfTheBoxStandards": [
          "PCI DSS 3.2.1",
          "ISO 27001",
          "SOC TSP"
        ],
        "assignedBy": "Security Center"
      },
      "Description": "This is the default set of policies monitored by Azure Security Center. It was automatically assigned as part of onboarding to Security Center. The default assignment contains only audit policies. For more information please visit https://aka.ms/ascpolicies",
      "EnforcementMode": null,
      "Scope": "/subscriptions/bf16f701-98ed-45e4-b38c-2661ca1075b0",
      "NonComplianceMessages": null,
      "PolicyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/1f3afdf9-d0c9-4c3d-847f-89da613e70a8",
      "DisplayName": "ASC Default (subscription: bf16f701-98ed-45e4-b38c-2661ca1075b0)",
      "NotScope": null
    },
    "SubscriptionId": "bf16f701-98ed-45e4-b38c-2661ca1075b0",
    "Sku": null
  }
]
